commit 78ddef283fe35e170d5f075f3e9649d9379b2b8f
Author: Alejandro Tard√≠n <alejandro.tardin@liferay.com>
Date:   Thu Apr 2 15:42:30 2020 +0200

    LPS-103587 Rendering a captcha in the flags modal

diff --git a/modules/apps/flags/flags-taglib/package.json b/modules/apps/flags/flags-taglib/package.json
index 3eee4baff528..829845ad3203 100644
--- a/modules/apps/flags/flags-taglib/package.json
+++ b/modules/apps/flags/flags-taglib/package.json
@@ -6,6 +6,7 @@
 		"clay-button": "2.21.0",
 		"clay-icon": "2.21.0",
 		"frontend-js-web": "*",
+		"metal-dom": "2.16.8",
 		"metal-soy": "2.16.8",
 		"metal-state": "2.16.8",
 		"prop-types": "15.7.2",
diff --git a/modules/apps/flags/flags-taglib/src/main/java/com/liferay/flags/taglib/servlet/taglib/react/FlagsTag.java b/modules/apps/flags/flags-taglib/src/main/java/com/liferay/flags/taglib/servlet/taglib/react/FlagsTag.java
index 6e8ae2ad179f..c06a6269f744 100644
--- a/modules/apps/flags/flags-taglib/src/main/java/com/liferay/flags/taglib/servlet/taglib/react/FlagsTag.java
+++ b/modules/apps/flags/flags-taglib/src/main/java/com/liferay/flags/taglib/servlet/taglib/react/FlagsTag.java
@@ -185,6 +185,8 @@ public class FlagsTag extends IncludeTag {
 
 				Map<String, Object> props = HashMapBuilder.<String, Object>put(
 					"baseData", _getDataJSONObject(themeDisplay)
+				).put(
+					"captchaUri", FlagsTagUtil.getCaptchaURI(httpServletRequest)
 				).put(
 					"companyName",
 					() -> {
diff --git a/modules/apps/flags/flags-taglib/src/main/java/com/liferay/flags/taglib/servlet/taglib/util/FlagsTagUtil.java b/modules/apps/flags/flags-taglib/src/main/java/com/liferay/flags/taglib/servlet/taglib/util/FlagsTagUtil.java
index 2b8ed44099ed..701bcefc7f41 100644
--- a/modules/apps/flags/flags-taglib/src/main/java/com/liferay/flags/taglib/servlet/taglib/util/FlagsTagUtil.java
+++ b/modules/apps/flags/flags-taglib/src/main/java/com/liferay/flags/taglib/servlet/taglib/util/FlagsTagUtil.java
@@ -18,6 +18,7 @@ import com.liferay.flags.configuration.FlagsGroupServiceConfiguration;
 import com.liferay.portal.kernel.exception.PortalException;
 import com.liferay.portal.kernel.language.LanguageUtil;
 import com.liferay.portal.kernel.module.configuration.ConfigurationProviderUtil;
+import com.liferay.portal.kernel.portlet.LiferayPortletURL;
 import com.liferay.portal.kernel.portlet.PortletURLFactoryUtil;
 import com.liferay.portal.kernel.portlet.PortletURLUtil;
 import com.liferay.portal.kernel.theme.ThemeDisplay;
@@ -40,6 +41,17 @@ import javax.servlet.http.HttpServletRequest;
  */
 public class FlagsTagUtil {
 
+	public static String getCaptchaURI(HttpServletRequest httpServletRequest) {
+		LiferayPortletURL captchaResourceURL = PortletURLFactoryUtil.create(
+			httpServletRequest, PortletKeys.FLAGS,
+			PortletRequest.RESOURCE_PHASE);
+
+		captchaResourceURL.setCopyCurrentRenderParameters(false);
+		captchaResourceURL.setResourceID("/flags/captcha");
+
+		return captchaResourceURL.toString();
+	}
+
 	public static String getCurrentURL(HttpServletRequest httpServletRequest) {
 		PortletRequest portletRequest =
 			(PortletRequest)httpServletRequest.getAttribute(
diff --git a/modules/apps/flags/flags-taglib/src/main/resources/META-INF/resources/flags/js/components/Captcha.js b/modules/apps/flags/flags-taglib/src/main/resources/META-INF/resources/flags/js/components/Captcha.js
new file mode 100644
index 000000000000..e142ee5d06c9
--- /dev/null
+++ b/modules/apps/flags/flags-taglib/src/main/resources/META-INF/resources/flags/js/components/Captcha.js
@@ -0,0 +1,44 @@
+/**
+ * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
+ *
+ * This library is free software; you can redistribute it and/or modify it under
+ * the terms of the GNU Lesser General Public License as published by the Free
+ * Software Foundation; either version 2.1 of the License, or (at your option)
+ * any later version.
+ *
+ * This library is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+ * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
+ * details.
+ */
+
+import {fetch} from 'frontend-js-web';
+import {globalEval} from 'metal-dom';
+import PropTypes from 'prop-types';
+import React, {useEffect, useLayoutEffect, useRef, useState} from 'react';
+
+function Captcha({uri}) {
+	const ref = useRef(null);
+	const [html, setHtml] = useState(null);
+
+	useEffect(() => {
+		fetch(uri)
+			.then(res => res.text())
+			.then(setHtml);
+	}, [uri]);
+
+	useLayoutEffect(() => {
+		if (html) {
+			ref.current.innerHTML = html;
+			globalEval.runScriptsInElement(ref.current);
+		}
+	}, [html]);
+
+	return html ? <div className="captcha" ref={ref} /> : null;
+}
+
+Captcha.propTypes = {
+	uri: PropTypes.string.isRequired,
+};
+
+export default Captcha;
diff --git a/modules/apps/flags/flags-taglib/src/main/resources/META-INF/resources/flags/js/components/Flags.es.js b/modules/apps/flags/flags-taglib/src/main/resources/META-INF/resources/flags/js/components/Flags.es.js
index 09ff6b1503ff..e52ba08de68f 100644
--- a/modules/apps/flags/flags-taglib/src/main/resources/META-INF/resources/flags/js/components/Flags.es.js
+++ b/modules/apps/flags/flags-taglib/src/main/resources/META-INF/resources/flags/js/components/Flags.es.js
@@ -32,6 +32,7 @@ import FlagsModal from './FlagsModal.es';
 
 const Flags = ({
 	baseData,
+	captchaUri,
 	companyName,
 	disabled = false,
 	forceLogin = false,
@@ -158,6 +159,7 @@ const Flags = ({
 			</ClayButton>
 			{reportDialogOpen && (
 				<FlagsModal
+					captchaUri={captchaUri}
 					companyName={companyName}
 					handleClose={onClose}
 					handleInputChange={handleInputChange}
@@ -176,6 +178,7 @@ const Flags = ({
 };
 Flags.propTypes = {
 	baseData: PropTypes.object.isRequired,
+	captchaUri: PropTypes.string.isRequired,
 	companyName: PropTypes.string.isRequired,
 	disabled: PropTypes.bool,
 	forceLogin: PropTypes.bool,
diff --git a/modules/apps/flags/flags-taglib/src/main/resources/META-INF/resources/flags/js/components/FlagsModal.es.js b/modules/apps/flags/flags-taglib/src/main/resources/META-INF/resources/flags/js/components/FlagsModal.es.js
index 9c82e5150086..a6a866706965 100755
--- a/modules/apps/flags/flags-taglib/src/main/resources/META-INF/resources/flags/js/components/FlagsModal.es.js
+++ b/modules/apps/flags/flags-taglib/src/main/resources/META-INF/resources/flags/js/components/FlagsModal.es.js
@@ -26,8 +26,10 @@ import {
 	STATUS_SUCCESS,
 } from '../constants.es';
 import {sub} from '../utils.es';
+import Captcha from './Captcha';
 
 const ModalContentForm = ({
+	captchaUri,
 	handleClose,
 	handleInputChange,
 	handleSubmit,
@@ -113,6 +115,7 @@ const ModalContentForm = ({
 						/>
 					</div>
 				)}
+				<Captcha uri={captchaUri} />
 			</ClayModal.Body>
 			<ClayModal.Footer
 				last={
@@ -192,6 +195,7 @@ const ModalBody = ({companyName, status}) => {
 };
 
 const FlagsModal = ({
+	captchaUri,
 	companyName,
 	handleClose,
 	handleInputChange,
@@ -211,6 +215,7 @@ const FlagsModal = ({
 			</ClayModal.Header>
 			{status === STATUS_REPORT ? (
 				<ModalContentForm
+					captchaUri={captchaUri}
 					handleClose={handleClose}
 					handleInputChange={handleInputChange}
 					handleSubmit={handleSubmit}
@@ -244,6 +249,7 @@ const FlagsModal = ({
 };
 
 FlagsModal.propTypes = {
+	captchaUri: PropTypes.string.isRequired,
 	companyName: PropTypes.string.isRequired,
 	handleClose: PropTypes.func.isRequired,
 	handleInputChange: PropTypes.func.isRequired,