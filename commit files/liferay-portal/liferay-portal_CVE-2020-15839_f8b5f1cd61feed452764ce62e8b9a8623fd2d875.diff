commit f8b5f1cd61feed452764ce62e8b9a8623fd2d875
Author: Jeyvison Nascimento <jeyvison.nascimento@liferay.com>
Date:   Mon May 25 15:35:44 2020 -0300

    Revert "LPS-113779 set max file size to Document Library defaults"
    
    This reverts commit 3b12e97b02546f6a6c41793da67745f91490aec0.

diff --git a/modules/apps/portal-vulcan/portal-vulcan-impl/build.gradle b/modules/apps/portal-vulcan/portal-vulcan-impl/build.gradle
index c78d8e3142b6..fcdaf3b6959c 100644
--- a/modules/apps/portal-vulcan/portal-vulcan-impl/build.gradle
+++ b/modules/apps/portal-vulcan/portal-vulcan-impl/build.gradle
@@ -55,7 +55,6 @@ dependencies {
 	compileOnly group: "org.osgi", name: "osgi.core", version: "6.0.0"
 	compileOnly group: "org.springframework", name: "spring-tx", version: "5.2.2.RELEASE"
 	compileOnly project(":apps:batch-engine:batch-engine-api")
-	compileOnly project(":apps:document-library:document-library-api")
 	compileOnly project(":apps:headless:headless-batch-engine:headless-batch-engine-api")
 	compileOnly project(":apps:oauth2-provider:oauth2-provider-scope-api")
 	compileOnly project(":apps:portal-odata:portal-odata-api")
diff --git a/modules/apps/portal-vulcan/portal-vulcan-impl/src/main/java/com/liferay/portal/vulcan/internal/jaxrs/feature/VulcanFeature.java b/modules/apps/portal-vulcan/portal-vulcan-impl/src/main/java/com/liferay/portal/vulcan/internal/jaxrs/feature/VulcanFeature.java
index 15e95e54a5a2..50102dd402e1 100644
--- a/modules/apps/portal-vulcan/portal-vulcan-impl/src/main/java/com/liferay/portal/vulcan/internal/jaxrs/feature/VulcanFeature.java
+++ b/modules/apps/portal-vulcan/portal-vulcan-impl/src/main/java/com/liferay/portal/vulcan/internal/jaxrs/feature/VulcanFeature.java
@@ -17,7 +17,6 @@ package com.liferay.portal.vulcan.internal.jaxrs.feature;
 import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;
 import com.fasterxml.jackson.jaxrs.xml.JacksonXMLProvider;
 
-import com.liferay.document.library.kernel.util.DLValidator;
 import com.liferay.portal.kernel.language.Language;
 import com.liferay.portal.kernel.search.filter.Filter;
 import com.liferay.portal.kernel.service.GroupLocalService;
@@ -110,6 +109,7 @@ public class VulcanFeature implements Feature {
 		featureContext.register(InvalidFilterExceptionMapper.class);
 		featureContext.register(InvalidFormatExceptionMapper.class);
 		featureContext.register(LogContainerRequestFilter.class);
+		featureContext.register(MultipartBodyMessageBodyReader.class);
 		featureContext.register(NestedFieldsContainerRequestFilter.class);
 		featureContext.register(NoSuchModelExceptionMapper.class);
 		featureContext.register(NotAcceptableExceptionMapper.class);
@@ -139,9 +139,6 @@ public class VulcanFeature implements Feature {
 		featureContext.register(
 			new FilterContextProvider(
 				_expressionConvert, _filterParserProvider, _language, _portal));
-		featureContext.register(
-			new MultipartBodyMessageBodyReader(
-				_dlValidator.getMaxAllowableSize()));
 
 		_nestedFieldsWriterInterceptor = new NestedFieldsWriterInterceptor(
 			_bundleContext);
@@ -184,9 +181,6 @@ public class VulcanFeature implements Feature {
 
 	private BundleContext _bundleContext;
 
-	@Reference
-	private DLValidator _dlValidator;
-
 	@Reference(
 		target = "(result.class.name=com.liferay.portal.kernel.search.filter.Filter)"
 	)
diff --git a/modules/apps/portal-vulcan/portal-vulcan-impl/src/main/java/com/liferay/portal/vulcan/internal/jaxrs/message/body/MultipartBodyMessageBodyReader.java b/modules/apps/portal-vulcan/portal-vulcan-impl/src/main/java/com/liferay/portal/vulcan/internal/jaxrs/message/body/MultipartBodyMessageBodyReader.java
index 32aed1bf3162..0dbc1f09e78e 100644
--- a/modules/apps/portal-vulcan/portal-vulcan-impl/src/main/java/com/liferay/portal/vulcan/internal/jaxrs/message/body/MultipartBodyMessageBodyReader.java
+++ b/modules/apps/portal-vulcan/portal-vulcan-impl/src/main/java/com/liferay/portal/vulcan/internal/jaxrs/message/body/MultipartBodyMessageBodyReader.java
@@ -44,7 +44,6 @@ import javax.ws.rs.ext.Provider;
 import javax.ws.rs.ext.Providers;
 
 import org.apache.commons.fileupload.FileItem;
-import org.apache.commons.fileupload.FileUploadBase;
 import org.apache.commons.fileupload.disk.DiskFileItemFactory;
 import org.apache.commons.fileupload.servlet.ServletFileUpload;
 import org.apache.commons.fileupload.util.Streams;
@@ -58,10 +57,6 @@ import org.apache.commons.fileupload.util.Streams;
 public class MultipartBodyMessageBodyReader
 	implements MessageBodyReader<MultipartBody> {
 
-	public MultipartBodyMessageBodyReader(long fileMaxSize) {
-		_fileMaxSize = fileMaxSize;
-	}
-
 	@Override
 	public boolean isReadable(
 		Class<?> clazz, Type genericType, Annotation[] annotations,
@@ -108,9 +103,6 @@ public class MultipartBodyMessageBodyReader
 			ServletFileUpload servletFileUpload = new ServletFileUpload(
 				new DiskFileItemFactory());
 
-			servletFileUpload.setFileSizeMax(_fileMaxSize);
-			servletFileUpload.setSizeMax(_fileMaxSize);
-
 			List<FileItem> fileItems = servletFileUpload.parseRequest(
 				_httpServletRequest);
 
@@ -133,22 +125,12 @@ public class MultipartBodyMessageBodyReader
 			return MultipartBody.of(
 				binaryFiles, contextResolver::getContext, values);
 		}
-		catch (FileUploadBase.SizeLimitExceededException
-					sizeLimitExceededException) {
-
-			throw new BadRequestException(
-				"Please enter a file with a valid file size no larger than " +
-					_fileMaxSize,
-				sizeLimitExceededException);
-		}
 		catch (Exception exception) {
 			throw new BadRequestException(
 				"Request body is not a valid multipart form", exception);
 		}
 	}
 
-	private final long _fileMaxSize;
-
 	@Context
 	private HttpServletRequest _httpServletRequest;
 