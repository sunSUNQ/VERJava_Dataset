commit f7e89f2e44df24639d982d048876a1cc8dbc3b71
Author: Daniel Couso <daniel.couso@liferay.com>
Date:   Thu Mar 12 16:55:51 2020 +0100

    LPS-110168 Build Service

diff --git a/portal-impl/src/com/liferay/portal/service/http/LayoutServiceHttp.java b/portal-impl/src/com/liferay/portal/service/http/LayoutServiceHttp.java
index 99794906c00d..6c22b8865af1 100644
--- a/portal-impl/src/com/liferay/portal/service/http/LayoutServiceHttp.java
+++ b/portal-impl/src/com/liferay/portal/service/http/LayoutServiceHttp.java
@@ -1125,13 +1125,60 @@ public class LayoutServiceHttp {
 	}
 
 	public static java.util.List<com.liferay.portal.kernel.model.Layout>
-		getLayouts(HttpPrincipal httpPrincipal, long groupId, String type) {
+			getLayouts(
+				HttpPrincipal httpPrincipal, long groupId,
+				boolean privateLayout, String keywords, String[] types,
+				int start, int end,
+				com.liferay.portal.kernel.util.OrderByComparator
+					<com.liferay.portal.kernel.model.Layout> obc)
+		throws com.liferay.portal.kernel.exception.PortalException {
 
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "getLayouts",
 				_getLayoutsParameterTypes25);
 
+			MethodHandler methodHandler = new MethodHandler(
+				methodKey, groupId, privateLayout, keywords, types, start, end,
+				obc);
+
+			Object returnObj = null;
+
+			try {
+				returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);
+			}
+			catch (Exception exception) {
+				if (exception instanceof
+						com.liferay.portal.kernel.exception.PortalException) {
+
+					throw (com.liferay.portal.kernel.exception.PortalException)
+						exception;
+				}
+
+				throw new com.liferay.portal.kernel.exception.SystemException(
+					exception);
+			}
+
+			return (java.util.List<com.liferay.portal.kernel.model.Layout>)
+				returnObj;
+		}
+		catch (com.liferay.portal.kernel.exception.SystemException
+					systemException) {
+
+			_log.error(systemException, systemException);
+
+			throw systemException;
+		}
+	}
+
+	public static java.util.List<com.liferay.portal.kernel.model.Layout>
+		getLayouts(HttpPrincipal httpPrincipal, long groupId, String type) {
+
+		try {
+			MethodKey methodKey = new MethodKey(
+				LayoutServiceUtil.class, "getLayouts",
+				_getLayoutsParameterTypes26);
+
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, type);
 
@@ -1165,7 +1212,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "getLayouts",
-				_getLayoutsParameterTypes26);
+				_getLayoutsParameterTypes27);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, type, start, end);
@@ -1192,13 +1239,55 @@ public class LayoutServiceHttp {
 		}
 	}
 
+	public static int getLayoutsCount(
+			HttpPrincipal httpPrincipal,
+			com.liferay.portal.kernel.model.Group group, boolean privateLayout,
+			String keywords, String[] types)
+		throws com.liferay.portal.kernel.exception.PortalException {
+
+		try {
+			MethodKey methodKey = new MethodKey(
+				LayoutServiceUtil.class, "getLayoutsCount",
+				_getLayoutsCountParameterTypes28);
+
+			MethodHandler methodHandler = new MethodHandler(
+				methodKey, group, privateLayout, keywords, types);
+
+			Object returnObj = null;
+
+			try {
+				returnObj = TunnelUtil.invoke(httpPrincipal, methodHandler);
+			}
+			catch (Exception exception) {
+				if (exception instanceof
+						com.liferay.portal.kernel.exception.PortalException) {
+
+					throw (com.liferay.portal.kernel.exception.PortalException)
+						exception;
+				}
+
+				throw new com.liferay.portal.kernel.exception.SystemException(
+					exception);
+			}
+
+			return ((Integer)returnObj).intValue();
+		}
+		catch (com.liferay.portal.kernel.exception.SystemException
+					systemException) {
+
+			_log.error(systemException, systemException);
+
+			throw systemException;
+		}
+	}
+
 	public static int getLayoutsCount(
 		HttpPrincipal httpPrincipal, long groupId, boolean privateLayout) {
 
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "getLayoutsCount",
-				_getLayoutsCountParameterTypes27);
+				_getLayoutsCountParameterTypes29);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, privateLayout);
@@ -1231,7 +1320,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "getLayoutsCount",
-				_getLayoutsCountParameterTypes28);
+				_getLayoutsCountParameterTypes30);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, privateLayout, parentLayoutId);
@@ -1264,7 +1353,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "getLayoutsCount",
-				_getLayoutsCountParameterTypes29);
+				_getLayoutsCountParameterTypes31);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, privateLayout, parentLayoutId, priority);
@@ -1296,7 +1385,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "getLayoutsCount",
-				_getLayoutsCountParameterTypes30);
+				_getLayoutsCountParameterTypes32);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, type);
@@ -1329,7 +1418,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "getTempFileNames",
-				_getTempFileNamesParameterTypes31);
+				_getTempFileNamesParameterTypes33);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, folderName);
@@ -1370,7 +1459,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "hasLayout",
-				_hasLayoutParameterTypes32);
+				_hasLayoutParameterTypes34);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, uuid, groupId, privateLayout);
@@ -1410,7 +1499,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "hasPortletId",
-				_hasPortletIdParameterTypes33);
+				_hasPortletIdParameterTypes35);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, plid, portletId);
@@ -1454,7 +1543,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "schedulePublishToLive",
-				_schedulePublishToLiveParameterTypes34);
+				_schedulePublishToLiveParameterTypes36);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, sourceGroupId, targetGroupId, privateLayout,
@@ -1499,7 +1588,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "schedulePublishToRemote",
-				_schedulePublishToRemoteParameterTypes35);
+				_schedulePublishToRemoteParameterTypes37);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, sourceGroupId, privateLayout, layoutIdMap,
@@ -1541,7 +1630,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "setLayouts",
-				_setLayoutsParameterTypes36);
+				_setLayoutsParameterTypes38);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, privateLayout, parentLayoutId, layoutIds,
@@ -1579,7 +1668,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "unschedulePublishToLive",
-				_unschedulePublishToLiveParameterTypes37);
+				_unschedulePublishToLiveParameterTypes39);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, jobName, groupName);
@@ -1616,7 +1705,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "unschedulePublishToRemote",
-				_unschedulePublishToRemoteParameterTypes38);
+				_unschedulePublishToRemoteParameterTypes40);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, jobName, groupName);
@@ -1652,7 +1741,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "updateIconImage",
-				_updateIconImageParameterTypes39);
+				_updateIconImageParameterTypes41);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, plid, bytes);
@@ -1702,7 +1791,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "updateLayout",
-				_updateLayoutParameterTypes40);
+				_updateLayoutParameterTypes42);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, privateLayout, layoutId, parentLayoutId,
@@ -1755,7 +1844,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "updateLayout",
-				_updateLayoutParameterTypes41);
+				_updateLayoutParameterTypes43);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, privateLayout, layoutId, parentLayoutId,
@@ -1799,7 +1888,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "updateLayout",
-				_updateLayoutParameterTypes42);
+				_updateLayoutParameterTypes44);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, privateLayout, layoutId, typeSettings);
@@ -1840,7 +1929,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "updateLookAndFeel",
-				_updateLookAndFeelParameterTypes43);
+				_updateLookAndFeelParameterTypes45);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, privateLayout, layoutId, themeId,
@@ -1882,7 +1971,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "updateName",
-				_updateNameParameterTypes44);
+				_updateNameParameterTypes46);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, privateLayout, layoutId, name, languageId);
@@ -1923,7 +2012,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "updateName",
-				_updateNameParameterTypes45);
+				_updateNameParameterTypes47);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, plid, name, languageId);
@@ -1964,7 +2053,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "updateParentLayoutId",
-				_updateParentLayoutIdParameterTypes46);
+				_updateParentLayoutIdParameterTypes48);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, privateLayout, layoutId, parentLayoutId);
@@ -2004,7 +2093,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "updateParentLayoutId",
-				_updateParentLayoutIdParameterTypes47);
+				_updateParentLayoutIdParameterTypes49);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, plid, parentPlid);
@@ -2046,7 +2135,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "updateParentLayoutIdAndPriority",
-				_updateParentLayoutIdAndPriorityParameterTypes48);
+				_updateParentLayoutIdAndPriorityParameterTypes50);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, plid, parentPlid, priority);
@@ -2087,7 +2176,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "updatePriority",
-				_updatePriorityParameterTypes49);
+				_updatePriorityParameterTypes51);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, privateLayout, layoutId, priority);
@@ -2128,7 +2217,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "updatePriority",
-				_updatePriorityParameterTypes50);
+				_updatePriorityParameterTypes52);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, groupId, privateLayout, layoutId, nextLayoutId,
@@ -2169,7 +2258,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "updatePriority",
-				_updatePriorityParameterTypes51);
+				_updatePriorityParameterTypes53);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, plid, priority);
@@ -2209,7 +2298,7 @@ public class LayoutServiceHttp {
 		try {
 			MethodKey methodKey = new MethodKey(
 				LayoutServiceUtil.class, "updateType",
-				_updateTypeParameterTypes52);
+				_updateTypeParameterTypes54);
 
 			MethodHandler methodHandler = new MethodHandler(
 				methodKey, plid, type);
@@ -2340,33 +2429,42 @@ public class LayoutServiceHttp {
 		long.class, boolean.class, String.class
 	};
 	private static final Class<?>[] _getLayoutsParameterTypes25 = new Class[] {
-		long.class, String.class
+		long.class, boolean.class, String.class, String[].class, int.class,
+		int.class, com.liferay.portal.kernel.util.OrderByComparator.class
 	};
 	private static final Class<?>[] _getLayoutsParameterTypes26 = new Class[] {
+		long.class, String.class
+	};
+	private static final Class<?>[] _getLayoutsParameterTypes27 = new Class[] {
 		long.class, String.class, int.class, int.class
 	};
-	private static final Class<?>[] _getLayoutsCountParameterTypes27 =
-		new Class[] {long.class, boolean.class};
 	private static final Class<?>[] _getLayoutsCountParameterTypes28 =
-		new Class[] {long.class, boolean.class, long.class};
+		new Class[] {
+			com.liferay.portal.kernel.model.Group.class, boolean.class,
+			String.class, String[].class
+		};
 	private static final Class<?>[] _getLayoutsCountParameterTypes29 =
-		new Class[] {long.class, boolean.class, long.class, int.class};
+		new Class[] {long.class, boolean.class};
 	private static final Class<?>[] _getLayoutsCountParameterTypes30 =
+		new Class[] {long.class, boolean.class, long.class};
+	private static final Class<?>[] _getLayoutsCountParameterTypes31 =
+		new Class[] {long.class, boolean.class, long.class, int.class};
+	private static final Class<?>[] _getLayoutsCountParameterTypes32 =
 		new Class[] {long.class, String.class};
-	private static final Class<?>[] _getTempFileNamesParameterTypes31 =
+	private static final Class<?>[] _getTempFileNamesParameterTypes33 =
 		new Class[] {long.class, String.class};
-	private static final Class<?>[] _hasLayoutParameterTypes32 = new Class[] {
+	private static final Class<?>[] _hasLayoutParameterTypes34 = new Class[] {
 		String.class, long.class, boolean.class
 	};
-	private static final Class<?>[] _hasPortletIdParameterTypes33 =
+	private static final Class<?>[] _hasPortletIdParameterTypes35 =
 		new Class[] {long.class, String.class};
-	private static final Class<?>[] _schedulePublishToLiveParameterTypes34 =
+	private static final Class<?>[] _schedulePublishToLiveParameterTypes36 =
 		new Class[] {
 			long.class, long.class, boolean.class, long[].class,
 			java.util.Map.class, String.class, String.class,
 			java.util.Date.class, java.util.Date.class, String.class
 		};
-	private static final Class<?>[] _schedulePublishToRemoteParameterTypes35 =
+	private static final Class<?>[] _schedulePublishToRemoteParameterTypes37 =
 		new Class[] {
 			long.class, boolean.class, java.util.Map.class, java.util.Map.class,
 			String.class, int.class, String.class, boolean.class, long.class,
@@ -2374,17 +2472,17 @@ public class LayoutServiceHttp {
 			String.class, String.class, java.util.Date.class,
 			java.util.Date.class, String.class
 		};
-	private static final Class<?>[] _setLayoutsParameterTypes36 = new Class[] {
+	private static final Class<?>[] _setLayoutsParameterTypes38 = new Class[] {
 		long.class, boolean.class, long.class, long[].class,
 		com.liferay.portal.kernel.service.ServiceContext.class
 	};
-	private static final Class<?>[] _unschedulePublishToLiveParameterTypes37 =
+	private static final Class<?>[] _unschedulePublishToLiveParameterTypes39 =
 		new Class[] {long.class, String.class, String.class};
-	private static final Class<?>[] _unschedulePublishToRemoteParameterTypes38 =
+	private static final Class<?>[] _unschedulePublishToRemoteParameterTypes40 =
 		new Class[] {long.class, String.class, String.class};
-	private static final Class<?>[] _updateIconImageParameterTypes39 =
+	private static final Class<?>[] _updateIconImageParameterTypes41 =
 		new Class[] {long.class, byte[].class};
-	private static final Class<?>[] _updateLayoutParameterTypes40 =
+	private static final Class<?>[] _updateLayoutParameterTypes42 =
 		new Class[] {
 			long.class, boolean.class, long.class, long.class,
 			java.util.Map.class, java.util.Map.class, java.util.Map.class,
@@ -2392,7 +2490,7 @@ public class LayoutServiceHttp {
 			boolean.class, java.util.Map.class, boolean.class, byte[].class,
 			long.class, com.liferay.portal.kernel.service.ServiceContext.class
 		};
-	private static final Class<?>[] _updateLayoutParameterTypes41 =
+	private static final Class<?>[] _updateLayoutParameterTypes43 =
 		new Class[] {
 			long.class, boolean.class, long.class, long.class,
 			java.util.Map.class, java.util.Map.class, java.util.Map.class,
@@ -2400,36 +2498,36 @@ public class LayoutServiceHttp {
 			boolean.class, java.util.Map.class, boolean.class, byte[].class,
 			com.liferay.portal.kernel.service.ServiceContext.class
 		};
-	private static final Class<?>[] _updateLayoutParameterTypes42 =
+	private static final Class<?>[] _updateLayoutParameterTypes44 =
 		new Class[] {long.class, boolean.class, long.class, String.class};
-	private static final Class<?>[] _updateLookAndFeelParameterTypes43 =
+	private static final Class<?>[] _updateLookAndFeelParameterTypes45 =
 		new Class[] {
 			long.class, boolean.class, long.class, String.class, String.class,
 			String.class
 		};
-	private static final Class<?>[] _updateNameParameterTypes44 = new Class[] {
+	private static final Class<?>[] _updateNameParameterTypes46 = new Class[] {
 		long.class, boolean.class, long.class, String.class, String.class
 	};
-	private static final Class<?>[] _updateNameParameterTypes45 = new Class[] {
+	private static final Class<?>[] _updateNameParameterTypes47 = new Class[] {
 		long.class, String.class, String.class
 	};
-	private static final Class<?>[] _updateParentLayoutIdParameterTypes46 =
+	private static final Class<?>[] _updateParentLayoutIdParameterTypes48 =
 		new Class[] {long.class, boolean.class, long.class, long.class};
-	private static final Class<?>[] _updateParentLayoutIdParameterTypes47 =
+	private static final Class<?>[] _updateParentLayoutIdParameterTypes49 =
 		new Class[] {long.class, long.class};
 	private static final Class<?>[]
-		_updateParentLayoutIdAndPriorityParameterTypes48 = new Class[] {
+		_updateParentLayoutIdAndPriorityParameterTypes50 = new Class[] {
 			long.class, long.class, int.class
 		};
-	private static final Class<?>[] _updatePriorityParameterTypes49 =
+	private static final Class<?>[] _updatePriorityParameterTypes51 =
 		new Class[] {long.class, boolean.class, long.class, int.class};
-	private static final Class<?>[] _updatePriorityParameterTypes50 =
+	private static final Class<?>[] _updatePriorityParameterTypes52 =
 		new Class[] {
 			long.class, boolean.class, long.class, long.class, long.class
 		};
-	private static final Class<?>[] _updatePriorityParameterTypes51 =
+	private static final Class<?>[] _updatePriorityParameterTypes53 =
 		new Class[] {long.class, int.class};
-	private static final Class<?>[] _updateTypeParameterTypes52 = new Class[] {
+	private static final Class<?>[] _updateTypeParameterTypes54 = new Class[] {
 		long.class, String.class
 	};
 
diff --git a/portal-impl/src/com/liferay/portal/service/http/LayoutServiceSoap.java b/portal-impl/src/com/liferay/portal/service/http/LayoutServiceSoap.java
index 4253f71fbb19..e5e14b024087 100644
--- a/portal-impl/src/com/liferay/portal/service/http/LayoutServiceSoap.java
+++ b/portal-impl/src/com/liferay/portal/service/http/LayoutServiceSoap.java
@@ -1073,6 +1073,28 @@ public class LayoutServiceSoap {
 		}
 	}
 
+	public static com.liferay.portal.kernel.model.LayoutSoap[] getLayouts(
+			long groupId, boolean privateLayout, String keywords,
+			String[] types, int start, int end,
+			com.liferay.portal.kernel.util.OrderByComparator
+				<com.liferay.portal.kernel.model.Layout> obc)
+		throws RemoteException {
+
+		try {
+			java.util.List<com.liferay.portal.kernel.model.Layout> returnValue =
+				LayoutServiceUtil.getLayouts(
+					groupId, privateLayout, keywords, types, start, end, obc);
+
+			return com.liferay.portal.kernel.model.LayoutSoap.toSoapModels(
+				returnValue);
+		}
+		catch (Exception exception) {
+			_log.error(exception, exception);
+
+			throw new RemoteException(exception.getMessage());
+		}
+	}
+
 	public static com.liferay.portal.kernel.model.LayoutSoap[] getLayouts(
 			long groupId, String type)
 		throws RemoteException {
@@ -1109,6 +1131,25 @@ public class LayoutServiceSoap {
 		}
 	}
 
+	public static int getLayoutsCount(
+			com.liferay.portal.kernel.model.GroupSoap group,
+			boolean privateLayout, String keywords, String[] types)
+		throws RemoteException {
+
+		try {
+			int returnValue = LayoutServiceUtil.getLayoutsCount(
+				com.liferay.portal.model.impl.GroupModelImpl.toModel(group),
+				privateLayout, keywords, types);
+
+			return returnValue;
+		}
+		catch (Exception exception) {
+			_log.error(exception, exception);
+
+			throw new RemoteException(exception.getMessage());
+		}
+	}
+
 	public static int getLayoutsCount(long groupId, boolean privateLayout)
 		throws RemoteException {
 
diff --git a/portal-kernel/src/com/liferay/portal/kernel/service/LayoutLocalService.java b/portal-kernel/src/com/liferay/portal/kernel/service/LayoutLocalService.java
index 0de97ef129d5..418cd26bed5f 100644
--- a/portal-kernel/src/com/liferay/portal/kernel/service/LayoutLocalService.java
+++ b/portal-kernel/src/com/liferay/portal/kernel/service/LayoutLocalService.java
@@ -1029,6 +1029,26 @@ public interface LayoutLocalService
 	@Transactional(propagation = Propagation.SUPPORTS, readOnly = true)
 	public List<Layout> getLayouts(long groupId, long masterLayoutPlid);
 
+	/**
+	 * Returns a range of all the layouts belonging to the group.
+	 *
+	 * @param groupId the primary key of the group
+	 * @param userId the primary key of the user
+	 * @param privateLayout whether the layout is private to the group
+	 * @param keywords keywords
+	 * @param types layout types
+	 * @param start the lower bound of the range of layouts
+	 * @param end the upper bound of the range of layouts (not inclusive)
+	 * @param obc the comparator to order the layouts
+	 * @return the matching layouts, or <code>null</code> if no matches were
+	 found
+	 */
+	@Transactional(propagation = Propagation.SUPPORTS, readOnly = true)
+	public List<Layout> getLayouts(
+			long groupId, long userId, boolean privateLayout, String keywords,
+			String[] types, int start, int end, OrderByComparator<Layout> obc)
+		throws PortalException;
+
 	/**
 	 * Returns the layout references for all the layouts that belong to the
 	 * company and belong to the portlet that matches the preferences.
@@ -1125,6 +1145,12 @@ public interface LayoutLocalService
 			Group group, boolean privateLayout, String keywords, String[] types)
 		throws PortalException;
 
+	@Transactional(propagation = Propagation.SUPPORTS, readOnly = true)
+	public int getLayoutsCount(
+			Group group, long userId, boolean privateLayout, String keywords,
+			String[] types)
+		throws PortalException;
+
 	@Transactional(propagation = Propagation.SUPPORTS, readOnly = true)
 	public int getLayoutsCount(long groupId);
 
diff --git a/portal-kernel/src/com/liferay/portal/kernel/service/LayoutLocalServiceUtil.java b/portal-kernel/src/com/liferay/portal/kernel/service/LayoutLocalServiceUtil.java
index 8217459a4923..339bdbdd7aec 100644
--- a/portal-kernel/src/com/liferay/portal/kernel/service/LayoutLocalServiceUtil.java
+++ b/portal-kernel/src/com/liferay/portal/kernel/service/LayoutLocalServiceUtil.java
@@ -1211,6 +1211,32 @@ public class LayoutLocalServiceUtil {
 		return getService().getLayouts(groupId, masterLayoutPlid);
 	}
 
+	/**
+	 * Returns a range of all the layouts belonging to the group.
+	 *
+	 * @param groupId the primary key of the group
+	 * @param userId the primary key of the user
+	 * @param privateLayout whether the layout is private to the group
+	 * @param keywords keywords
+	 * @param types layout types
+	 * @param start the lower bound of the range of layouts
+	 * @param end the upper bound of the range of layouts (not inclusive)
+	 * @param obc the comparator to order the layouts
+	 * @return the matching layouts, or <code>null</code> if no matches were
+	 found
+	 */
+	public static java.util.List<com.liferay.portal.kernel.model.Layout>
+			getLayouts(
+				long groupId, long userId, boolean privateLayout,
+				String keywords, String[] types, int start, int end,
+				com.liferay.portal.kernel.util.OrderByComparator
+					<com.liferay.portal.kernel.model.Layout> obc)
+		throws com.liferay.portal.kernel.exception.PortalException {
+
+		return getService().getLayouts(
+			groupId, userId, privateLayout, keywords, types, start, end, obc);
+	}
+
 	/**
 	 * Returns the layout references for all the layouts that belong to the
 	 * company and belong to the portlet that matches the preferences.
@@ -1349,6 +1375,15 @@ public class LayoutLocalServiceUtil {
 			group, privateLayout, keywords, types);
 	}
 
+	public static int getLayoutsCount(
+			com.liferay.portal.kernel.model.Group group, long userId,
+			boolean privateLayout, String keywords, String[] types)
+		throws com.liferay.portal.kernel.exception.PortalException {
+
+		return getService().getLayoutsCount(
+			group, userId, privateLayout, keywords, types);
+	}
+
 	public static int getLayoutsCount(long groupId) {
 		return getService().getLayoutsCount(groupId);
 	}
diff --git a/portal-kernel/src/com/liferay/portal/kernel/service/LayoutLocalServiceWrapper.java b/portal-kernel/src/com/liferay/portal/kernel/service/LayoutLocalServiceWrapper.java
index e232275a3a82..1039ec1bd6a2 100644
--- a/portal-kernel/src/com/liferay/portal/kernel/service/LayoutLocalServiceWrapper.java
+++ b/portal-kernel/src/com/liferay/portal/kernel/service/LayoutLocalServiceWrapper.java
@@ -1236,6 +1236,31 @@ public class LayoutLocalServiceWrapper
 		return _layoutLocalService.getLayouts(groupId, masterLayoutPlid);
 	}
 
+	/**
+	 * Returns a range of all the layouts belonging to the group.
+	 *
+	 * @param groupId the primary key of the group
+	 * @param userId the primary key of the user
+	 * @param privateLayout whether the layout is private to the group
+	 * @param keywords keywords
+	 * @param types layout types
+	 * @param start the lower bound of the range of layouts
+	 * @param end the upper bound of the range of layouts (not inclusive)
+	 * @param obc the comparator to order the layouts
+	 * @return the matching layouts, or <code>null</code> if no matches were
+	 found
+	 */
+	@Override
+	public java.util.List<Layout> getLayouts(
+			long groupId, long userId, boolean privateLayout, String keywords,
+			String[] types, int start, int end,
+			com.liferay.portal.kernel.util.OrderByComparator<Layout> obc)
+		throws com.liferay.portal.kernel.exception.PortalException {
+
+		return _layoutLocalService.getLayouts(
+			groupId, userId, privateLayout, keywords, types, start, end, obc);
+	}
+
 	/**
 	 * Returns the layout references for all the layouts that belong to the
 	 * company and belong to the portlet that matches the preferences.
@@ -1384,6 +1409,16 @@ public class LayoutLocalServiceWrapper
 			group, privateLayout, keywords, types);
 	}
 
+	@Override
+	public int getLayoutsCount(
+			com.liferay.portal.kernel.model.Group group, long userId,
+			boolean privateLayout, String keywords, String[] types)
+		throws com.liferay.portal.kernel.exception.PortalException {
+
+		return _layoutLocalService.getLayoutsCount(
+			group, userId, privateLayout, keywords, types);
+	}
+
 	@Override
 	public int getLayoutsCount(long groupId) {
 		return _layoutLocalService.getLayoutsCount(groupId);
diff --git a/portal-kernel/src/com/liferay/portal/kernel/service/LayoutService.java b/portal-kernel/src/com/liferay/portal/kernel/service/LayoutService.java
index d99e973b85fb..a2635ae9ac72 100644
--- a/portal-kernel/src/com/liferay/portal/kernel/service/LayoutService.java
+++ b/portal-kernel/src/com/liferay/portal/kernel/service/LayoutService.java
@@ -18,6 +18,7 @@ import com.liferay.portal.kernel.cache.thread.local.ThreadLocalCachable;
 import com.liferay.portal.kernel.exception.PortalException;
 import com.liferay.portal.kernel.exception.SystemException;
 import com.liferay.portal.kernel.jsonwebservice.JSONWebService;
+import com.liferay.portal.kernel.model.Group;
 import com.liferay.portal.kernel.model.Layout;
 import com.liferay.portal.kernel.model.LayoutReference;
 import com.liferay.portal.kernel.repository.model.FileEntry;
@@ -25,6 +26,7 @@ import com.liferay.portal.kernel.security.access.control.AccessControlled;
 import com.liferay.portal.kernel.transaction.Isolation;
 import com.liferay.portal.kernel.transaction.Propagation;
 import com.liferay.portal.kernel.transaction.Transactional;
+import com.liferay.portal.kernel.util.OrderByComparator;
 
 import java.io.InputStream;
 
@@ -603,6 +605,12 @@ public interface LayoutService extends BaseService {
 			long groupId, boolean privateLayout, String type)
 		throws PortalException;
 
+	@Transactional(propagation = Propagation.SUPPORTS, readOnly = true)
+	public List<Layout> getLayouts(
+			long groupId, boolean privateLayout, String keywords,
+			String[] types, int start, int end, OrderByComparator<Layout> obc)
+		throws PortalException;
+
 	@Transactional(propagation = Propagation.SUPPORTS, readOnly = true)
 	public List<Layout> getLayouts(long groupId, String type);
 
@@ -610,6 +618,11 @@ public interface LayoutService extends BaseService {
 	public List<Layout> getLayouts(
 		long groupId, String type, int start, int end);
 
+	@Transactional(propagation = Propagation.SUPPORTS, readOnly = true)
+	public int getLayoutsCount(
+			Group group, boolean privateLayout, String keywords, String[] types)
+		throws PortalException;
+
 	@Transactional(propagation = Propagation.SUPPORTS, readOnly = true)
 	public int getLayoutsCount(long groupId, boolean privateLayout);
 
diff --git a/portal-kernel/src/com/liferay/portal/kernel/service/LayoutServiceUtil.java b/portal-kernel/src/com/liferay/portal/kernel/service/LayoutServiceUtil.java
index b89b13fe7a49..fa70f00e2ca1 100644
--- a/portal-kernel/src/com/liferay/portal/kernel/service/LayoutServiceUtil.java
+++ b/portal-kernel/src/com/liferay/portal/kernel/service/LayoutServiceUtil.java
@@ -696,6 +696,18 @@ public class LayoutServiceUtil {
 		return getService().getLayouts(groupId, privateLayout, type);
 	}
 
+	public static java.util.List<com.liferay.portal.kernel.model.Layout>
+			getLayouts(
+				long groupId, boolean privateLayout, String keywords,
+				String[] types, int start, int end,
+				com.liferay.portal.kernel.util.OrderByComparator
+					<com.liferay.portal.kernel.model.Layout> obc)
+		throws com.liferay.portal.kernel.exception.PortalException {
+
+		return getService().getLayouts(
+			groupId, privateLayout, keywords, types, start, end, obc);
+	}
+
 	public static java.util.List<com.liferay.portal.kernel.model.Layout>
 		getLayouts(long groupId, String type) {
 
@@ -708,6 +720,15 @@ public class LayoutServiceUtil {
 		return getService().getLayouts(groupId, type, start, end);
 	}
 
+	public static int getLayoutsCount(
+			com.liferay.portal.kernel.model.Group group, boolean privateLayout,
+			String keywords, String[] types)
+		throws com.liferay.portal.kernel.exception.PortalException {
+
+		return getService().getLayoutsCount(
+			group, privateLayout, keywords, types);
+	}
+
 	public static int getLayoutsCount(long groupId, boolean privateLayout) {
 		return getService().getLayoutsCount(groupId, privateLayout);
 	}
diff --git a/portal-kernel/src/com/liferay/portal/kernel/service/LayoutServiceWrapper.java b/portal-kernel/src/com/liferay/portal/kernel/service/LayoutServiceWrapper.java
index d7a7560c243c..c7793b765d7b 100644
--- a/portal-kernel/src/com/liferay/portal/kernel/service/LayoutServiceWrapper.java
+++ b/portal-kernel/src/com/liferay/portal/kernel/service/LayoutServiceWrapper.java
@@ -712,6 +712,17 @@ public class LayoutServiceWrapper
 		return _layoutService.getLayouts(groupId, privateLayout, type);
 	}
 
+	@Override
+	public java.util.List<Layout> getLayouts(
+			long groupId, boolean privateLayout, String keywords,
+			String[] types, int start, int end,
+			com.liferay.portal.kernel.util.OrderByComparator<Layout> obc)
+		throws com.liferay.portal.kernel.exception.PortalException {
+
+		return _layoutService.getLayouts(
+			groupId, privateLayout, keywords, types, start, end, obc);
+	}
+
 	@Override
 	public java.util.List<Layout> getLayouts(long groupId, String type) {
 		return _layoutService.getLayouts(groupId, type);
@@ -724,6 +735,16 @@ public class LayoutServiceWrapper
 		return _layoutService.getLayouts(groupId, type, start, end);
 	}
 
+	@Override
+	public int getLayoutsCount(
+			com.liferay.portal.kernel.model.Group group, boolean privateLayout,
+			String keywords, String[] types)
+		throws com.liferay.portal.kernel.exception.PortalException {
+
+		return _layoutService.getLayoutsCount(
+			group, privateLayout, keywords, types);
+	}
+
 	@Override
 	public int getLayoutsCount(long groupId, boolean privateLayout) {
 		return _layoutService.getLayoutsCount(groupId, privateLayout);