commit 1249bc3445df1bbc247e960a9c921a70acd4b8be
Author: tina.tian <tina.tian@liferay.com>
Date:   Thu Mar 26 21:38:58 2020 -0700

    LPS-110849 Apply usages

diff --git a/modules/apps/dynamic-data-mapping/dynamic-data-mapping-service/src/main/java/com/liferay/dynamic/data/mapping/internal/render/DDMFormFieldFreeMarkerRenderer.java b/modules/apps/dynamic-data-mapping/dynamic-data-mapping-service/src/main/java/com/liferay/dynamic/data/mapping/internal/render/DDMFormFieldFreeMarkerRenderer.java
index 69aa420bc55a..7484f45dbc82 100644
--- a/modules/apps/dynamic-data-mapping/dynamic-data-mapping-service/src/main/java/com/liferay/dynamic/data/mapping/internal/render/DDMFormFieldFreeMarkerRenderer.java
+++ b/modules/apps/dynamic-data-mapping/dynamic-data-mapping-service/src/main/java/com/liferay/dynamic/data/mapping/internal/render/DDMFormFieldFreeMarkerRenderer.java
@@ -42,7 +42,6 @@ import com.liferay.portal.kernel.security.auth.AuthTokenUtil;
 import com.liferay.portal.kernel.template.Template;
 import com.liferay.portal.kernel.template.TemplateConstants;
 import com.liferay.portal.kernel.template.TemplateException;
-import com.liferay.portal.kernel.template.TemplateManager;
 import com.liferay.portal.kernel.template.TemplateManagerUtil;
 import com.liferay.portal.kernel.template.TemplateResource;
 import com.liferay.portal.kernel.template.TemplateResourceLoaderUtil;
@@ -678,12 +677,7 @@ public class DDMFormFieldFreeMarkerRenderer implements DDMFormFieldRenderer {
 			template.put(entry.getKey(), entry.getValue());
 		}
 
-		TemplateManager templateManager =
-			TemplateManagerUtil.getTemplateManager(
-				TemplateConstants.LANG_TYPE_FTL);
-
-		templateManager.addTaglibSupport(
-			template, httpServletRequest, httpServletResponse);
+		template.prepareTaglib(httpServletRequest, httpServletResponse);
 
 		return processFTL(httpServletRequest, httpServletResponse, template);
 	}
diff --git a/modules/apps/fragment/fragment-entry-processor/fragment-entry-processor-freemarker/src/main/java/com/liferay/fragment/entry/processor/freemarker/FreeMarkerFragmentEntryProcessor.java b/modules/apps/fragment/fragment-entry-processor/fragment-entry-processor-freemarker/src/main/java/com/liferay/fragment/entry/processor/freemarker/FreeMarkerFragmentEntryProcessor.java
index d59f71137209..4310c8a48aa4 100644
--- a/modules/apps/fragment/fragment-entry-processor/fragment-entry-processor-freemarker/src/main/java/com/liferay/fragment/entry/processor/freemarker/FreeMarkerFragmentEntryProcessor.java
+++ b/modules/apps/fragment/fragment-entry-processor/fragment-entry-processor-freemarker/src/main/java/com/liferay/fragment/entry/processor/freemarker/FreeMarkerFragmentEntryProcessor.java
@@ -36,7 +36,6 @@ import com.liferay.portal.kernel.template.StringTemplateResource;
 import com.liferay.portal.kernel.template.Template;
 import com.liferay.portal.kernel.template.TemplateConstants;
 import com.liferay.portal.kernel.template.TemplateException;
-import com.liferay.portal.kernel.template.TemplateManager;
 import com.liferay.portal.kernel.template.TemplateManagerUtil;
 import com.liferay.portal.kernel.util.HashMapBuilder;
 import com.liferay.portal.kernel.util.ResourceBundleUtil;
@@ -113,10 +112,6 @@ public class FreeMarkerFragmentEntryProcessor
 
 		template.put(TemplateConstants.WRITER, unsyncStringWriter);
 
-		TemplateManager templateManager =
-			TemplateManagerUtil.getTemplateManager(
-				TemplateConstants.LANG_TYPE_FTL);
-
 		JSONObject configurationValuesJSONObject =
 			_fragmentEntryConfigurationParser.getConfigurationJSONObject(
 				fragmentEntryLink.getConfiguration(),
@@ -135,8 +130,8 @@ public class FreeMarkerFragmentEntryProcessor
 
 		template.putAll(contextObjects);
 
-		templateManager.addTaglibSupport(
-			template, fragmentEntryProcessorContext.getHttpServletRequest(),
+		template.prepareTaglib(
+			fragmentEntryProcessorContext.getHttpServletRequest(),
 			fragmentEntryProcessorContext.getHttpServletResponse());
 
 		template.prepare(fragmentEntryProcessorContext.getHttpServletRequest());
@@ -186,10 +181,6 @@ public class FreeMarkerFragmentEntryProcessor
 				(httpServletRequest.getAttribute(WebKeys.THEME_DISPLAY) !=
 					null)) {
 
-				TemplateManager templateManager =
-					TemplateManagerUtil.getTemplateManager(
-						TemplateConstants.LANG_TYPE_FTL);
-
 				JSONObject configurationDefaultValuesJSONObject =
 					_fragmentEntryConfigurationParser.
 						getConfigurationDefaultValuesJSONObject(configuration);
@@ -206,8 +197,7 @@ public class FreeMarkerFragmentEntryProcessor
 
 				template.putAll(contextObjects);
 
-				templateManager.addTaglibSupport(
-					template, httpServletRequest, httpServletResponse);
+				template.prepareTaglib(httpServletRequest, httpServletResponse);
 
 				template.prepare(httpServletRequest);
 
diff --git a/modules/apps/fragment/fragment-entry-processor/fragment-entry-processor-impl/src/main/java/com/liferay/fragment/entry/processor/internal/util/FragmentEntryProcessorHelperImpl.java b/modules/apps/fragment/fragment-entry-processor/fragment-entry-processor-impl/src/main/java/com/liferay/fragment/entry/processor/internal/util/FragmentEntryProcessorHelperImpl.java
index 2d0d25a3acc0..982b33de0d0a 100644
--- a/modules/apps/fragment/fragment-entry-processor/fragment-entry-processor-impl/src/main/java/com/liferay/fragment/entry/processor/internal/util/FragmentEntryProcessorHelperImpl.java
+++ b/modules/apps/fragment/fragment-entry-processor/fragment-entry-processor-impl/src/main/java/com/liferay/fragment/entry/processor/internal/util/FragmentEntryProcessorHelperImpl.java
@@ -35,7 +35,6 @@ import com.liferay.portal.kernel.model.ClassedModel;
 import com.liferay.portal.kernel.template.StringTemplateResource;
 import com.liferay.portal.kernel.template.Template;
 import com.liferay.portal.kernel.template.TemplateConstants;
-import com.liferay.portal.kernel.template.TemplateManager;
 import com.liferay.portal.kernel.template.TemplateManagerUtil;
 import com.liferay.portal.kernel.trash.TrashHandler;
 import com.liferay.portal.kernel.trash.TrashHandlerRegistryUtil;
@@ -273,12 +272,8 @@ public class FragmentEntryProcessorHelperImpl
 			TemplateConstants.LANG_TYPE_FTL,
 			new StringTemplateResource("template_id", "[#ftl] " + html), true);
 
-		TemplateManager templateManager =
-			TemplateManagerUtil.getTemplateManager(
-				TemplateConstants.LANG_TYPE_FTL);
-
-		templateManager.addTaglibSupport(
-			template, fragmentEntryProcessorContext.getHttpServletRequest(),
+		template.prepareTaglib(
+			fragmentEntryProcessorContext.getHttpServletRequest(),
 			fragmentEntryProcessorContext.getHttpServletResponse());
 
 		template.put(TemplateConstants.WRITER, unsyncStringWriter);
diff --git a/modules/apps/fragment/fragment-web/src/main/java/com/liferay/fragment/web/internal/display/context/EditFragmentEntryDisplayContext.java b/modules/apps/fragment/fragment-web/src/main/java/com/liferay/fragment/web/internal/display/context/EditFragmentEntryDisplayContext.java
index 0e5e3c79ae2b..00879c922be7 100644
--- a/modules/apps/fragment/fragment-web/src/main/java/com/liferay/fragment/web/internal/display/context/EditFragmentEntryDisplayContext.java
+++ b/modules/apps/fragment/fragment-web/src/main/java/com/liferay/fragment/web/internal/display/context/EditFragmentEntryDisplayContext.java
@@ -47,9 +47,10 @@ import com.liferay.portal.kernel.workflow.WorkflowConstants;
 
 import java.util.ArrayList;
 import java.util.Collections;
-import java.util.HashMap;
+import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
+import java.util.Set;
 
 import javax.portlet.ActionRequest;
 import javax.portlet.PortletRequest;
@@ -341,19 +342,19 @@ public class EditFragmentEntryDisplayContext {
 
 		template.prepare(_httpServletRequest);
 
-		Map<String, Object> taglibMap = new HashMap<>();
+		Set<String> originalKeys = new HashSet<>(template.keySet());
 
-		templateManager.addTaglibSupport(
-			taglibMap, _httpServletRequest,
+		template.prepareTaglib(
+			_httpServletRequest,
 			PortalUtil.getHttpServletResponse(_renderResponse));
 
-		List<String> freeMarkerTaglibs = new ArrayList<>();
+		Set<String> taglibKeys = new HashSet<>(template.keySet());
 
-		freeMarkerTaglibs.addAll(taglibMap.keySet());
+		taglibKeys.removeAll(originalKeys);
 
-		List<String> freeMarkerVariables = new ArrayList<>();
+		List<String> freeMarkerTaglibs = new ArrayList<>(taglibKeys);
 
-		freeMarkerVariables.addAll(template.keySet());
+		List<String> freeMarkerVariables = new ArrayList<>(template.keySet());
 
 		freeMarkerVariables.add("configuration");
 
diff --git a/modules/apps/journal/journal-service/src/main/java/com/liferay/journal/internal/transformer/JournalTransformer.java b/modules/apps/journal/journal-service/src/main/java/com/liferay/journal/internal/transformer/JournalTransformer.java
index 369d820d382c..66bb80df77d9 100644
--- a/modules/apps/journal/journal-service/src/main/java/com/liferay/journal/internal/transformer/JournalTransformer.java
+++ b/modules/apps/journal/journal-service/src/main/java/com/liferay/journal/internal/transformer/JournalTransformer.java
@@ -39,7 +39,6 @@ import com.liferay.portal.kernel.service.CompanyLocalServiceUtil;
 import com.liferay.portal.kernel.template.StringTemplateResource;
 import com.liferay.portal.kernel.template.Template;
 import com.liferay.portal.kernel.template.TemplateConstants;
-import com.liferay.portal.kernel.template.TemplateManager;
 import com.liferay.portal.kernel.template.TemplateManagerUtil;
 import com.liferay.portal.kernel.template.TemplateResource;
 import com.liferay.portal.kernel.templateparser.TemplateNode;
@@ -347,14 +346,8 @@ public class JournalTransformer {
 				template.put("viewMode", viewMode);
 
 				if (themeDisplay != null) {
-					TemplateManager templateManager =
-						TemplateManagerUtil.getTemplateManager(langType);
-
-					HttpServletRequest httpServletRequest =
-						themeDisplay.getRequest();
-
-					templateManager.addTaglibSupport(
-						template, httpServletRequest,
+					template.prepareTaglib(
+						themeDisplay.getRequest(),
 						new PipingServletResponse(
 							themeDisplay.getResponse(), unsyncStringWriter));
 				}
diff --git a/portal-impl/src/com/liferay/portal/layoutconfiguration/util/RuntimePageImpl.java b/portal-impl/src/com/liferay/portal/layoutconfiguration/util/RuntimePageImpl.java
index e48aeda0e2a5..19d8ffb13210 100644
--- a/portal-impl/src/com/liferay/portal/layoutconfiguration/util/RuntimePageImpl.java
+++ b/portal-impl/src/com/liferay/portal/layoutconfiguration/util/RuntimePageImpl.java
@@ -405,8 +405,8 @@ public class RuntimePageImpl implements RuntimePage {
 
 		UnsyncStringWriter unsyncStringWriter = new UnsyncStringWriter();
 
-		templateManager.addTaglibSupport(
-			template, httpServletRequest,
+		template.prepareTaglib(
+			httpServletRequest,
 			new PipingServletResponse(httpServletResponse, unsyncStringWriter));
 
 		try {
diff --git a/portal-impl/src/com/liferay/portal/templateparser/Transformer.java b/portal-impl/src/com/liferay/portal/templateparser/Transformer.java
index 646d5baea165..2aa0c3196180 100644
--- a/portal-impl/src/com/liferay/portal/templateparser/Transformer.java
+++ b/portal-impl/src/com/liferay/portal/templateparser/Transformer.java
@@ -26,7 +26,6 @@ import com.liferay.portal.kernel.service.CompanyLocalServiceUtil;
 import com.liferay.portal.kernel.template.StringTemplateResource;
 import com.liferay.portal.kernel.template.Template;
 import com.liferay.portal.kernel.template.TemplateConstants;
-import com.liferay.portal.kernel.template.TemplateManager;
 import com.liferay.portal.kernel.template.TemplateManagerUtil;
 import com.liferay.portal.kernel.template.TemplateResource;
 import com.liferay.portal.kernel.template.URLTemplateResource;
@@ -142,11 +141,7 @@ public class Transformer {
 			template.put("siteGroupId", siteGroupId);
 			template.put("templatesPath", templatesPath);
 
-			TemplateManager templateManager =
-				TemplateManagerUtil.getTemplateManager(langType);
-
-			templateManager.addTaglibSupport(
-				template, httpServletRequest, httpServletResponse);
+			template.prepareTaglib(httpServletRequest, httpServletResponse);
 
 			// Deprecated variables
 
diff --git a/util-bridges/src/com/liferay/util/bridges/freemarker/FreeMarkerPortlet.java b/util-bridges/src/com/liferay/util/bridges/freemarker/FreeMarkerPortlet.java
index 38d3d23185e0..fd10d8e5f7f5 100644
--- a/util-bridges/src/com/liferay/util/bridges/freemarker/FreeMarkerPortlet.java
+++ b/util-bridges/src/com/liferay/util/bridges/freemarker/FreeMarkerPortlet.java
@@ -21,7 +21,6 @@ import com.liferay.portal.kernel.portlet.bridges.mvc.MVCPortlet;
 import com.liferay.portal.kernel.template.Template;
 import com.liferay.portal.kernel.template.TemplateConstants;
 import com.liferay.portal.kernel.template.TemplateException;
-import com.liferay.portal.kernel.template.TemplateManager;
 import com.liferay.portal.kernel.template.TemplateManagerUtil;
 import com.liferay.portal.kernel.template.TemplateResource;
 import com.liferay.portal.kernel.template.TemplateResourceLoaderUtil;
@@ -86,15 +85,11 @@ public class FreeMarkerPortlet extends MVCPortlet {
 					TemplateResourceLoaderUtil.getTemplateResource(
 						TemplateConstants.LANG_TYPE_FTL, resourcePath);
 
-				TemplateManager templateManager =
-					TemplateManagerUtil.getTemplateManager(
-						TemplateConstants.LANG_TYPE_FTL);
-
 				Template template = TemplateManagerUtil.getTemplate(
 					TemplateConstants.LANG_TYPE_FTL, templateResource, false);
 
-				templateManager.addTaglibSupport(
-					template, PortalUtil.getHttpServletRequest(portletRequest),
+				template.prepareTaglib(
+					PortalUtil.getHttpServletRequest(portletRequest),
 					PortalUtil.getHttpServletResponse(portletResponse));
 
 				template.put("portletContext", getPortletContext());
diff --git a/util-taglib/src/com/liferay/taglib/util/ThemeUtil.java b/util-taglib/src/com/liferay/taglib/util/ThemeUtil.java
index 661d3cb3ec19..6328bdb0cd90 100644
--- a/util-taglib/src/com/liferay/taglib/util/ThemeUtil.java
+++ b/util-taglib/src/com/liferay/taglib/util/ThemeUtil.java
@@ -24,7 +24,6 @@ import com.liferay.portal.kernel.servlet.ServletContextPool;
 import com.liferay.portal.kernel.template.Template;
 import com.liferay.portal.kernel.template.TemplateConstants;
 import com.liferay.portal.kernel.template.TemplateContextContributor;
-import com.liferay.portal.kernel.template.TemplateManager;
 import com.liferay.portal.kernel.template.TemplateManagerUtil;
 import com.liferay.portal.kernel.template.TemplateResource;
 import com.liferay.portal.kernel.template.TemplateResourceLoaderUtil;
@@ -216,12 +215,7 @@ public class ThemeUtil {
 				httpServletResponse, writer);
 		}
 
-		TemplateManager templateManager =
-			TemplateManagerUtil.getTemplateManager(
-				TemplateConstants.LANG_TYPE_FTL);
-
-		templateManager.addTaglibSupport(
-			template, httpServletRequest, httpServletResponse);
+		template.prepareTaglib(httpServletRequest, httpServletResponse);
 
 		template.put(TemplateConstants.WRITER, writer);
 