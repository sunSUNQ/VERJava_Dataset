commit 819cdbcab51c6da9fb896380f2d46e9b7d4fdc3b
Merge: f4f4a4e03 41b7f9b90
Author: Tatu Saloranta <tatu.saloranta@iki.fi>
Date:   Thu Sep 19 22:58:46 2019 -0700

    Merge branch '2.8' into 2.9 (fix #2462)

diff --cc release-notes/VERSION-2.x
index 1c5313f78,13595cd75..7ebd14d31
--- a/release-notes/VERSION-2.x
+++ b/release-notes/VERSION-2.x
@@@ -20,341 -9,11 +20,342 @@@ Project: jackson-databin
    (reported by iSafeBlue@github / blue@ixsec.org)
  #2420: Block one more gadget type (no CVE allocated yet)
    (reported by crazylirui@gmail.com)
 -#2449: Block one more gadget type (cve CVE-2019-14540)
 +#2449: Block one more gadget type (CVE-2019-14540)
    (reported by kingkk)
 -#2460: Block one more gadget type (ehcache, no CVE allocated yet)
 +#2460: Block one mode gadget type (ehcache, no CVE allocated yet)
 +  (reported by Fei Lu)
+ #2462: Block two more gadget types (commons-configuration)
  
 +2.9.9 (16-May-2019)
 +
 +#1408: Call to `TypeVariable.getBounds()` without synchronization unsafe on some platforms
 + (reported by Thomas K)
 +#2221: `DeserializationProblemHandler.handleUnknownTypeId()` returning `Void.class`,
 +  enableDefaultTyping causing NPE
 + (reported by MeyerNils@github)
 +#2251: Getter that returns an abstract collection breaks a delegating `@JsonCreator`
 +#2265: Inconsistent handling of Collections$UnmodifiableList vs Collections$UnmodifiableRandomAccessList
 + (reported by Joffrey B)
 +#2299: Fix for using jackson-databind in an OSGi environment under Android
 + (contributed by Christoph F)
 +#2303: Deserialize null, when java type is "TypeRef of TypeRef of T", does not provide "Type(Type(null))"
 + (reported by Cyril M)
 +#2324: `StringCollectionDeserializer` fails with custom collection
 + (reported byb Daniil B)
 +#2326: Block one more gadget type (CVE-2019-12086)
 +- Prevent String coercion of `null` in `WritableObjectId` when calling `JsonGenerator.writeObjectId()`,
 +  mostly relevant for formats like YAML that have native Object Ids
 +
 +2.9.8 (15-Dec-2018)
 +
 +#1662: `ByteBuffer` serialization is broken if offset is not 0
 + (reported by j-baker@github)
 +#2155: Type parameters are checked for equality while isAssignableFrom expected
 + (reported by frankfiedler@github)
 +#2167: Large ISO-8601 Dates are formatted/serialized incorrectly
 +#2181: Don't re-use dynamic serializers for property-updating copy constructors
 + (suggested by Pavel N)
 +#2183: Base64 JsonMappingException: Unexpected end-of-input
 + (reported by ViToni@github)
 +#2186: Block more classes from polymorphic deserialization (CVE-2018-19360,
 +  CVE-2018-19361, CVE-2018-19362)
 + (reported by Guixiong Wu)
 +#2197: Illegal reflective access operation warning when using `java.lang.Void`
 +  as value type
 + (reported by Ren√© K)
 +#2202: StdKeyDeserializer Class method _getToStringResolver is slow causing Thread Block
 + (reported by sushobhitrajan@github)
 +
 +2.9.7 (19-Sep-2018)
 +
 +#2060: `UnwrappingBeanPropertyWriter` incorrectly assumes the found serializer is
 +  of type `UnwrappingBeanSerializer`
 + (reported by Petar T)
 +#2064: Cannot set custom format for `SqlDateSerializer` globally
 + (reported by Brandon K)
 +#2079: NPE when visiting StaticListSerializerBase
 + (reported by WorldSEnder@github)
 +#2082: `FactoryBasedEnumDeserializer` should be cachable
 +#2088: `@JsonUnwrapped` fields are skipped when using `PropertyBasedCreator` if
 +  they appear after the last creator property
 + (reported, fix contributed by 6bangs@github)
 +#2096: `TreeTraversingParser` does not take base64 variant into account
 + (reported by tangiel@github)
 +#2097: Block more classes from polymorphic deserialization (CVE-2018-14718
 +  - CVE-2018-14721)
 +#2109: Canonical string for reference type is built incorrectly
 + (reported by svarzee@github)
 +#2120: `NioPathDeserializer` improvement
 + (contributed by Semyon L)
 +#2128: Location information included twice for some `JsonMappingException`s
 +
 +2.9.6 (12-Jun-2018)
 +
 +#955: Add `MapperFeature.USE_BASE_TYPE_AS_DEFAULT_IMPL` to use declared base type
 +   as `defaultImpl` for polymorphic deserialization
 +  (contributed by mikeldpl@github)
 +#1328: External property polymorphic deserialization does not work with enums
 +#1565: Deserialization failure with Polymorphism using JsonTypeInfo `defaultImpl`,
 +  subtype as target
 +#1964: Failed to specialize `Map` type during serialization where key type
 +  incompatibility overidden via "raw" types
 + (reported by ptirador@github)
 +#1990: MixIn `@JsonProperty` for `Object.hashCode()` is ignored
 + (reported by Freddy B)
 +#1991: Context attributes are not passed/available to custom serializer if object is in POJO
 + (reported by dletin@github)
 +#1998: Removing "type" attribute with Mixin not taken in account if
 +  using ObjectMapper.copy()
 + (reported by SBKila@github)
 +#1999: "Duplicate property" issue should mention which class it complains about
 + (reported by Ondrej Z)
 +#2001: Deserialization issue with `@JsonIgnore` and `@JsonCreator` + `@JsonProperty`
 +  for same property name
 + (reported, fix contributed by Jakub S)
 +#2015: `@Jsonsetter with Nulls.SKIP` collides with
 +  `DeserializationFeature.READ_UNKNOWN_ENUM_VALUES_AS_NULL` when parsing enum
 + (reported by ndori@github)
 +#2016: Delegating JsonCreator disregards JsonDeserialize info
 + (reported by Carter K)
 +#2019: Abstract Type mapping in 2.9 fails when multiple modules are registered
 + (reported by asger82@github)
 +#2021: Delegating JsonCreator disregards `JsonDeserialize.using` annotation
 +#2023: `JsonFormat.Feature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT` not working
 +  with `null` coercion with `@JsonSetter`
 +#2027: Concurrency error causes `IllegalStateException` on `BeanPropertyMap`
 + (reported by franboragina@github)
 +#2032: CVE-2018-11307: Potential information exfiltration with default typing, serialization gadget from MyBatis
 + (reported by Guixiong Wu)
 +#2034: Serialization problem with type specialization of nested generic types
 + (reported by Reinhard P)
 +#2038: JDK Serializing and using Deserialized `ObjectMapper` loses linkage
 +  back from `JsonParser.getCodec()`
 + (reported by Chetan N)
 +#2051: Implicit constructor property names are not renamed properly with
 +  `PropertyNamingStrategy`
 +#2052: CVE-2018-12022: Block polymorphic deserialization of types from Jodd-db library
 + (reported by Guixiong Wu)
 +#2058: CVE-2018-12023: Block polymorphic deserialization of types from Oracle JDBC driver
 + (reported by Guixiong Wu)
 +
 +2.9.5 (26-Mar-2018)
 +
 +#1911: Allow serialization of `BigDecimal` as String, using
 +  `@JsonFormat(shape=Shape.String)`, config overrides
 + (suggested by cen1@github)
 +#1912: `BeanDeserializerModifier.updateBuilder()` not work to set custom
 +  deserializer on a property (since 2.9.0)
 + (contributed by Deblock T)
 +#1931: Two more `c3p0` gadgets to exploit default typing issue
 + (reported by lilei@venusgroup.com.cn)
 +#1932: `EnumMap` cannot deserialize with type inclusion as property
 +#1940: `Float` values with integer value beyond `int` lose precision if
 +  bound to `long`
 + (reported by Aniruddha M)
 +#1941: `TypeFactory.constructFromCanonical()` throws NPE for Unparameterized
 +  generic canonical strings
 + (reported by ayushgp@github)
 +#1947: `MapperFeature.AUTO_DETECT_XXX` do not work if all disabled
 + (reported by Timur S)
 +#1977: Serializing an Iterator with multiple sub-types fails after upgrading to 2.9.x
 + (reported by ssivanand@github)
 +#1978: Using @JsonUnwrapped annotation in builderdeserializer hangs in infinite loop
 + (reported by roeltje25@github)
 +
 +2.9.4 (24-Jan-2018)
 +
 +#1382: `@JsonProperty(access=READ_ONLY)` unxepected behaviour with `Collections`
 + (reported by hexfaker@github)
 +#1673: Serialising generic value classes via Reference Types (like Optional) fails
 +  to include type information
 + (reported by Pier-Luc W)
 +#1729: Integer bounds verification when calling `TokenBuffer.getIntValue()`
 + (reported by Kevin G)
 +#1853: Deserialise from Object (using Creator methods) returns field name instead of value
 + (reported by Alexander S)
 +#1854: NPE deserializing collection with `@JsonCreator` and `ACCEPT_CASE_INSENSITIVE_PROPERTIES`
 + (reported by rue-jw@github)
 +#1855: Blacklist for more serialization gadgets (dbcp/tomcat, spring)
 +#1859: Issue handling unknown/unmapped Enum keys
 + (reported by remya11@github)
 +#1868: Class name handling for JDK unmodifiable Collection types changed
 +  (reported by Rob W)
 +#1870: Remove `final` on inherited methods in `BuilderBasedDeserializer` to allow
 +  overriding by subclasses
 +  (requested by Ville K)
 +#1878: `@JsonBackReference` property is always ignored when deserializing since 2.9.0
 + (reported by reda-alaoui@github)
 +#1895: Per-type config override "JsonFormat.Shape.OBJECT" for Map.Entry not working
 + (reported by mcortella@github)
 +#1899: Another two gadgets to exploit default typing issue in jackson-databind
 + (reported by OneSourceCat@github)
 +#1906: Add string format specifier for error message in `PropertyValueBuffer`
 + (reported by Joe S)
 +#1907: Remove `getClass()` from `_valueType` argument for error reporting
 + (reported by Joe S)
 +
 +2.9.3 (09-Dec-2017)
 +
 +#1604: Nested type arguments doesn't work with polymorphic types
 +#1794: `StackTraceElementDeserializer` not working if field visibility changed
 + (reported by dsingley@github)
 +#1799: Allow creation of custom sub-types of `NullNode`, `BooleanNode`, `MissingNode`
 +#1804: `ValueInstantiator.canInstantiate()` ignores `canCreateUsingArrayDelegate()`
 + (reported byb henryptung@github)
 +#1807: Jackson-databind caches plain map deserializer and use it even map has `@JsonDeserializer`
 + (reported by lexas2509@github)
 +#1823: ClassNameIdResolver doesn't handle resolve Collections$SingletonMap & Collections$SingletonSet
 + (reported by Peter J)
 +#1831: `ObjectReader.readValue(JsonNode)` does not work correctly with polymorphic types,
 +  value to update
 + (reported by basmastr@github)
 +#1835: ValueInjector break from 2.8.x to 2.9.x
 + (repoted by kinigitbyday@github)
 +#1842: `null` String for `Exception`s deserialized as String "null" instead of `null`
 + (reported by ZeleniJure@github)
 +#1843: Include name of unsettable property in exception from `SetterlessProperty.set()`
 + (suggested by andreh7@github)
 +#1844: Map "deep" merge only adds new items, but not override existing values
 + (reported by alinakovalenko@github)
 +
 +2.9.2 (14-Oct-2017)
 +
 +(possibly) #1756: Deserialization error with custom `AnnotationIntrospector`
 + (reported by Daniel N)
 +#1705: Non-generic interface method hides type resolution info from generic base class
 +  (reported by Tim B)
 + NOTE: was originally reported fixed in 2.9.1 -- turns out it wasn't.
 +#1767: Allow `DeserializationProblemHandler` to respond to primitive types
 + (reported by nhtzr@github)
 +#1768: Improve `TypeFactory.constructFromCanonical()` to work with
 +  `java.lang.reflect.Type.getTypeName()' format
 + (suggested by Lu√≠s C)
 +#1771: Pass missing argument for string formatting in `ObjectMapper`
 + (reported by Nils B)
 +#1788: `StdDateFormat._parseAsISO8601()` does not parse "fractional" timezone correctly
 +#1793: `java.lang.NullPointerException` in `ObjectArraySerializer.acceptJsonFormatVisitor()`
 +  for array value with `@JsonValue`
 + (reported by Vincent D)
 +
 +2.9.1 (07-Sep-2017)
 +
 +#1725: `NPE` In `TypeFactory. constructParametricType(...)`
 + (reported by ctytgat@github)
 +#1730: InvalidFormatException` for `JsonToken.VALUE_EMBEDDED_OBJECT`
 + (reported by zigzago@github)
 +#1744: StdDateFormat: add option to serialize timezone offset with a colon
 + (contributed by Bertrand R)
 +#1745: StdDateFormat: accept and truncate millis larger than 3 digits
 + (suggested by Bertrand R)
 +#1749: StdDateFormat: performance improvement of '_format(..)' method 
 + (contributed by Bertrand R)
 +#1759: Reuse `Calendar` instance during parsing by `StdDateFormat`
 + (contributed by Bertrand R)
 +- Fix `DelegatingDeserializer` constructor to pass `handledType()` (and
 +  not type of deserializer being delegated to!)
 +- Add `Automatic-Module-Name` ("com.fasterxml.jackson.databind") for JDK 9 module system
 +
 +2.9.0 (30-Jul-2017)
 +
 +#219: SqlDateSerializer does not obey SerializationConfig.Feature.WRITE_DATES_AS_TIMESTAMPS
 + (reported by BrentDouglas@github)
 +#265: Add descriptive exception for attempts to use `@JsonWrapped` via Creator parameter
 +#291: @JsonTypeInfo with As.EXTERNAL_PROPERTY doesn't work if external type property
 +  is referenced more than once
 + (reported by Starkom@github)
 +#357: StackOverflowError with contentConverter that returns array type
 + (reported by Florian S)
 +#383: Recursive `@JsonUnwrapped` (`child` with same type) fail: "No _valueDeserializer assigned"
 + (reported by tdavis@github)
 +#403: Make FAIL_ON_NULL_FOR_PRIMITIVES apply to primitive arrays and other types that wrap primitives
 + (reported by Harleen S)
 +#476: Allow "Serialize as POJO" using `@JsonFormat(shape=Shape.OBJECT)` class annotation
 +#507: Support for default `@JsonView` for a class
 + (suggested by Mark W)
 +#687: Exception deserializing a collection @JsonIdentityInfo and a property based creator
 +#865: `JsonFormat.Shape.OBJECT` ignored when class implements `Map.Entry`
 +#888: Allow specifying custom exclusion comparator via `@JsonInclude`,
 +  using `JsonInclude.Include.CUSTOM`
 +#994: `DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS` only works for POJOs, Maps
 +#1029: Add a way to define property name aliases
 +#1035: `@JsonAnySetter` assumes key of `String`, does not consider declared type.
 + (reported by Michael F)
 +#1060: Allow use of `@JsonIgnoreProperties` for POJO-valued arrays, `Collection`s
 +#1106: Add `MapperFeature.ALLOW_COERCION_OF_SCALARS` for enabling/disabling coercions
 +#1284: Make `StdKeySerializers` use new `JsonGenerator.writeFieldId()` for `int`/`long` keys
 +#1320: Add `ObjectNode.put(String, BigInteger)`
 + (proposed by Jan L)
 +#1341: `DeserializationFeature.FAIL_ON_MISSING_EXTERNAL_TYPE_ID_PROPERTY`
 + (contributed by Connor K)
 +#1347: Extend `ObjectMapper.configOverrides()` to allow changing visibility rules
 +#1356: Differentiate between input and code exceptions on deserialization
 + (suggested by Nick B)
 +#1369: Improve `@JsonCreator` detection via `AnnotationIntrospector`
 + by passing `MappingConfig`
 +#1371: Add `MapperFeature.INFER_CREATOR_FROM_CONSTRUCTOR_PROPERTIES` to allow
 + disabling use of `@CreatorProperties` as explicit `@JsonCreator` equivalent
 +#1376: Add ability to disable JsonAnySetter/JsonAnyGetter via mixin
 + (suggested by brentryan@github)
 +#1399: Add support for `@JsonMerge` to allow "deep update"
 +#1402: Use `@JsonSetter(nulls=...)` to specify handling of `null` values during deserialization
 +#1406: `ObjectMapper.readTree()` methods do not return `null` on end-of-input
 + (reported by Fabrizio C)
 +#1407: `@JsonFormat.pattern` is ignored for `java.sql.Date` valued properties
 + (reported by sangpire@github)
 +#1415: Creating CollectionType for non generic collection class broken
 +#1428: Allow `@JsonValue` on a field, not just getter
 +#1434: Explicitly pass null on invoke calls with no arguments
 + (contributed by Emiliano C)
 +#1433: `ObjectMapper.convertValue()` with null does not consider null conversions
 +  (`JsonDeserializer.getNullValue()`)
 + (contributed by jdmichal@github)
 +#1440: Wrong `JsonStreamContext` in `DeserializationProblemHandler` when reading
 +  `TokenBuffer` content
 + (reported by Patrick G)
 +#1444: Change `ObjectMapper.setSerializationInclusion()` to apply to content inclusion too
 +#1450: `SimpleModule.addKeyDeserializer()' should throw `IllegalArgumentException` if `null`
 +  reference of `KeyDeserializer` passed
 + (suggested by PawelJagus@github)
 +#1454: Support `@JsonFormat.lenient` for `java.util.Date`, `java.util.Calendar`
 +#1474: Replace use of `Class.newInstance()` (deprecated in Java 9) with call via Constructor
 +#1480: Add support for serializing `boolean`/`Boolean` as number (0 or 1)
 + (suggested by jwilmoth@github)
 +#1520: Case insensitive enum deserialization with `MapperFeature.ACCEPT_CASE_INSENSITIVE_ENUMS`
 + (contributed by Ana-Eliza B)
 +#1522: Global `@JsonInclude(Include.NON_NULL)` for all properties with a specific type
 + (contributed by Carsten W)
 +#1544: EnumMapDeserializer assumes a pure EnumMap and does not support EnumMap derived classes
 + (reported by Lyor G)
 +#1550: Unexpected behavior with `@JsonInclude(JsonInclude.Include.NON_EMPTY)` and
 + `java.util.Date` serialization
 +#1551: `JsonMappingException` with polymorphic type and `JsonIdentityInfo` when basic type is abstract
 + (reported by acm073@github)
 +#1552: Map key converted to byte array is not serialized as base64 string
 + (reported by nmatt@github)
 +#1554: Support deserialization of `Shape.OBJECT` ("as POJO") for `Map`s (and map-like types)
 +#1556: Add `ObjectMapper.updateValue()` method to update instance with given overrides
 + (suggested by syncer@github)
 +#1583: Add a `DeserializationFeature.FAIL_ON_TRAILING_TOKENS` to force reading of the
 +  whole input as single value
 +#1592: Add support for handling primitive/discrepancy problem with type refinements
 +#1605: Allow serialization of `InetAddress` as simple numeric host address
 + (requested by Jared J)
 +#1616: Extraneous type id mapping added for base type itself
 +#1619: By-pass annotation introspection for array types
 +#1637: `ObjectReader.at()` with `JsonPointer` stops after first collection
 + (reported by Chris P)
 +#1653: Convenience overload(s) for ObjectMapper#registerSubtypes
 +#1655: `@JsonAnyGetter` uses different `bean` parameter in `SimpleBeanPropertyFilter`
 + (reported by georgeflugq@github)
 +#1678: Rewrite `StdDateFormat` ISO-8601 handling functionality
 +#1684: Rewrite handling of type ids to let `JsonGenerator` handle (more of) details
 +#1688: Deserialization fails for `java.nio.file.Path` implementations when default typing
 +  enabled
 + (reported by Christian B)
 +#1690: Prevent use of quoted number (index) for Enum deserialization via
 +  `MapperFeature.ALLOW_COERCION_OF_SCALARS`
 + (requested by magdel@github)
 +
  2.8.11.4 (25-Jul-2019)
  
  #2334: Block one more gadget type (CVE-2019-12384)