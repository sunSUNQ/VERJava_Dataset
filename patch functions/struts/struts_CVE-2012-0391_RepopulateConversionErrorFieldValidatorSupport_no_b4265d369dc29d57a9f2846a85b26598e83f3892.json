[{"cve_id": "struts", "added_line": [{"target_line_num": 26, "target_line_code": "import org.apache.commons.lang.StringEscapeUtils;"}, {"target_line_num": 32, "target_line_code": "*"}, {"target_line_num": 33, "target_line_code": "*"}, {"target_line_num": 37, "target_line_code": "*"}, {"target_line_num": 39, "target_line_code": "*"}, {"target_line_num": 43, "target_line_code": "* The capability of auto-repopulating the stack with a fake parameter map when"}, {"target_line_num": 44, "target_line_code": "* a conversion error has occurred can be done with 'repopulateField' property"}, {"target_line_num": 45, "target_line_code": "* set to \"true\"."}, {"target_line_num": 49, "target_line_code": "* This is typically usefull when one wants to repopulate the field with the original value"}, {"target_line_num": 50, "target_line_code": "* when a conversion error occurred. Eg. with a textfield that only allows an Integer"}, {"target_line_num": 53, "target_line_code": "* porperty set to true, it will, meaning the textfield will have 'one' as its value"}, {"target_line_num": 55, "target_line_code": "*"}, {"target_line_num": 57, "target_line_code": "*"}, {"target_line_num": 59, "target_line_code": "*"}, {"target_line_num": 62, "target_line_code": "*"}, {"target_line_num": 66, "target_line_code": "*   &lt;ww:textfield"}, {"target_line_num": 70, "target_line_code": "*   &lt;ww:submit /&gt;"}, {"target_line_num": 72, "target_line_code": "*"}, {"target_line_num": 75, "target_line_code": "*"}, {"target_line_num": 78, "target_line_code": "*"}, {"target_line_num": 93, "target_line_code": "*"}, {"target_line_num": 96, "target_line_code": "*"}, {"target_line_num": 97, "target_line_code": "*"}, {"target_line_num": 100, "target_line_code": "*"}, {"target_line_num": 104, "target_line_code": "*"}, {"target_line_num": 106, "target_line_code": "*    public void setMyIntegerField(Integer myIntegerField) {"}, {"target_line_num": 107, "target_line_code": "*       this.myIntegerField = myIntegerField;"}, {"target_line_num": 110, "target_line_code": "*"}, {"target_line_num": 113, "target_line_code": "*"}, {"target_line_num": 114, "target_line_code": "*"}, {"target_line_num": 117, "target_line_code": "*"}, {"target_line_num": 175, "target_line_code": "if ((tmpValue.length > 0)) {"}, {"target_line_num": 177, "target_line_code": "fakeParams.put(fullFieldName, escape(tmpValue[0]));"}, {"target_line_num": 180, "target_line_code": "LOG.warn(\"value is an empty array of String or with first element in it as null [\" + value + \"], will not repopulate conversion error \");"}, {"target_line_num": 186, "target_line_code": "fakeParams.put(fullFieldName, escape(tmpValue));"}], "removed_line": [{"source_line_num": 31, "source_line_code": "*"}, {"source_line_num": 32, "source_line_code": "*"}, {"source_line_num": 36, "source_line_code": "*"}, {"source_line_num": 38, "source_line_code": "*"}, {"source_line_num": 42, "source_line_code": "* The capability of auto-repopulating the stack with a fake parameter map when"}, {"source_line_num": 43, "source_line_code": "* a conversion error has occurred can be done with 'repopulateField' property"}, {"source_line_num": 44, "source_line_code": "* set to \"true\"."}, {"source_line_num": 48, "source_line_code": "* This is typically usefull when one wants to repopulate the field with the original value"}, {"source_line_num": 49, "source_line_code": "* when a conversion error occurred. Eg. with a textfield that only allows an Integer"}, {"source_line_num": 52, "source_line_code": "* porperty set to true, it will, meaning the textfield will have 'one' as its value"}, {"source_line_num": 54, "source_line_code": "*"}, {"source_line_num": 56, "source_line_code": "*"}, {"source_line_num": 58, "source_line_code": "*"}, {"source_line_num": 61, "source_line_code": "*"}, {"source_line_num": 65, "source_line_code": "*   &lt;ww:textfield"}, {"source_line_num": 69, "source_line_code": "*   &lt;ww:submit /&gt;"}, {"source_line_num": 71, "source_line_code": "*"}, {"source_line_num": 74, "source_line_code": "*"}, {"source_line_num": 77, "source_line_code": "*"}, {"source_line_num": 92, "source_line_code": "*"}, {"source_line_num": 95, "source_line_code": "*"}, {"source_line_num": 96, "source_line_code": "*"}, {"source_line_num": 99, "source_line_code": "*"}, {"source_line_num": 103, "source_line_code": "*"}, {"source_line_num": 105, "source_line_code": "*    public void setMyIntegerField(Integer myIntegerField) {"}, {"source_line_num": 106, "source_line_code": "*       this.myIntegerField = myIntegerField;"}, {"source_line_num": 109, "source_line_code": "*"}, {"source_line_num": 112, "source_line_code": "*"}, {"source_line_num": 113, "source_line_code": "*"}, {"source_line_num": 116, "source_line_code": "*"}, {"source_line_num": 174, "source_line_code": "if (tmpValue != null && (tmpValue.length > 0)) {"}, {"source_line_num": 176, "source_line_code": "fakeParams.put(fullFieldName, \"'\" + tmpValue[0] + \"'\");"}, {"source_line_num": 179, "source_line_code": "LOG.warn(\"value is an empty array of String or with first element in it as null [\" + value + \"], will not repopulate conversion error \");"}, {"source_line_num": 185, "source_line_code": "fakeParams.put(fullFieldName, \"'\" + tmpValue + \"'\");"}], "filename": "xwork-core/src/main/java/com/opensymphony/xwork2/validator/validators/RepopulateConversionErrorFieldValidatorSupport.java", "patch_func": "no", "diff_file": "struts_CVE-2012-0391_b4265d369dc29d57a9f2846a85b26598e83f3892.diff", "patch_tag": "STRUTS_6_0_0_RC1", "source_tag": "STRUTS_2_5_BETA3"}]