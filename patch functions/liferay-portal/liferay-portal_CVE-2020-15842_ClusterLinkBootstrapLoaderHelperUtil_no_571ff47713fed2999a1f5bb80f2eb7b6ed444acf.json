[{"cve_id": "liferay-portal", "added_line": [], "removed_line": [{"source_line_num": 2, "source_line_code": "/**"}, {"source_line_num": 3, "source_line_code": "* Copyright (c) 2000-present Liferay, Inc. All rights reserved."}, {"source_line_num": 4, "source_line_code": "*"}, {"source_line_num": 5, "source_line_code": "* This library is free software; you can redistribute it and/or modify it under"}, {"source_line_num": 6, "source_line_code": "* the terms of the GNU Lesser General Public License as published by the Free"}, {"source_line_num": 7, "source_line_code": "* Software Foundation; either version 2.1 of the License, or (at your option)"}, {"source_line_num": 8, "source_line_code": "* any later version."}, {"source_line_num": 9, "source_line_code": "*"}, {"source_line_num": 10, "source_line_code": "* This library is distributed in the hope that it will be useful, but WITHOUT"}, {"source_line_num": 11, "source_line_code": "* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS"}, {"source_line_num": 12, "source_line_code": "* FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more"}, {"source_line_num": 13, "source_line_code": "* details."}, {"source_line_num": 14, "source_line_code": "*/"}, {"source_line_num": 16, "source_line_code": "package com.liferay.portal.cache.multiple.internal.bootstrap;"}, {"source_line_num": 18, "source_line_code": "import com.liferay.petra.lang.CentralizedThreadLocal;"}, {"source_line_num": 19, "source_line_code": "import com.liferay.portal.cache.multiple.internal.PortalCacheManagerUtil;"}, {"source_line_num": 20, "source_line_code": "import com.liferay.portal.kernel.cache.PortalCache;"}, {"source_line_num": 21, "source_line_code": "import com.liferay.portal.kernel.cache.PortalCacheHelperUtil;"}, {"source_line_num": 22, "source_line_code": "import com.liferay.portal.kernel.cache.PortalCacheManager;"}, {"source_line_num": 23, "source_line_code": "import com.liferay.portal.kernel.cluster.ClusterExecutorUtil;"}, {"source_line_num": 24, "source_line_code": "import com.liferay.portal.kernel.cluster.ClusterNode;"}, {"source_line_num": 25, "source_line_code": "import com.liferay.portal.kernel.cluster.ClusterNodeResponse;"}, {"source_line_num": 26, "source_line_code": "import com.liferay.portal.kernel.cluster.ClusterRequest;"}, {"source_line_num": 27, "source_line_code": "import com.liferay.portal.kernel.cluster.FutureClusterResponses;"}, {"source_line_num": 28, "source_line_code": "import com.liferay.portal.kernel.exception.SystemException;"}, {"source_line_num": 29, "source_line_code": "import com.liferay.portal.kernel.io.AnnotatedObjectInputStream;"}, {"source_line_num": 30, "source_line_code": "import com.liferay.portal.kernel.io.AnnotatedObjectOutputStream;"}, {"source_line_num": 31, "source_line_code": "import com.liferay.portal.kernel.log.Log;"}, {"source_line_num": 32, "source_line_code": "import com.liferay.portal.kernel.log.LogFactoryUtil;"}, {"source_line_num": 33, "source_line_code": "import com.liferay.portal.kernel.util.GetterUtil;"}, {"source_line_num": 34, "source_line_code": "import com.liferay.portal.kernel.util.MethodHandler;"}, {"source_line_num": 35, "source_line_code": "import com.liferay.portal.kernel.util.MethodKey;"}, {"source_line_num": 36, "source_line_code": "import com.liferay.portal.kernel.util.PropsKeys;"}, {"source_line_num": 37, "source_line_code": "import com.liferay.portal.kernel.util.PropsUtil;"}, {"source_line_num": 38, "source_line_code": "import com.liferay.portal.kernel.util.SocketUtil;"}, {"source_line_num": 40, "source_line_code": "import java.io.IOException;"}, {"source_line_num": 41, "source_line_code": "import java.io.ObjectInputStream;"}, {"source_line_num": 42, "source_line_code": "import java.io.ObjectOutputStream;"}, {"source_line_num": 43, "source_line_code": "import java.io.OutputStream;"}, {"source_line_num": 44, "source_line_code": "import java.io.Serializable;"}, {"source_line_num": 46, "source_line_code": "import java.net.ServerSocket;"}, {"source_line_num": 47, "source_line_code": "import java.net.Socket;"}, {"source_line_num": 48, "source_line_code": "import java.net.SocketAddress;"}, {"source_line_num": 49, "source_line_code": "import java.net.SocketException;"}, {"source_line_num": 50, "source_line_code": "import java.net.SocketTimeoutException;"}, {"source_line_num": 52, "source_line_code": "import java.nio.channels.ServerSocketChannel;"}, {"source_line_num": 54, "source_line_code": "import java.util.ArrayList;"}, {"source_line_num": 55, "source_line_code": "import java.util.Arrays;"}, {"source_line_num": 56, "source_line_code": "import java.util.Collections;"}, {"source_line_num": 57, "source_line_code": "import java.util.HashMap;"}, {"source_line_num": 58, "source_line_code": "import java.util.List;"}, {"source_line_num": 59, "source_line_code": "import java.util.Map;"}, {"source_line_num": 60, "source_line_code": "import java.util.concurrent.BlockingQueue;"}, {"source_line_num": 61, "source_line_code": "import java.util.concurrent.TimeUnit;"}, {"source_line_num": 63, "source_line_code": "import org.osgi.service.component.annotations.Activate;"}, {"source_line_num": 64, "source_line_code": "import org.osgi.service.component.annotations.Component;"}, {"source_line_num": 66, "source_line_code": "/**"}, {"source_line_num": 67, "source_line_code": "* @author Shuyang Zhou"}, {"source_line_num": 68, "source_line_code": "* @author Sherry Yang"}, {"source_line_num": 69, "source_line_code": "*/"}, {"source_line_num": 70, "source_line_code": "@Component(enabled = false, immediate = true, service = {})"}, {"source_line_num": 71, "source_line_code": "public class ClusterLinkBootstrapLoaderHelperUtil {"}, {"source_line_num": 73, "source_line_code": "public static SocketAddress createServerSocketFromCluster("}, {"source_line_num": 74, "source_line_code": "String portalCacheManagerName, List<String> portalCacheNames)"}, {"source_line_num": 75, "source_line_code": "throws Exception {"}, {"source_line_num": 77, "source_line_code": "ClusterNode localClusterNode ="}, {"source_line_num": 78, "source_line_code": "ClusterExecutorUtil.getLocalClusterNode();"}, {"source_line_num": 80, "source_line_code": "ServerSocketChannel serverSocketChannel ="}, {"source_line_num": 81, "source_line_code": "SocketUtil.createServerSocketChannel("}, {"source_line_num": 82, "source_line_code": "localClusterNode.getBindInetAddress(),"}, {"source_line_num": 83, "source_line_code": "GetterUtil.getInteger("}, {"source_line_num": 84, "source_line_code": "PropsUtil.get(PropsKeys.EHCACHE_SOCKET_START_PORT), 32454),"}, {"source_line_num": 85, "source_line_code": "_serverSocketConfigurator);"}, {"source_line_num": 87, "source_line_code": "ServerSocket serverSocket = serverSocketChannel.socket();"}, {"source_line_num": 89, "source_line_code": "ClusterLinkBootstrapLoaderServerThread"}, {"source_line_num": 90, "source_line_code": "clusterLinkBootstrapLoaderServerThread ="}, {"source_line_num": 91, "source_line_code": "new ClusterLinkBootstrapLoaderServerThread("}, {"source_line_num": 92, "source_line_code": "serverSocket, portalCacheManagerName, portalCacheNames);"}, {"source_line_num": 94, "source_line_code": "clusterLinkBootstrapLoaderServerThread.start();"}, {"source_line_num": 96, "source_line_code": "return serverSocket.getLocalSocketAddress();"}, {"source_line_num": 99, "source_line_code": "public static boolean isSkipped() {"}, {"source_line_num": 100, "source_line_code": "return _skipBootstrapLoaderThreadLocal.get();"}, {"source_line_num": 103, "source_line_code": "public static void loadCachesFromCluster("}, {"source_line_num": 104, "source_line_code": "String portalCacheManagerName, String... portalCacheNames)"}, {"source_line_num": 105, "source_line_code": "throws Exception {"}, {"source_line_num": 107, "source_line_code": "synchronized (ClusterLinkBootstrapLoaderHelperUtil.class) {"}, {"source_line_num": 108, "source_line_code": "if (!_started) {"}, {"source_line_num": 109, "source_line_code": "List<String> portalCaches = _deferredPortalCaches.get("}, {"source_line_num": 110, "source_line_code": "portalCacheManagerName);"}, {"source_line_num": 112, "source_line_code": "if (portalCaches == null) {"}, {"source_line_num": 113, "source_line_code": "portalCaches = new ArrayList<>();"}, {"source_line_num": 115, "source_line_code": "_deferredPortalCaches.put("}, {"source_line_num": 116, "source_line_code": "portalCacheManagerName, portalCaches);"}, {"source_line_num": 119, "source_line_code": "Collections.addAll(portalCaches, portalCacheNames);"}, {"source_line_num": 121, "source_line_code": "return;"}, {"source_line_num": 125, "source_line_code": "List<ClusterNode> clusterNodes = ClusterExecutorUtil.getClusterNodes();"}, {"source_line_num": 127, "source_line_code": "if (_log.isInfoEnabled()) {"}, {"source_line_num": 128, "source_line_code": "_log.info(\"Cluster nodes \" + clusterNodes);"}, {"source_line_num": 131, "source_line_code": "if (clusterNodes.size() <= 1) {"}, {"source_line_num": 132, "source_line_code": "if (_log.isDebugEnabled()) {"}, {"source_line_num": 133, "source_line_code": "_log.debug("}, {"source_line_num": 134, "source_line_code": "\"Not loading cache from cluster because a cluster peer \" +"}, {"source_line_num": 135, "source_line_code": "\"was not found\");"}, {"source_line_num": 138, "source_line_code": "return;"}, {"source_line_num": 141, "source_line_code": "PortalCacheManager<? extends Serializable, ?> portalCacheManager ="}, {"source_line_num": 142, "source_line_code": "PortalCacheManagerUtil.getPortalCacheManager("}, {"source_line_num": 143, "source_line_code": "portalCacheManagerName);"}, {"source_line_num": 145, "source_line_code": "if (!portalCacheManager.isClusterAware()) {"}, {"source_line_num": 146, "source_line_code": "return;"}, {"source_line_num": 149, "source_line_code": "ClusterRequest clusterRequest = ClusterRequest.createMulticastRequest("}, {"source_line_num": 150, "source_line_code": "new MethodHandler("}, {"source_line_num": 151, "source_line_code": "_createServerSocketFromClusterMethodKey, portalCacheManagerName,"}, {"source_line_num": 152, "source_line_code": "Arrays.asList(portalCacheNames)),"}, {"source_line_num": 153, "source_line_code": "true);"}, {"source_line_num": 155, "source_line_code": "FutureClusterResponses futureClusterResponses ="}, {"source_line_num": 156, "source_line_code": "ClusterExecutorUtil.execute(clusterRequest);"}, {"source_line_num": 158, "source_line_code": "BlockingQueue<ClusterNodeResponse> clusterNodeResponses ="}, {"source_line_num": 159, "source_line_code": "futureClusterResponses.getPartialResults();"}, {"source_line_num": 161, "source_line_code": "ClusterNodeResponse clusterNodeResponse = null;"}, {"source_line_num": 163, "source_line_code": "try {"}, {"source_line_num": 164, "source_line_code": "clusterNodeResponse = clusterNodeResponses.poll("}, {"source_line_num": 165, "source_line_code": "GetterUtil.getLong("}, {"source_line_num": 166, "source_line_code": "PropsUtil.get("}, {"source_line_num": 167, "source_line_code": "PropsKeys.CLUSTER_LINK_NODE_BOOTUP_RESPONSE_TIMEOUT),"}, {"source_line_num": 168, "source_line_code": "10000),"}, {"source_line_num": 169, "source_line_code": "TimeUnit.MILLISECONDS);"}, {"source_line_num": 171, "source_line_code": "catch (InterruptedException ie) {"}, {"source_line_num": 172, "source_line_code": "return;"}, {"source_line_num": 175, "source_line_code": "if (clusterNodeResponse == null) {"}, {"source_line_num": 176, "source_line_code": "if (_log.isWarnEnabled()) {"}, {"source_line_num": 177, "source_line_code": "_log.warn("}, {"source_line_num": 178, "source_line_code": "\"Unable to load cache from the cluster because there was \" +"}, {"source_line_num": 179, "source_line_code": "\"no peer response\");"}, {"source_line_num": 182, "source_line_code": "return;"}, {"source_line_num": 185, "source_line_code": "if (_log.isInfoEnabled()) {"}, {"source_line_num": 186, "source_line_code": "_log.info("}, {"source_line_num": 187, "source_line_code": "\"Load cache data from cluster node \" +"}, {"source_line_num": 188, "source_line_code": "clusterNodeResponse.getClusterNode());"}, {"source_line_num": 191, "source_line_code": "Socket socket = null;"}, {"source_line_num": 193, "source_line_code": "try {"}, {"source_line_num": 194, "source_line_code": "SocketAddress remoteSocketAddress ="}, {"source_line_num": 195, "source_line_code": "(SocketAddress)clusterNodeResponse.getResult();"}, {"source_line_num": 197, "source_line_code": "if (remoteSocketAddress == null) {"}, {"source_line_num": 198, "source_line_code": "_log.error("}, {"source_line_num": 199, "source_line_code": "\"Cluster peer \" + clusterNodeResponse.getClusterNode() +"}, {"source_line_num": 200, "source_line_code": "\" responded with a null socket address\");"}, {"source_line_num": 202, "source_line_code": "return;"}, {"source_line_num": 205, "source_line_code": "socket = new Socket();"}, {"source_line_num": 207, "source_line_code": "socket.connect(remoteSocketAddress);"}, {"source_line_num": 209, "source_line_code": "socket.shutdownOutput();"}, {"source_line_num": 211, "source_line_code": "ObjectInputStream objectInputStream ="}, {"source_line_num": 212, "source_line_code": "new AnnotatedObjectInputStream(socket.getInputStream());"}, {"source_line_num": 214, "source_line_code": "PortalCache<Serializable, Serializable> portalCache = null;"}, {"source_line_num": 216, "source_line_code": "try {"}, {"source_line_num": 217, "source_line_code": "while (true) {"}, {"source_line_num": 218, "source_line_code": "Object object = objectInputStream.readObject();"}, {"source_line_num": 220, "source_line_code": "if (object instanceof CacheElement) {"}, {"source_line_num": 221, "source_line_code": "CacheElement cacheElement = (CacheElement)object;"}, {"source_line_num": 223, "source_line_code": "PortalCacheHelperUtil.putWithoutReplicator("}, {"source_line_num": 224, "source_line_code": "portalCache, cacheElement.getKey(),"}, {"source_line_num": 225, "source_line_code": "cacheElement.getValue());"}, {"source_line_num": 227, "source_line_code": "else if (object instanceof String) {"}, {"source_line_num": 228, "source_line_code": "if (_COMMAND_SOCKET_CLOSE.equals(object)) {"}, {"source_line_num": 229, "source_line_code": "break;"}, {"source_line_num": 232, "source_line_code": "_skipBootstrapLoaderThreadLocal.set(Boolean.TRUE);"}, {"source_line_num": 234, "source_line_code": "try {"}, {"source_line_num": 235, "source_line_code": "portalCache ="}, {"source_line_num": 236, "source_line_code": "(PortalCache<Serializable, Serializable>)"}, {"source_line_num": 237, "source_line_code": "portalCacheManager.getPortalCache("}, {"source_line_num": 238, "source_line_code": "(String)object);"}, {"source_line_num": 240, "source_line_code": "finally {"}, {"source_line_num": 241, "source_line_code": "_skipBootstrapLoaderThreadLocal.remove();"}, {"source_line_num": 244, "source_line_code": "else {"}, {"source_line_num": 245, "source_line_code": "throw new SystemException("}, {"source_line_num": 246, "source_line_code": "\"Socket input stream returned invalid object \" +"}, {"source_line_num": 247, "source_line_code": "object);"}, {"source_line_num": 251, "source_line_code": "finally {"}, {"source_line_num": 252, "source_line_code": "if (objectInputStream != null) {"}, {"source_line_num": 253, "source_line_code": "objectInputStream.close();"}, {"source_line_num": 257, "source_line_code": "catch (Exception e) {"}, {"source_line_num": 258, "source_line_code": "throw new Exception("}, {"source_line_num": 259, "source_line_code": "\"Unable to load cache data from cluster node \" +"}, {"source_line_num": 260, "source_line_code": "clusterNodeResponse.getClusterNode(),"}, {"source_line_num": 261, "source_line_code": "e);"}, {"source_line_num": 263, "source_line_code": "finally {"}, {"source_line_num": 264, "source_line_code": "if (socket != null) {"}, {"source_line_num": 265, "source_line_code": "socket.close();"}, {"source_line_num": 270, "source_line_code": "@Activate"}, {"source_line_num": 271, "source_line_code": "protected void activate() {"}, {"source_line_num": 272, "source_line_code": "if (!_started) {"}, {"source_line_num": 273, "source_line_code": "_started = true;"}, {"source_line_num": 276, "source_line_code": "if (_deferredPortalCaches.isEmpty()) {"}, {"source_line_num": 277, "source_line_code": "return;"}, {"source_line_num": 280, "source_line_code": "if (_log.isDebugEnabled()) {"}, {"source_line_num": 281, "source_line_code": "_log.debug(\"Loading deferred caches\");"}, {"source_line_num": 284, "source_line_code": "try {"}, {"source_line_num": 285, "source_line_code": "for (Map.Entry<String, List<String>> entry :"}, {"source_line_num": 286, "source_line_code": "_deferredPortalCaches.entrySet()) {"}, {"source_line_num": 288, "source_line_code": "List<String> portalCacheNames = entry.getValue();"}, {"source_line_num": 290, "source_line_code": "if (portalCacheNames.isEmpty()) {"}, {"source_line_num": 291, "source_line_code": "continue;"}, {"source_line_num": 294, "source_line_code": "loadCachesFromCluster("}, {"source_line_num": 295, "source_line_code": "entry.getKey(), portalCacheNames.toArray(new String[0]));"}, {"source_line_num": 298, "source_line_code": "catch (Exception e) {"}, {"source_line_num": 299, "source_line_code": "if (_log.isWarnEnabled()) {"}, {"source_line_num": 300, "source_line_code": "_log.warn(\"Unable to load cache data from the cluster\", e);"}, {"source_line_num": 303, "source_line_code": "finally {"}, {"source_line_num": 304, "source_line_code": "_deferredPortalCaches.clear();"}, {"source_line_num": 308, "source_line_code": "private static final String _COMMAND_SOCKET_CLOSE = \"${SOCKET_CLOSE}\";"}, {"source_line_num": 310, "source_line_code": "private static final Log _log = LogFactoryUtil.getLog("}, {"source_line_num": 311, "source_line_code": "ClusterLinkBootstrapLoaderHelperUtil.class);"}, {"source_line_num": 313, "source_line_code": "private static final MethodKey _createServerSocketFromClusterMethodKey ="}, {"source_line_num": 314, "source_line_code": "new MethodKey("}, {"source_line_num": 315, "source_line_code": "ClusterLinkBootstrapLoaderHelperUtil.class,"}, {"source_line_num": 316, "source_line_code": "\"createServerSocketFromCluster\", String.class, List.class);"}, {"source_line_num": 317, "source_line_code": "private static final Map<String, List<String>> _deferredPortalCaches ="}, {"source_line_num": 318, "source_line_code": "new HashMap<>();"}, {"source_line_num": 319, "source_line_code": "private static final SocketUtil.ServerSocketConfigurator"}, {"source_line_num": 320, "source_line_code": "_serverSocketConfigurator = new SocketCacheServerSocketConfiguration();"}, {"source_line_num": 321, "source_line_code": "private static final ThreadLocal<Boolean> _skipBootstrapLoaderThreadLocal ="}, {"source_line_num": 322, "source_line_code": "new CentralizedThreadLocal<>("}, {"source_line_num": 323, "source_line_code": "ClusterLinkBootstrapLoaderHelperUtil.class +"}, {"source_line_num": 324, "source_line_code": "\"._skipBootstrapLoaderThreadLocal\","}, {"source_line_num": 325, "source_line_code": "() -> Boolean.FALSE, false);"}, {"source_line_num": 326, "source_line_code": "private static boolean _started;"}, {"source_line_num": 328, "source_line_code": "private static class CacheElement implements Serializable {"}, {"source_line_num": 330, "source_line_code": "public CacheElement(Serializable key, Serializable value) {"}, {"source_line_num": 331, "source_line_code": "_key = key;"}, {"source_line_num": 332, "source_line_code": "_value = value;"}, {"source_line_num": 335, "source_line_code": "public Serializable getKey() {"}, {"source_line_num": 336, "source_line_code": "return _key;"}, {"source_line_num": 339, "source_line_code": "public Serializable getValue() {"}, {"source_line_num": 340, "source_line_code": "return _value;"}, {"source_line_num": 343, "source_line_code": "private final Serializable _key;"}, {"source_line_num": 344, "source_line_code": "private final Serializable _value;"}, {"source_line_num": 348, "source_line_code": "private static class ClusterLinkBootstrapLoaderServerThread extends Thread {"}, {"source_line_num": 350, "source_line_code": "public ClusterLinkBootstrapLoaderServerThread("}, {"source_line_num": 351, "source_line_code": "ServerSocket serverSocket, String portalCacheManagerName,"}, {"source_line_num": 352, "source_line_code": "List<String> portalCacheNames) {"}, {"source_line_num": 354, "source_line_code": "_serverSocket = serverSocket;"}, {"source_line_num": 355, "source_line_code": "_portalCacheManagerName = portalCacheManagerName;"}, {"source_line_num": 356, "source_line_code": "_portalCacheNames = portalCacheNames;"}, {"source_line_num": 358, "source_line_code": "setDaemon(true);"}, {"source_line_num": 359, "source_line_code": "setName("}, {"source_line_num": 360, "source_line_code": "ClusterLinkBootstrapLoaderServerThread.class.getName() + \" - \" +"}, {"source_line_num": 361, "source_line_code": "portalCacheNames);"}, {"source_line_num": 362, "source_line_code": "setPriority(Thread.NORM_PRIORITY);"}, {"source_line_num": 365, "source_line_code": "@Override"}, {"source_line_num": 366, "source_line_code": "public void run() {"}, {"source_line_num": 367, "source_line_code": "Socket socket = null;"}, {"source_line_num": 369, "source_line_code": "try {"}, {"source_line_num": 370, "source_line_code": "try {"}, {"source_line_num": 371, "source_line_code": "socket = _serverSocket.accept();"}, {"source_line_num": 373, "source_line_code": "catch (SocketTimeoutException ste) {"}, {"source_line_num": 374, "source_line_code": "if (_log.isDebugEnabled()) {"}, {"source_line_num": 375, "source_line_code": "_log.debug("}, {"source_line_num": 376, "source_line_code": "\"Terminating the socket thread \" + getName() +"}, {"source_line_num": 377, "source_line_code": "\" that the client requested but never used\");"}, {"source_line_num": 380, "source_line_code": "return;"}, {"source_line_num": 382, "source_line_code": "finally {"}, {"source_line_num": 383, "source_line_code": "_serverSocket.close();"}, {"source_line_num": 386, "source_line_code": "socket.shutdownInput();"}, {"source_line_num": 388, "source_line_code": "try (OutputStream outputStream = socket.getOutputStream();"}, {"source_line_num": 389, "source_line_code": "ObjectOutputStream objectOutputStream ="}, {"source_line_num": 390, "source_line_code": "new AnnotatedObjectOutputStream(outputStream)) {"}, {"source_line_num": 392, "source_line_code": "PortalCacheManager<? extends Serializable, ?>"}, {"source_line_num": 393, "source_line_code": "portalCacheManager ="}, {"source_line_num": 394, "source_line_code": "PortalCacheManagerUtil.getPortalCacheManager("}, {"source_line_num": 395, "source_line_code": "_portalCacheManagerName);"}, {"source_line_num": 397, "source_line_code": "for (String portalCacheName : _portalCacheNames) {"}, {"source_line_num": 398, "source_line_code": "PortalCache<Serializable, Serializable> portalCache ="}, {"source_line_num": 399, "source_line_code": "(PortalCache<Serializable, Serializable>)"}, {"source_line_num": 400, "source_line_code": "portalCacheManager.getPortalCache("}, {"source_line_num": 401, "source_line_code": "portalCacheName);"}, {"source_line_num": 403, "source_line_code": "if (portalCache == null) {"}, {"source_line_num": 404, "source_line_code": "_skipBootstrapLoaderThreadLocal.set(Boolean.TRUE);"}, {"source_line_num": 406, "source_line_code": "try {"}, {"source_line_num": 407, "source_line_code": "portalCacheManager.getPortalCache("}, {"source_line_num": 408, "source_line_code": "portalCacheName);"}, {"source_line_num": 410, "source_line_code": "finally {"}, {"source_line_num": 411, "source_line_code": "_skipBootstrapLoaderThreadLocal.remove();"}, {"source_line_num": 414, "source_line_code": "continue;"}, {"source_line_num": 417, "source_line_code": "objectOutputStream.writeObject(portalCacheName);"}, {"source_line_num": 419, "source_line_code": "List<Serializable> keys = portalCache.getKeys();"}, {"source_line_num": 421, "source_line_code": "for (Serializable key : keys) {"}, {"source_line_num": 422, "source_line_code": "Serializable value = portalCache.get(key);"}, {"source_line_num": 424, "source_line_code": "if (value != null) {"}, {"source_line_num": 425, "source_line_code": "CacheElement cacheElement = new CacheElement("}, {"source_line_num": 426, "source_line_code": "key, value);"}, {"source_line_num": 428, "source_line_code": "objectOutputStream.writeObject(cacheElement);"}, {"source_line_num": 433, "source_line_code": "objectOutputStream.writeObject(_COMMAND_SOCKET_CLOSE);"}, {"source_line_num": 436, "source_line_code": "catch (Exception e) {"}, {"source_line_num": 437, "source_line_code": "throw new RuntimeException(e);"}, {"source_line_num": 439, "source_line_code": "finally {"}, {"source_line_num": 440, "source_line_code": "if (socket != null) {"}, {"source_line_num": 441, "source_line_code": "try {"}, {"source_line_num": 442, "source_line_code": "socket.close();"}, {"source_line_num": 444, "source_line_code": "catch (IOException ioe) {"}, {"source_line_num": 445, "source_line_code": "throw new RuntimeException(ioe);"}, {"source_line_num": 451, "source_line_code": "private final String _portalCacheManagerName;"}, {"source_line_num": 452, "source_line_code": "private final List<String> _portalCacheNames;"}, {"source_line_num": 453, "source_line_code": "private final ServerSocket _serverSocket;"}, {"source_line_num": 457, "source_line_code": "private static class SocketCacheServerSocketConfiguration"}, {"source_line_num": 458, "source_line_code": "implements SocketUtil.ServerSocketConfigurator {"}, {"source_line_num": 460, "source_line_code": "@Override"}, {"source_line_num": 461, "source_line_code": "public void configure(ServerSocket serverSocket)"}, {"source_line_num": 462, "source_line_code": "throws SocketException {"}, {"source_line_num": 464, "source_line_code": "serverSocket.setSoTimeout("}, {"source_line_num": 465, "source_line_code": "GetterUtil.getInteger("}, {"source_line_num": 466, "source_line_code": "PropsUtil.get(PropsKeys.EHCACHE_SOCKET_SO_TIMEOUT), 10000));"}], "filename": "modules/apps/portal-cache/portal-cache-multiple/src/main/java/com/liferay/portal/cache/multiple/internal/bootstrap/ClusterLinkBootstrapLoaderHelperUtil.java", "patch_func": "no", "diff_file": "liferay-portal_CVE-2020-15842_571ff47713fed2999a1f5bb80f2eb7b6ed444acf.diff", "patch_tag": "7.4.2-ga3", "source_tag": "7.4.1-ga2"}]