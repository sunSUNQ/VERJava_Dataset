[{"cve_id": "liferay-portal", "added_line": [{"target_line_num": 86, "target_line_code": "protected void assertJaxRSUrl("}, {"target_line_num": 87, "target_line_code": "String urlString, String method, boolean allowOrigin)"}, {"target_line_num": 90, "target_line_code": "ProcessConfig.Builder builder = _generateTestBuilder();"}, {"target_line_num": 92, "target_line_code": "ProcessExecutor processExecutor = new LocalProcessExecutor();"}, {"target_line_num": 94, "target_line_code": "ProcessChannel<String[]> processChannel = processExecutor.execute("}, {"target_line_num": 95, "target_line_code": "builder.build(),"}, {"target_line_num": 96, "target_line_code": "new AllowRestrictedHeadersCallable("}, {"target_line_num": 98, "target_line_code": "false));"}, {"target_line_num": 100, "target_line_code": "Future<String[]> future = processChannel.getProcessNoticeableFuture();"}, {"target_line_num": 102, "target_line_code": "String[] results = future.get();"}, {"target_line_num": 104, "target_line_code": "if (allowOrigin) {"}, {"target_line_num": 105, "target_line_code": "Assert.assertEquals(_TEST_CORS_URI, results[0]);"}, {"target_line_num": 107, "target_line_code": "else {"}, {"target_line_num": 108, "target_line_code": "Assert.assertNull(results[0]);"}, {"target_line_num": 111, "target_line_code": "Assert.assertEquals(\"get\", results[1]);"}, {"target_line_num": 112, "target_line_code": "Assert.assertEquals(\"200\", results[2]);"}, {"target_line_num": 115, "target_line_code": "protected void assertJsonWSUrl("}, {"target_line_num": 116, "target_line_code": "String urlString, String method, boolean allowOrigin)"}, {"target_line_num": 117, "target_line_code": "throws Exception {"}, {"target_line_num": 119, "target_line_code": "ProcessConfig.Builder builder = _generateTestBuilder();"}, {"target_line_num": 127, "target_line_code": "method, true));"}, {"target_line_num": 140, "target_line_code": "Assert.assertNotEquals(StringPool.BLANK, results[1]);"}, {"target_line_num": 145, "target_line_code": "String configurationClassName, Dictionary<String, Object> properties) {"}, {"target_line_num": 153, "target_line_code": "Constants.SERVICE_PID, configurationClassName);"}, {"target_line_num": 212, "target_line_code": "configurationClassName, StringPool.QUESTION);"}], "removed_line": [{"source_line_num": 29, "source_line_code": "import com.liferay.portal.remote.cors.configuration.WebContextCORSConfiguration;"}, {"source_line_num": 87, "source_line_code": "protected void assertURL(String urlString, boolean allowOrigin)"}, {"source_line_num": 90, "source_line_code": "ProcessConfig.Builder builder = new ProcessConfig.Builder();"}, {"source_line_num": 92, "source_line_code": "List<String> arguments = new ArrayList<>();"}, {"source_line_num": 94, "source_line_code": "arguments.add(\"-Djava.net.preferIPv4Stack=true\");"}, {"source_line_num": 96, "source_line_code": "if (Boolean.getBoolean(\"jvm.debug\")) {"}, {"source_line_num": 97, "source_line_code": "arguments.add("}, {"source_line_num": 98, "source_line_code": "\"-agentlib:jdwp=transport=dt_socket,address=8001,server=y,\" +"}, {"source_line_num": 99, "source_line_code": "\"suspend=y\");"}, {"source_line_num": 100, "source_line_code": "arguments.add(\"-Djvm.debug=true\");"}, {"source_line_num": 103, "source_line_code": "arguments.add(\"-Dliferay.mode=test\");"}, {"source_line_num": 104, "source_line_code": "arguments.add(\"-Dsun.zip.disableMemoryMapping=true\");"}, {"source_line_num": 105, "source_line_code": "arguments.add(\"-Dsun.net.http.allowRestrictedHeaders=true\");"}, {"source_line_num": 107, "source_line_code": "builder.setArguments(arguments);"}, {"source_line_num": 109, "source_line_code": "StringBundler sb = new StringBundler();"}, {"source_line_num": 111, "source_line_code": "sb.append(ClassPathUtil.getJVMClassPath(true));"}, {"source_line_num": 113, "source_line_code": "_addToClassPath(sb, AllowRestrictedHeadersCallable.class);"}, {"source_line_num": 114, "source_line_code": "_addToClassPath(sb, ClassPathUtil.class);"}, {"source_line_num": 115, "source_line_code": "_addToClassPath(sb, ClassResolverUtil.class);"}, {"source_line_num": 116, "source_line_code": "_addToClassPath(sb, ClassLoaderObjectInputStream.class);"}, {"source_line_num": 117, "source_line_code": "_addToClassPath(sb, StringBundler.class);"}, {"source_line_num": 118, "source_line_code": "_addToClassPath(sb, StringUtil.class);"}, {"source_line_num": 120, "source_line_code": "String classPath = sb.toString();"}, {"source_line_num": 122, "source_line_code": "builder.setBootstrapClassPath(classPath);"}, {"source_line_num": 123, "source_line_code": "builder.setRuntimeClassPath(classPath);"}, {"source_line_num": 143, "source_line_code": "Assert.assertEquals(\"get\", results[1]);"}, {"source_line_num": 148, "source_line_code": "Dictionary<String, Object> properties) {"}, {"source_line_num": 156, "source_line_code": "Constants.SERVICE_PID, WebContextCORSConfiguration.class.getName());"}, {"source_line_num": 215, "source_line_code": "WebContextCORSConfiguration.class.getName(),"}, {"source_line_num": 216, "source_line_code": "StringPool.QUESTION);"}], "filename": "modules/apps/portal-remote/portal-remote-cors-test/src/testIntegration/java/com/liferay/portal/remote/cors/client/test/BaseCORSClientTestCase.java", "patch_func": "no", "diff_file": "liferay-portal_CVE-2021-33330_bcdf4fa432d7c559e380e922e869d3569564330a.diff", "patch_tag": "7.4.2-ga3", "source_tag": "7.4.1-ga2"}]