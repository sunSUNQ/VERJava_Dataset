[{"cve_id": "liferay-portal", "added_line": [{"target_line_num": 2, "target_line_code": "/**"}, {"target_line_num": 3, "target_line_code": "* Copyright (c) 2000-present Liferay, Inc. All rights reserved."}, {"target_line_num": 4, "target_line_code": "*"}, {"target_line_num": 5, "target_line_code": "* This library is free software; you can redistribute it and/or modify it under"}, {"target_line_num": 6, "target_line_code": "* the terms of the GNU Lesser General Public License as published by the Free"}, {"target_line_num": 7, "target_line_code": "* Software Foundation; either version 2.1 of the License, or (at your option)"}, {"target_line_num": 8, "target_line_code": "* any later version."}, {"target_line_num": 9, "target_line_code": "*"}, {"target_line_num": 10, "target_line_code": "* This library is distributed in the hope that it will be useful, but WITHOUT"}, {"target_line_num": 11, "target_line_code": "* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS"}, {"target_line_num": 12, "target_line_code": "* FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more"}, {"target_line_num": 13, "target_line_code": "* details."}, {"target_line_num": 14, "target_line_code": "*/"}, {"target_line_num": 16, "target_line_code": "package com.liferay.util;"}, {"target_line_num": 18, "target_line_code": "import com.liferay.portal.kernel.util.Props;"}, {"target_line_num": 19, "target_line_code": "import com.liferay.portal.kernel.util.PropsKeys;"}, {"target_line_num": 20, "target_line_code": "import com.liferay.portal.kernel.util.PropsUtil;"}, {"target_line_num": 22, "target_line_code": "import java.security.Key;"}, {"target_line_num": 24, "target_line_code": "import org.junit.After;"}, {"target_line_num": 25, "target_line_code": "import org.junit.Assert;"}, {"target_line_num": 26, "target_line_code": "import org.junit.Before;"}, {"target_line_num": 27, "target_line_code": "import org.junit.Test;"}, {"target_line_num": 28, "target_line_code": "import org.junit.runner.RunWith;"}, {"target_line_num": 30, "target_line_code": "import org.mockito.Mockito;"}, {"target_line_num": 32, "target_line_code": "import org.powermock.api.mockito.PowerMockito;"}, {"target_line_num": 33, "target_line_code": "import org.powermock.core.classloader.annotations.PowerMockIgnore;"}, {"target_line_num": 34, "target_line_code": "import org.powermock.modules.junit4.PowerMockRunner;"}, {"target_line_num": 36, "target_line_code": "/**"}, {"target_line_num": 37, "target_line_code": "* @author Mika Koivisto"}, {"target_line_num": 38, "target_line_code": "*/"}, {"target_line_num": 39, "target_line_code": "@RunWith(PowerMockRunner.class)"}, {"target_line_num": 40, "target_line_code": "@PowerMockIgnore(\"javax.crypto.*\")"}, {"target_line_num": 41, "target_line_code": "public class EncryptorTest extends PowerMockito {"}, {"target_line_num": 43, "target_line_code": "@Before"}, {"target_line_num": 44, "target_line_code": "public void setUp() {"}, {"target_line_num": 45, "target_line_code": "Props props = mock(Props.class);"}, {"target_line_num": 47, "target_line_code": "_propsUtil = new PropsUtil();"}, {"target_line_num": 49, "target_line_code": "_oldProps = _propsUtil.getProps();"}, {"target_line_num": 51, "target_line_code": "_propsUtil.setProps(props);"}, {"target_line_num": 53, "target_line_code": "when("}, {"target_line_num": 54, "target_line_code": "props.get(Mockito.eq(PropsKeys.COMPANY_ENCRYPTION_ALGORITHM))"}, {"target_line_num": 55, "target_line_code": ").thenReturn("}, {"target_line_num": 56, "target_line_code": "\"AES\""}, {"target_line_num": 57, "target_line_code": ");"}, {"target_line_num": 59, "target_line_code": "when("}, {"target_line_num": 60, "target_line_code": "props.get(Mockito.eq(PropsKeys.COMPANY_ENCRYPTION_KEY_SIZE))"}, {"target_line_num": 61, "target_line_code": ").thenReturn("}, {"target_line_num": 62, "target_line_code": "\"128\""}, {"target_line_num": 63, "target_line_code": ");"}, {"target_line_num": 66, "target_line_code": "@After"}, {"target_line_num": 67, "target_line_code": "public void tearDown() {"}, {"target_line_num": 68, "target_line_code": "_propsUtil.setProps(_oldProps);"}, {"target_line_num": 71, "target_line_code": "@Test"}, {"target_line_num": 72, "target_line_code": "public void testKeySerialization() throws Exception {"}, {"target_line_num": 73, "target_line_code": "Key key = Encryptor.generateKey();"}, {"target_line_num": 75, "target_line_code": "String encryptedString = Encryptor.encrypt(key, \"Hello World!\");"}, {"target_line_num": 77, "target_line_code": "String serializedKey = Encryptor.serializeKey(key);"}, {"target_line_num": 79, "target_line_code": "key = Encryptor.deserializeKey(serializedKey);"}, {"target_line_num": 81, "target_line_code": "Assert.assertEquals("}, {"target_line_num": 82, "target_line_code": "\"Hello World!\", Encryptor.decrypt(key, encryptedString));"}, {"target_line_num": 85, "target_line_code": "private Props _oldProps;"}, {"target_line_num": 86, "target_line_code": "private PropsUtil _propsUtil;"}], "removed_line": [], "filename": "util-java/test/unit/com/liferay/util/EncryptorTest.java", "patch_func": "setUp", "diff_file": "liferay-portal_CVE-2010-5327_c810eb032c1d9a5843a5630b9c6eb695aa16dfa1.diff", "patch_tag": "7.4.2-ga3", "source_tag": "7.4.1-ga2"}]