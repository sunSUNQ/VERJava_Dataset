[{"cve_id": "spring-framework", "added_line": [{"target_line_num": 2, "target_line_code": "/*"}, {"target_line_num": 3, "target_line_code": "* Copyright 2002-2016 the original author or authors."}, {"target_line_num": 4, "target_line_code": "*"}, {"target_line_num": 5, "target_line_code": "* Licensed under the Apache License, Version 2.0 (the \"License\");"}, {"target_line_num": 6, "target_line_code": "* you may not use this file except in compliance with the License."}, {"target_line_num": 7, "target_line_code": "* You may obtain a copy of the License at"}, {"target_line_num": 8, "target_line_code": "*"}, {"target_line_num": 10, "target_line_code": "*"}, {"target_line_num": 11, "target_line_code": "* Unless required by applicable law or agreed to in writing, software"}, {"target_line_num": 12, "target_line_code": "* distributed under the License is distributed on an \"AS IS\" BASIS,"}, {"target_line_num": 13, "target_line_code": "* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."}, {"target_line_num": 14, "target_line_code": "* See the License for the specific language governing permissions and"}, {"target_line_num": 15, "target_line_code": "* limitations under the License."}, {"target_line_num": 16, "target_line_code": "*/"}, {"target_line_num": 17, "target_line_code": "package org.springframework.web.servlet.support;"}, {"target_line_num": 19, "target_line_code": "import java.util.Collections;"}, {"target_line_num": 20, "target_line_code": "import java.util.Map;"}, {"target_line_num": 22, "target_line_code": "import org.springframework.util.Assert;"}, {"target_line_num": 23, "target_line_code": "import org.springframework.util.PathMatcher;"}, {"target_line_num": 25, "target_line_code": "/**"}, {"target_line_num": 26, "target_line_code": "* Container for the result from request pattern matching via"}, {"target_line_num": 27, "target_line_code": "* {@link MatchableHandlerMapping} with a method to further extract URI template"}, {"target_line_num": 28, "target_line_code": "* variables from the pattern."}, {"target_line_num": 29, "target_line_code": "*"}, {"target_line_num": 30, "target_line_code": "* @author Rossen Stoyanchev"}, {"target_line_num": 31, "target_line_code": "* @since 4.3"}, {"target_line_num": 32, "target_line_code": "*/"}, {"target_line_num": 33, "target_line_code": "public class RequestMatchResult {"}, {"target_line_num": 35, "target_line_code": "private final String matchingPattern;"}, {"target_line_num": 37, "target_line_code": "private final String lookupPath;"}, {"target_line_num": 39, "target_line_code": "private final PathMatcher pathMatcher;"}, {"target_line_num": 42, "target_line_code": "/**"}, {"target_line_num": 43, "target_line_code": "* Create an instance with a matching pattern."}, {"target_line_num": 44, "target_line_code": "* @param matchingPattern the matching pattern, possibly not the same as the"}, {"target_line_num": 45, "target_line_code": "* input pattern, e.g. inputPattern=\"/foo\" and matchingPattern=\"/foo/\"."}, {"target_line_num": 46, "target_line_code": "* @param lookupPath the lookup path extracted from the request"}, {"target_line_num": 47, "target_line_code": "* @param pathMatcher the PathMatcher used"}, {"target_line_num": 48, "target_line_code": "*/"}, {"target_line_num": 49, "target_line_code": "public RequestMatchResult(String matchingPattern, String lookupPath, PathMatcher pathMatcher) {"}, {"target_line_num": 50, "target_line_code": "Assert.hasText(matchingPattern, \"'matchingPattern' is required\");"}, {"target_line_num": 51, "target_line_code": "Assert.hasText(lookupPath, \"'lookupPath' is required\");"}, {"target_line_num": 52, "target_line_code": "Assert.notNull(pathMatcher, \"'pathMatcher' is required\");"}, {"target_line_num": 53, "target_line_code": "this.matchingPattern = matchingPattern;"}, {"target_line_num": 54, "target_line_code": "this.lookupPath = lookupPath;"}, {"target_line_num": 55, "target_line_code": "this.pathMatcher = pathMatcher;"}, {"target_line_num": 59, "target_line_code": "/**"}, {"target_line_num": 60, "target_line_code": "* Whether the pattern was matched to the request."}, {"target_line_num": 61, "target_line_code": "*/"}, {"target_line_num": 62, "target_line_code": "public boolean isMatch() {"}, {"target_line_num": 63, "target_line_code": "return (this.matchingPattern != null);"}, {"target_line_num": 66, "target_line_code": "/**"}, {"target_line_num": 67, "target_line_code": "* Extract URI template variables from the matching pattern as defined in"}, {"target_line_num": 68, "target_line_code": "* {@link PathMatcher#extractUriTemplateVariables}."}, {"target_line_num": 69, "target_line_code": "* @return a map with URI template variables"}, {"target_line_num": 70, "target_line_code": "*/"}, {"target_line_num": 71, "target_line_code": "public Map<String, String> extractUriTemplateVariables() {"}, {"target_line_num": 72, "target_line_code": "if (!isMatch()) {"}, {"target_line_num": 73, "target_line_code": "return Collections.<String, String>emptyMap();"}, {"target_line_num": 75, "target_line_code": "return this.pathMatcher.extractUriTemplateVariables(this.matchingPattern, this.lookupPath);"}], "removed_line": [], "filename": "spring-webmvc/src/main/java/org/springframework/web/servlet/support/RequestMatchResult.java", "patch_func": "RequestMatchResult", "diff_file": "spring-framework_CVE-2016-5007_a30ab3.diff", "patch_tag": "v4.3.1.RELEASE", "source_tag": "v4.3.0.RELEASE"}]