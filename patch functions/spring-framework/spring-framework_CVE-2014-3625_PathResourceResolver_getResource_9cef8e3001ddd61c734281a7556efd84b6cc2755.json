[{"cve_id": "spring-framework", "added_line": [{"target_line_num": 120, "target_line_code": "if (resource.exists() && resource.isReadable()) {"}, {"target_line_num": 121, "target_line_code": "if (checkResource(resource, location)) {"}, {"target_line_num": 122, "target_line_code": "return resource;"}, {"target_line_num": 124, "target_line_code": "else {"}, {"target_line_num": 125, "target_line_code": "if (logger.isTraceEnabled()) {"}, {"target_line_num": 126, "target_line_code": "logger.trace(\"resourcePath=\\\"\" + resourcePath + \"\\\" was successfully resolved \" +"}, {"target_line_num": 127, "target_line_code": "\"but resource=\\\"\" +\tresource.getURL() + \"\\\" is neither under the \" +"}, {"target_line_num": 128, "target_line_code": "\"current location=\\\"\" + location.getURL() + \"\\\" nor under any of the \" +"}, {"target_line_num": 129, "target_line_code": "\"allowed locations=\" + getAllowedLocations());"}, {"target_line_num": 133, "target_line_code": "return null;"}, {"target_line_num": 137, "target_line_code": "* Perform additional checks on a resolved resource beyond checking whether"}, {"target_line_num": 138, "target_line_code": "* the resources exists and is readable. The default implementation also"}, {"target_line_num": 139, "target_line_code": "* verifies the resource is either under the location relative to which it"}, {"target_line_num": 140, "target_line_code": "* was found or is under one of the {@link #setAllowedLocations allowed"}, {"target_line_num": 141, "target_line_code": "* locations}."}, {"target_line_num": 142, "target_line_code": "* @param resource the resource to check"}, {"target_line_num": 143, "target_line_code": "* @param location the location relative to which the resource was found"}, {"target_line_num": 144, "target_line_code": "* @return \"true\" if resource is in a valid location, \"false\" otherwise."}, {"target_line_num": 145, "target_line_code": "* @since 4.1.2"}, {"target_line_num": 146, "target_line_code": "*/"}, {"target_line_num": 147, "target_line_code": "protected boolean checkResource(Resource resource, Resource location) throws IOException {"}, {"target_line_num": 148, "target_line_code": "if (isResourceUnderLocation(resource, location)) {"}, {"target_line_num": 149, "target_line_code": "return true;"}, {"target_line_num": 151, "target_line_code": "if (getAllowedLocations() != null) {"}, {"target_line_num": 152, "target_line_code": "for (Resource current : getAllowedLocations()) {"}, {"target_line_num": 153, "target_line_code": "if (isResourceUnderLocation(resource, current)) {"}, {"target_line_num": 149, "target_line_code": "return true;"}, {"target_line_num": 158, "target_line_code": "return false;"}, {"target_line_num": 161, "target_line_code": "private boolean isResourceUnderLocation(Resource resource, Resource location) throws IOException {"}, {"target_line_num": 162, "target_line_code": "if (!resource.getClass().equals(location.getClass())) {"}, {"target_line_num": 158, "target_line_code": "return false;"}, {"target_line_num": 165, "target_line_code": "String resourcePath;"}, {"target_line_num": 166, "target_line_code": "String locationPath;"}, {"target_line_num": 167, "target_line_code": "if (resource instanceof ClassPathResource) {"}, {"target_line_num": 168, "target_line_code": "resourcePath = ((ClassPathResource) resource).getPath();"}, {"target_line_num": 169, "target_line_code": "locationPath = ((ClassPathResource) location).getPath();"}, {"target_line_num": 171, "target_line_code": "else if (resource instanceof UrlResource) {"}, {"target_line_num": 172, "target_line_code": "resourcePath = resource.getURL().toExternalForm();"}, {"target_line_num": 173, "target_line_code": "locationPath = location.getURL().toExternalForm();"}, {"target_line_num": 175, "target_line_code": "else {"}, {"target_line_num": 176, "target_line_code": "resourcePath = resource.getURL().getPath();"}, {"target_line_num": 177, "target_line_code": "locationPath = location.getURL().getPath();"}, {"target_line_num": 179, "target_line_code": "locationPath = (locationPath.endsWith(\"/\") || locationPath.isEmpty() ? locationPath : locationPath + \"/\");"}, {"target_line_num": 180, "target_line_code": "if (!resourcePath.startsWith(locationPath)) {"}, {"target_line_num": 181, "target_line_code": "return false;"}, {"target_line_num": 183, "target_line_code": "if (resourcePath.contains(\"%\")) {"}, {"target_line_num": 185, "target_line_code": "if (URLDecoder.decode(resourcePath, \"UTF-8\").contains(\"../\")) {"}, {"target_line_num": 186, "target_line_code": "if (logger.isTraceEnabled()) {"}, {"target_line_num": 187, "target_line_code": "logger.trace(\"Resolved resource path contains \\\"../\\\" after decoding: \" + resourcePath);"}, {"target_line_num": 181, "target_line_code": "return false;"}, {"target_line_num": 192, "target_line_code": "return true;"}, {"target_line_num": 121, "target_line_code": "if (resource.exists() && resource.isReadable()) {"}, {"target_line_num": 122, "target_line_code": "if (checkResource(resource, location)) {"}, {"target_line_num": 123, "target_line_code": "return resource;"}, {"target_line_num": 125, "target_line_code": "else {"}, {"target_line_num": 126, "target_line_code": "if (logger.isTraceEnabled()) {"}, {"target_line_num": 127, "target_line_code": "logger.trace(\"resourcePath=\\\"\" + resourcePath + \"\\\" was successfully resolved \" +"}, {"target_line_num": 128, "target_line_code": "\"but resource=\\\"\" +\tresource.getURL() + \"\\\" is neither under the \" +"}, {"target_line_num": 129, "target_line_code": "\"current location=\\\"\" + location.getURL() + \"\\\" nor under any of the \" +"}, {"target_line_num": 130, "target_line_code": "\"allowed locations=\" + getAllowedLocations());"}, {"target_line_num": 134, "target_line_code": "return null;"}, {"target_line_num": 137, "target_line_code": "/**"}, {"target_line_num": 138, "target_line_code": "* Perform additional checks on a resolved resource beyond checking whether"}, {"target_line_num": 139, "target_line_code": "* the resources exists and is readable. The default implementation also"}, {"target_line_num": 140, "target_line_code": "* verifies the resource is either under the location relative to which it"}, {"target_line_num": 141, "target_line_code": "* was found or is under one of the {@link #setAllowedLocations allowed"}, {"target_line_num": 142, "target_line_code": "* locations}."}, {"target_line_num": 143, "target_line_code": "* @param resource the resource to check"}, {"target_line_num": 144, "target_line_code": "* @param location the location relative to which the resource was found"}, {"target_line_num": 145, "target_line_code": "* @return \"true\" if resource is in a valid location, \"false\" otherwise."}, {"target_line_num": 146, "target_line_code": "* @since 4.1.2"}, {"target_line_num": 147, "target_line_code": "*/"}, {"target_line_num": 148, "target_line_code": "protected boolean checkResource(Resource resource, Resource location) throws IOException {"}, {"target_line_num": 149, "target_line_code": "if (isResourceUnderLocation(resource, location)) {"}, {"target_line_num": 150, "target_line_code": "return true;"}, {"target_line_num": 152, "target_line_code": "if (getAllowedLocations() != null) {"}, {"target_line_num": 153, "target_line_code": "for (Resource current : getAllowedLocations()) {"}, {"target_line_num": 154, "target_line_code": "if (isResourceUnderLocation(resource, current)) {"}, {"target_line_num": 155, "target_line_code": "return true;"}, {"target_line_num": 159, "target_line_code": "return false;"}, {"target_line_num": 162, "target_line_code": "private boolean isResourceUnderLocation(Resource resource, Resource location) throws IOException {"}, {"target_line_num": 163, "target_line_code": "if (!resource.getClass().equals(location.getClass())) {"}, {"target_line_num": 164, "target_line_code": "return false;"}, {"target_line_num": 166, "target_line_code": "String resourcePath;"}, {"target_line_num": 167, "target_line_code": "String locationPath;"}, {"target_line_num": 168, "target_line_code": "if (resource instanceof ClassPathResource) {"}, {"target_line_num": 169, "target_line_code": "resourcePath = ((ClassPathResource) resource).getPath();"}, {"target_line_num": 170, "target_line_code": "locationPath = ((ClassPathResource) location).getPath();"}, {"target_line_num": 172, "target_line_code": "else if (resource instanceof UrlResource) {"}, {"target_line_num": 173, "target_line_code": "resourcePath = resource.getURL().toExternalForm();"}, {"target_line_num": 174, "target_line_code": "locationPath = location.getURL().toExternalForm();"}, {"target_line_num": 176, "target_line_code": "else {"}, {"target_line_num": 177, "target_line_code": "resourcePath = resource.getURL().getPath();"}, {"target_line_num": 178, "target_line_code": "locationPath = location.getURL().getPath();"}, {"target_line_num": 180, "target_line_code": "locationPath = (locationPath.endsWith(\"/\") || locationPath.isEmpty() ? locationPath : locationPath + \"/\");"}, {"target_line_num": 181, "target_line_code": "if (!resourcePath.startsWith(locationPath)) {"}, {"target_line_num": 182, "target_line_code": "return false;"}, {"target_line_num": 184, "target_line_code": "if (resourcePath.contains(\"%\")) {"}, {"target_line_num": 186, "target_line_code": "if (URLDecoder.decode(resourcePath, \"UTF-8\").contains(\"../\")) {"}, {"target_line_num": 187, "target_line_code": "if (logger.isTraceEnabled()) {"}, {"target_line_num": 188, "target_line_code": "logger.trace(\"Resolved resource path contains \\\"../\\\" after decoding: \" + resourcePath);"}, {"target_line_num": 190, "target_line_code": "return false;"}, {"target_line_num": 193, "target_line_code": "return true;"}], "removed_line": [{"source_line_num": 89, "source_line_code": "return (resource.exists() && resource.isReadable() ? resource : null);"}, {"source_line_num": 88, "source_line_code": "return (resource.exists() && resource.isReadable() ? resource : null);"}], "filename": "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java", "patch_func": "getResource", "diff_file": "spring-framework_CVE-2014-3625_9cef8e3001ddd61c734281a7556efd84b6cc2755.diff", "patch_tag": "v4.1.2.RELEASE", "source_tag": "v4.1.1.RELEASE"}]