[{"cve_id": "spring-framework", "added_line": [{"target_line_num": 2, "target_line_code": "/*"}, {"target_line_num": 3, "target_line_code": "* Copyright 2002-2016 the original author or authors."}, {"target_line_num": 4, "target_line_code": "*"}, {"target_line_num": 5, "target_line_code": "* Licensed under the Apache License, Version 2.0 (the \"License\");"}, {"target_line_num": 6, "target_line_code": "* you may not use this file except in compliance with the License."}, {"target_line_num": 7, "target_line_code": "* You may obtain a copy of the License at"}, {"target_line_num": 8, "target_line_code": "*"}, {"target_line_num": 10, "target_line_code": "*"}, {"target_line_num": 11, "target_line_code": "* Unless required by applicable law or agreed to in writing, software"}, {"target_line_num": 12, "target_line_code": "* distributed under the License is distributed on an \"AS IS\" BASIS,"}, {"target_line_num": 13, "target_line_code": "* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."}, {"target_line_num": 14, "target_line_code": "* See the License for the specific language governing permissions and"}, {"target_line_num": 15, "target_line_code": "* limitations under the License."}, {"target_line_num": 16, "target_line_code": "*/"}, {"target_line_num": 17, "target_line_code": "package org.springframework.web.servlet.support;"}, {"target_line_num": 19, "target_line_code": "import java.util.Arrays;"}, {"target_line_num": 20, "target_line_code": "import java.util.Collections;"}, {"target_line_num": 21, "target_line_code": "import java.util.List;"}, {"target_line_num": 22, "target_line_code": "import javax.servlet.http.HttpServletRequest;"}, {"target_line_num": 24, "target_line_code": "import org.junit.Test;"}, {"target_line_num": 26, "target_line_code": "import org.springframework.beans.MutablePropertyValues;"}, {"target_line_num": 27, "target_line_code": "import org.springframework.context.annotation.Bean;"}, {"target_line_num": 28, "target_line_code": "import org.springframework.context.annotation.Configuration;"}, {"target_line_num": 29, "target_line_code": "import org.springframework.http.HttpHeaders;"}, {"target_line_num": 30, "target_line_code": "import org.springframework.mock.web.test.MockHttpServletRequest;"}, {"target_line_num": 31, "target_line_code": "import org.springframework.stereotype.Controller;"}, {"target_line_num": 32, "target_line_code": "import org.springframework.web.bind.annotation.CrossOrigin;"}, {"target_line_num": 33, "target_line_code": "import org.springframework.web.bind.annotation.PostMapping;"}, {"target_line_num": 34, "target_line_code": "import org.springframework.web.context.support.AnnotationConfigWebApplicationContext;"}, {"target_line_num": 35, "target_line_code": "import org.springframework.web.context.support.StaticWebApplicationContext;"}, {"target_line_num": 36, "target_line_code": "import org.springframework.web.cors.CorsConfiguration;"}, {"target_line_num": 37, "target_line_code": "import org.springframework.web.servlet.HandlerExecutionChain;"}, {"target_line_num": 38, "target_line_code": "import org.springframework.web.servlet.HandlerMapping;"}, {"target_line_num": 39, "target_line_code": "import org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping;"}, {"target_line_num": 40, "target_line_code": "import org.springframework.web.servlet.handler.SimpleUrlHandlerMapping;"}, {"target_line_num": 41, "target_line_code": "import org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping;"}, {"target_line_num": 42, "target_line_code": "import org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;"}, {"target_line_num": 44, "target_line_code": "import static org.junit.Assert.assertEquals;"}, {"target_line_num": 45, "target_line_code": "import static org.junit.Assert.assertNotNull;"}, {"target_line_num": 46, "target_line_code": "import static org.junit.Assert.assertNull;"}, {"target_line_num": 47, "target_line_code": "import static org.springframework.web.servlet.HandlerMapping.BEST_MATCHING_PATTERN_ATTRIBUTE;"}, {"target_line_num": 49, "target_line_code": "/**"}, {"target_line_num": 50, "target_line_code": "* Unit tests for {@link HandlerMappingIntrospector}."}, {"target_line_num": 51, "target_line_code": "* @author Rossen Stoyanchev"}, {"target_line_num": 52, "target_line_code": "*/"}, {"target_line_num": 53, "target_line_code": "public class HandlerMappingIntrospectorTests {"}, {"target_line_num": 55, "target_line_code": "@Test"}, {"target_line_num": 56, "target_line_code": "public void detectHandlerMappings() throws Exception {"}, {"target_line_num": 57, "target_line_code": "StaticWebApplicationContext cxt = new StaticWebApplicationContext();"}, {"target_line_num": 58, "target_line_code": "cxt.registerSingleton(\"hmA\", SimpleUrlHandlerMapping.class);"}, {"target_line_num": 59, "target_line_code": "cxt.registerSingleton(\"hmB\", SimpleUrlHandlerMapping.class);"}, {"target_line_num": 60, "target_line_code": "cxt.registerSingleton(\"hmC\", SimpleUrlHandlerMapping.class);"}, {"target_line_num": 61, "target_line_code": "cxt.refresh();"}, {"target_line_num": 63, "target_line_code": "List<?> expected = Arrays.asList(cxt.getBean(\"hmA\"), cxt.getBean(\"hmB\"), cxt.getBean(\"hmC\"));"}, {"target_line_num": 64, "target_line_code": "List<HandlerMapping> actual = new HandlerMappingIntrospector(cxt).getHandlerMappings();"}, {"target_line_num": 66, "target_line_code": "assertEquals(expected, actual);"}, {"target_line_num": 69, "target_line_code": "@Test"}, {"target_line_num": 70, "target_line_code": "public void detectHandlerMappingsOrdered() throws Exception {"}, {"target_line_num": 71, "target_line_code": "StaticWebApplicationContext cxt = new StaticWebApplicationContext();"}, {"target_line_num": 72, "target_line_code": "MutablePropertyValues pvs = new MutablePropertyValues(Collections.singletonMap(\"order\", \"3\"));"}, {"target_line_num": 73, "target_line_code": "cxt.registerSingleton(\"hmA\", SimpleUrlHandlerMapping.class, pvs);"}, {"target_line_num": 74, "target_line_code": "pvs = new MutablePropertyValues(Collections.singletonMap(\"order\", \"2\"));"}, {"target_line_num": 75, "target_line_code": "cxt.registerSingleton(\"hmB\", SimpleUrlHandlerMapping.class, pvs);"}, {"target_line_num": 76, "target_line_code": "pvs = new MutablePropertyValues(Collections.singletonMap(\"order\", \"1\"));"}, {"target_line_num": 77, "target_line_code": "cxt.registerSingleton(\"hmC\", SimpleUrlHandlerMapping.class, pvs);"}, {"target_line_num": 78, "target_line_code": "cxt.refresh();"}, {"target_line_num": 80, "target_line_code": "List<?> expected = Arrays.asList(cxt.getBean(\"hmC\"), cxt.getBean(\"hmB\"), cxt.getBean(\"hmA\"));"}, {"target_line_num": 81, "target_line_code": "List<HandlerMapping> actual = new HandlerMappingIntrospector(cxt).getHandlerMappings();"}, {"target_line_num": 83, "target_line_code": "assertEquals(expected, actual);"}, {"target_line_num": 86, "target_line_code": "@Test @SuppressWarnings(\"deprecation\")"}, {"target_line_num": 87, "target_line_code": "public void defaultHandlerMappings() throws Exception {"}, {"target_line_num": 88, "target_line_code": "StaticWebApplicationContext cxt = new StaticWebApplicationContext();"}, {"target_line_num": 89, "target_line_code": "cxt.refresh();"}, {"target_line_num": 91, "target_line_code": "List<HandlerMapping> actual = new HandlerMappingIntrospector(cxt).getHandlerMappings();"}, {"target_line_num": 92, "target_line_code": "assertEquals(2, actual.size());"}, {"target_line_num": 93, "target_line_code": "assertEquals(BeanNameUrlHandlerMapping.class, actual.get(0).getClass());"}, {"target_line_num": 94, "target_line_code": "assertEquals(DefaultAnnotationHandlerMapping.class, actual.get(1).getClass());"}, {"target_line_num": 97, "target_line_code": "@Test"}, {"target_line_num": 98, "target_line_code": "public void getMatchable() throws Exception {"}, {"target_line_num": 100, "target_line_code": "MutablePropertyValues pvs = new MutablePropertyValues("}, {"target_line_num": 101, "target_line_code": "Collections.singletonMap(\"urlMap\","}, {"target_line_num": 102, "target_line_code": "Collections.singletonMap(\"/path\", new Object())));"}, {"target_line_num": 104, "target_line_code": "StaticWebApplicationContext cxt = new StaticWebApplicationContext();"}, {"target_line_num": 105, "target_line_code": "cxt.registerSingleton(\"hm\", SimpleUrlHandlerMapping.class, pvs);"}, {"target_line_num": 106, "target_line_code": "cxt.refresh();"}, {"target_line_num": 108, "target_line_code": "MockHttpServletRequest request = new MockHttpServletRequest(\"GET\", \"/path\");"}, {"target_line_num": 109, "target_line_code": "MatchableHandlerMapping hm = new HandlerMappingIntrospector(cxt).getMatchableHandlerMapping(request);"}, {"target_line_num": 111, "target_line_code": "assertEquals(cxt.getBean(\"hm\"), hm);"}, {"target_line_num": 112, "target_line_code": "assertNull(\"Attributes changes not ignored\", request.getAttribute(BEST_MATCHING_PATTERN_ATTRIBUTE));"}, {"target_line_num": 115, "target_line_code": "@Test(expected = IllegalStateException.class)"}, {"target_line_num": 116, "target_line_code": "public void getMatchableWhereHandlerMappingDoesNotImplementMatchableInterface() throws Exception {"}, {"target_line_num": 117, "target_line_code": "StaticWebApplicationContext cxt = new StaticWebApplicationContext();"}, {"target_line_num": 118, "target_line_code": "cxt.registerSingleton(\"hm1\", TestHandlerMapping.class);"}, {"target_line_num": 119, "target_line_code": "cxt.refresh();"}, {"target_line_num": 121, "target_line_code": "MockHttpServletRequest request = new MockHttpServletRequest();"}, {"target_line_num": 122, "target_line_code": "new HandlerMappingIntrospector(cxt).getMatchableHandlerMapping(request);"}, {"target_line_num": 125, "target_line_code": "@Test"}, {"target_line_num": 126, "target_line_code": "public void getCorsConfigurationPreFlight() throws Exception {"}, {"target_line_num": 127, "target_line_code": "AnnotationConfigWebApplicationContext cxt = new AnnotationConfigWebApplicationContext();"}, {"target_line_num": 128, "target_line_code": "cxt.register(TestConfig.class);"}, {"target_line_num": 129, "target_line_code": "cxt.refresh();"}, {"target_line_num": 133, "target_line_code": "MockHttpServletRequest request = new MockHttpServletRequest(\"OPTIONS\", \"/path\");"}, {"target_line_num": 135, "target_line_code": "request.addHeader(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD, \"POST\");"}, {"target_line_num": 136, "target_line_code": "CorsConfiguration corsConfig = new HandlerMappingIntrospector(cxt).getCorsConfiguration(request);"}, {"target_line_num": 138, "target_line_code": "assertNotNull(corsConfig);"}, {"target_line_num": 140, "target_line_code": "assertEquals(Collections.singletonList(\"POST\"), corsConfig.getAllowedMethods());"}, {"target_line_num": 143, "target_line_code": "@Test"}, {"target_line_num": 144, "target_line_code": "public void getCorsConfigurationActual() throws Exception {"}, {"target_line_num": 145, "target_line_code": "AnnotationConfigWebApplicationContext cxt = new AnnotationConfigWebApplicationContext();"}, {"target_line_num": 146, "target_line_code": "cxt.register(TestConfig.class);"}, {"target_line_num": 147, "target_line_code": "cxt.refresh();"}, {"target_line_num": 149, "target_line_code": "MockHttpServletRequest request = new MockHttpServletRequest(\"POST\", \"/path\");"}, {"target_line_num": 151, "target_line_code": "CorsConfiguration corsConfig = new HandlerMappingIntrospector(cxt).getCorsConfiguration(request);"}, {"target_line_num": 153, "target_line_code": "assertNotNull(corsConfig);"}, {"target_line_num": 155, "target_line_code": "assertEquals(Collections.singletonList(\"POST\"), corsConfig.getAllowedMethods());"}, {"target_line_num": 159, "target_line_code": "private static class TestHandlerMapping implements HandlerMapping {"}, {"target_line_num": 161, "target_line_code": "@Override"}, {"target_line_num": 162, "target_line_code": "public HandlerExecutionChain getHandler(HttpServletRequest request) throws Exception {"}, {"target_line_num": 163, "target_line_code": "return new HandlerExecutionChain(new Object());"}, {"target_line_num": 167, "target_line_code": "@Configuration @SuppressWarnings({\"WeakerAccess\", \"unused\"})"}, {"target_line_num": 168, "target_line_code": "static class TestConfig {"}, {"target_line_num": 170, "target_line_code": "@Bean"}, {"target_line_num": 171, "target_line_code": "public RequestMappingHandlerMapping handlerMapping() {"}, {"target_line_num": 172, "target_line_code": "return new RequestMappingHandlerMapping();"}, {"target_line_num": 175, "target_line_code": "@Bean"}, {"target_line_num": 176, "target_line_code": "public TestController testController() {"}, {"target_line_num": 177, "target_line_code": "return new TestController();"}, {"target_line_num": 183, "target_line_code": "@Controller"}, {"target_line_num": 184, "target_line_code": "private static class TestController {"}, {"target_line_num": 186, "target_line_code": "@PostMapping(\"/path\")"}, {"target_line_num": 187, "target_line_code": "public void handle() {"}], "removed_line": [], "filename": "spring-webmvc/src/test/java/org/springframework/web/servlet/support/HandlerMappingIntrospectorTests.java", "patch_func": "no", "diff_file": "spring-framework_CVE-2016-5007_a30ab3.diff", "patch_tag": "v4.3.1.RELEASE", "source_tag": "v4.3.0.RELEASE"}]