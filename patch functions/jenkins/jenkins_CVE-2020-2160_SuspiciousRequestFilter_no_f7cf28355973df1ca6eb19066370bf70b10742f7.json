[{"cve_id": "jenkins", "added_line": [{"target_line_num": 2, "target_line_code": "package jenkins.security;"}, {"target_line_num": 4, "target_line_code": "import jenkins.util.SystemProperties;"}, {"target_line_num": 5, "target_line_code": "import org.kohsuke.accmod.Restricted;"}, {"target_line_num": 6, "target_line_code": "import org.kohsuke.accmod.restrictions.NoExternalUse;"}, {"target_line_num": 8, "target_line_code": "import javax.servlet.Filter;"}, {"target_line_num": 9, "target_line_code": "import javax.servlet.FilterChain;"}, {"target_line_num": 10, "target_line_code": "import javax.servlet.FilterConfig;"}, {"target_line_num": 11, "target_line_code": "import javax.servlet.ServletException;"}, {"target_line_num": 12, "target_line_code": "import javax.servlet.ServletRequest;"}, {"target_line_num": 13, "target_line_code": "import javax.servlet.ServletResponse;"}, {"target_line_num": 14, "target_line_code": "import javax.servlet.http.HttpServletRequest;"}, {"target_line_num": 15, "target_line_code": "import javax.servlet.http.HttpServletResponse;"}, {"target_line_num": 16, "target_line_code": "import java.io.IOException;"}, {"target_line_num": 17, "target_line_code": "import java.util.logging.Logger;"}, {"target_line_num": 19, "target_line_code": "@Restricted(NoExternalUse.class)"}, {"target_line_num": 20, "target_line_code": "public class SuspiciousRequestFilter implements Filter {"}, {"target_line_num": 22, "target_line_code": "/** System property name set to true or false to indicate whether or not semicolons should be allowed in URL paths. */"}, {"target_line_num": 23, "target_line_code": "public static final String ALLOW_SEMICOLONS_IN_PATH = SuspiciousRequestFilter.class.getName() + \".allowSemicolonsInPath\";"}, {"target_line_num": 24, "target_line_code": "public static boolean allowSemicolonsInPath = SystemProperties.getBoolean(ALLOW_SEMICOLONS_IN_PATH, false);"}, {"target_line_num": 25, "target_line_code": "private static final Logger LOGGER = Logger.getLogger(SuspiciousRequestFilter.class.getName());"}, {"target_line_num": 27, "target_line_code": "@Override"}, {"target_line_num": 28, "target_line_code": "public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {"}, {"target_line_num": 29, "target_line_code": "HttpServletRequest httpRequest = (HttpServletRequest) request;"}, {"target_line_num": 30, "target_line_code": "HttpServletResponse httpResponse = (HttpServletResponse) response;"}, {"target_line_num": 31, "target_line_code": "if (!allowSemicolonsInPath && httpRequest.getRequestURI().contains(\";\")) {"}, {"target_line_num": 32, "target_line_code": "LOGGER.warning(() -> \"Denying HTTP \" + httpRequest.getMethod() + \" to \" + httpRequest.getRequestURI() +"}, {"target_line_num": 33, "target_line_code": "\" as it has an illegal semicolon in the path. This behavior can be overridden by setting the system property \" +"}, {"target_line_num": 35, "target_line_code": "httpResponse.sendError(HttpServletResponse.SC_BAD_REQUEST, \"Semicolons are not allowed in the request URI\");"}, {"target_line_num": 36, "target_line_code": "} else {"}, {"target_line_num": 37, "target_line_code": "chain.doFilter(request, response);"}, {"target_line_num": 41, "target_line_code": "@Override"}, {"target_line_num": 42, "target_line_code": "public void init(FilterConfig filterConfig) throws ServletException {"}, {"target_line_num": 45, "target_line_code": "@Override"}, {"target_line_num": 46, "target_line_code": "public void destroy() {"}], "removed_line": [], "filename": "core/src/main/java/jenkins/security/SuspiciousRequestFilter.java", "patch_func": "no", "diff_file": "jenkins_CVE-2020-2160_f7cf28355973df1ca6eb19066370bf70b10742f7.diff", "patch_tag": "jenkins-2.204.6", "source_tag": "jenkins-2.204.5"}]