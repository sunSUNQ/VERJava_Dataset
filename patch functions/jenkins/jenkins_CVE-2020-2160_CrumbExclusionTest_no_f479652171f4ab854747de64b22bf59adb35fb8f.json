[{"cve_id": "jenkins", "added_line": [{"target_line_num": 2, "target_line_code": "/*"}, {"target_line_num": 3, "target_line_code": "* The MIT License"}, {"target_line_num": 4, "target_line_code": "*"}, {"target_line_num": 5, "target_line_code": "* Copyright 2020 CloudBees, Inc."}, {"target_line_num": 6, "target_line_code": "*"}, {"target_line_num": 7, "target_line_code": "* Permission is hereby granted, free of charge, to any person obtaining a copy"}, {"target_line_num": 8, "target_line_code": "* of this software and associated documentation files (the \"Software\"), to deal"}, {"target_line_num": 9, "target_line_code": "* in the Software without restriction, including without limitation the rights"}, {"target_line_num": 10, "target_line_code": "* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"}, {"target_line_num": 11, "target_line_code": "* copies of the Software, and to permit persons to whom the Software is"}, {"target_line_num": 12, "target_line_code": "* furnished to do so, subject to the following conditions:"}, {"target_line_num": 13, "target_line_code": "*"}, {"target_line_num": 14, "target_line_code": "* The above copyright notice and this permission notice shall be included in"}, {"target_line_num": 15, "target_line_code": "* all copies or substantial portions of the Software."}, {"target_line_num": 16, "target_line_code": "*"}, {"target_line_num": 17, "target_line_code": "* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"}, {"target_line_num": 18, "target_line_code": "* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"}, {"target_line_num": 19, "target_line_code": "* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE"}, {"target_line_num": 20, "target_line_code": "* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"}, {"target_line_num": 21, "target_line_code": "* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"}, {"target_line_num": 22, "target_line_code": "* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN"}, {"target_line_num": 23, "target_line_code": "* THE SOFTWARE."}, {"target_line_num": 24, "target_line_code": "*/"}, {"target_line_num": 26, "target_line_code": "package hudson.security.csrf;"}, {"target_line_num": 28, "target_line_code": "import com.gargoylesoftware.htmlunit.FailingHttpStatusCodeException;"}, {"target_line_num": 29, "target_line_code": "import com.gargoylesoftware.htmlunit.HttpMethod;"}, {"target_line_num": 30, "target_line_code": "import com.gargoylesoftware.htmlunit.WebRequest;"}, {"target_line_num": 32, "target_line_code": "import java.io.IOException;"}, {"target_line_num": 33, "target_line_code": "import java.net.URL;"}, {"target_line_num": 35, "target_line_code": "import hudson.ExtensionList;"}, {"target_line_num": 36, "target_line_code": "import hudson.model.UnprotectedRootAction;"}, {"target_line_num": 37, "target_line_code": "import jenkins.model.Jenkins;"}, {"target_line_num": 38, "target_line_code": "import static org.hamcrest.Matchers.containsString;"}, {"target_line_num": 40, "target_line_code": "import org.junit.Assert;"}, {"target_line_num": 41, "target_line_code": "import org.junit.Test;"}, {"target_line_num": 42, "target_line_code": "import static org.junit.Assert.*;"}, {"target_line_num": 43, "target_line_code": "import org.junit.Rule;"}, {"target_line_num": 44, "target_line_code": "import org.jvnet.hudson.test.Issue;"}, {"target_line_num": 45, "target_line_code": "import org.jvnet.hudson.test.JenkinsRule;"}, {"target_line_num": 46, "target_line_code": "import org.jvnet.hudson.test.MockAuthorizationStrategy;"}, {"target_line_num": 47, "target_line_code": "import org.jvnet.hudson.test.TestExtension;"}, {"target_line_num": 48, "target_line_code": "import org.kohsuke.stapler.verb.POST;"}, {"target_line_num": 50, "target_line_code": "import javax.annotation.CheckForNull;"}, {"target_line_num": 51, "target_line_code": "import javax.servlet.FilterChain;"}, {"target_line_num": 52, "target_line_code": "import javax.servlet.ServletException;"}, {"target_line_num": 53, "target_line_code": "import javax.servlet.http.HttpServletRequest;"}, {"target_line_num": 54, "target_line_code": "import javax.servlet.http.HttpServletResponse;"}, {"target_line_num": 56, "target_line_code": "public class CrumbExclusionTest {"}, {"target_line_num": 58, "target_line_code": "@Rule"}, {"target_line_num": 59, "target_line_code": "public JenkinsRule r = new JenkinsRule();"}, {"target_line_num": 61, "target_line_code": "@Issue(\"SECURITY-1774\")"}, {"target_line_num": 62, "target_line_code": "@Test"}, {"target_line_num": 63, "target_line_code": "public void pathInfo() throws Exception {"}, {"target_line_num": 64, "target_line_code": "r.jenkins.setSecurityRealm(r.createDummySecurityRealm());"}, {"target_line_num": 65, "target_line_code": "r.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.ADMINISTER).everywhere().to(\"admin\"));"}, {"target_line_num": 66, "target_line_code": "for (String path : new String[] {/* control */ \"scriptText\", /* test */ \"scriptText/..;/cli\"}) {"}, {"target_line_num": 67, "target_line_code": "try {"}, {"target_line_num": 68, "target_line_code": "fail(path + \" should have been rejected: \" + r.createWebClient().login(\"admin\").getPage(new WebRequest(new URL(r.getURL(), path + \"?script=11*11\"), HttpMethod.POST)).getWebResponse().getContentAsString());"}, {"target_line_num": 69, "target_line_code": "} catch (FailingHttpStatusCodeException x) {"}, {"target_line_num": 70, "target_line_code": "assertEquals(\"status code using \" + path, 403, x.getStatusCode());"}, {"target_line_num": 71, "target_line_code": "assertThat(\"error message using \" + path, x.getResponse().getContentAsString(), containsString(\"No valid crumb was included in the request\"));"}, {"target_line_num": 76, "target_line_code": "@Test"}, {"target_line_num": 77, "target_line_code": "public void regular() throws Exception {"}, {"target_line_num": 78, "target_line_code": "r.createWebClient().getPage(new WebRequest(new URL(r.getURL(), \"root/\"), HttpMethod.POST));"}, {"target_line_num": 79, "target_line_code": "Assert.assertTrue(ExtensionList.lookupSingleton(RootActionImpl.class).posted);"}, {"target_line_num": 82, "target_line_code": "@TestExtension"}, {"target_line_num": 83, "target_line_code": "public static class RootActionImpl implements UnprotectedRootAction {"}, {"target_line_num": 85, "target_line_code": "public boolean posted = false;"}, {"target_line_num": 87, "target_line_code": "@CheckForNull"}, {"target_line_num": 88, "target_line_code": "public String getIconFileName() {"}, {"target_line_num": 89, "target_line_code": "return null;"}, {"target_line_num": 92, "target_line_code": "@CheckForNull"}, {"target_line_num": 93, "target_line_code": "public String getDisplayName() {"}, {"target_line_num": 94, "target_line_code": "return null;"}, {"target_line_num": 97, "target_line_code": "@CheckForNull"}, {"target_line_num": 98, "target_line_code": "public String getUrlName() {"}, {"target_line_num": 99, "target_line_code": "return \"root\";"}, {"target_line_num": 102, "target_line_code": "@POST"}, {"target_line_num": 103, "target_line_code": "public void doIndex() {"}, {"target_line_num": 104, "target_line_code": "posted = true;"}, {"target_line_num": 108, "target_line_code": "@TestExtension"}, {"target_line_num": 109, "target_line_code": "public static class CrumbExclusionImpl extends CrumbExclusion {"}, {"target_line_num": 111, "target_line_code": "@Override"}, {"target_line_num": 112, "target_line_code": "public boolean process(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException, ServletException {"}, {"target_line_num": 113, "target_line_code": "String pathInfo = request.getPathInfo();"}, {"target_line_num": 114, "target_line_code": "if (pathInfo != null && pathInfo.startsWith(\"/root/\")) {"}, {"target_line_num": 115, "target_line_code": "chain.doFilter(request, response);"}, {"target_line_num": 116, "target_line_code": "return true;"}, {"target_line_num": 118, "target_line_code": "return false;"}], "removed_line": [], "filename": "test/src/test/java/hudson/security/csrf/CrumbExclusionTest.java", "patch_func": "no", "diff_file": "jenkins_CVE-2020-2160_f479652171f4ab854747de64b22bf59adb35fb8f.diff", "patch_tag": "jenkins-2.204.6", "source_tag": "jenkins-2.204.5"}]