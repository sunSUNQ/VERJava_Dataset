[{"cve_id": "jenkins", "added_line": [{"target_line_num": 2, "target_line_code": "package jenkins.security;"}, {"target_line_num": 4, "target_line_code": "import com.gargoylesoftware.htmlunit.WebRequest;"}, {"target_line_num": 5, "target_line_code": "import com.gargoylesoftware.htmlunit.WebResponse;"}, {"target_line_num": 6, "target_line_code": "import hudson.ExtensionList;"}, {"target_line_num": 7, "target_line_code": "import hudson.model.UnprotectedRootAction;"}, {"target_line_num": 8, "target_line_code": "import org.junit.Rule;"}, {"target_line_num": 9, "target_line_code": "import org.junit.Test;"}, {"target_line_num": 10, "target_line_code": "import org.jvnet.hudson.test.Issue;"}, {"target_line_num": 11, "target_line_code": "import org.jvnet.hudson.test.JenkinsRule;"}, {"target_line_num": 12, "target_line_code": "import org.jvnet.hudson.test.TestExtension;"}, {"target_line_num": 13, "target_line_code": "import org.kohsuke.stapler.QueryParameter;"}, {"target_line_num": 14, "target_line_code": "import org.kohsuke.stapler.verb.GET;"}, {"target_line_num": 16, "target_line_code": "import javax.annotation.CheckForNull;"}, {"target_line_num": 17, "target_line_code": "import javax.servlet.http.HttpServletResponse;"}, {"target_line_num": 18, "target_line_code": "import java.net.URL;"}, {"target_line_num": 20, "target_line_code": "import static org.hamcrest.MatcherAssert.assertThat;"}, {"target_line_num": 21, "target_line_code": "import static org.hamcrest.Matchers.containsString;"}, {"target_line_num": 22, "target_line_code": "import static org.hamcrest.Matchers.is;"}, {"target_line_num": 23, "target_line_code": "import static org.hamcrest.Matchers.nullValue;"}, {"target_line_num": 25, "target_line_code": "@Issue(\"SECURITY-1774\")"}, {"target_line_num": 26, "target_line_code": "public class SuspiciousRequestFilterTest {"}, {"target_line_num": 28, "target_line_code": "@Rule"}, {"target_line_num": 29, "target_line_code": "public JenkinsRule j = new JenkinsRule();"}, {"target_line_num": 31, "target_line_code": "private WebResponse get(String path) throws Exception {"}, {"target_line_num": 32, "target_line_code": "return j.createWebClient()"}, {"target_line_num": 33, "target_line_code": ".withThrowExceptionOnFailingStatusCode(false)"}, {"target_line_num": 34, "target_line_code": ".getPage(new WebRequest(new URL(j.getURL(), path)))"}, {"target_line_num": 35, "target_line_code": ".getWebResponse();"}, {"target_line_num": 38, "target_line_code": "@Test"}, {"target_line_num": 39, "target_line_code": "public void denySemicolonInRequestPathByDefault() throws Exception {"}, {"target_line_num": 40, "target_line_code": "WebResponse response = get(\"foo/bar/..;/?baz=bruh\");"}, {"target_line_num": 41, "target_line_code": "assertThat(Foo.getInstance().baz, is(nullValue()));"}, {"target_line_num": 42, "target_line_code": "assertThat(response.getStatusCode(), is(HttpServletResponse.SC_BAD_REQUEST));"}, {"target_line_num": 43, "target_line_code": "assertThat(response.getContentAsString(), containsString(\"Semicolons are not allowed in the request URI\"));"}, {"target_line_num": 46, "target_line_code": "@Test"}, {"target_line_num": 47, "target_line_code": "public void allowSemicolonsInRequestPathWhenEscapeHatchEnabled() throws Exception {"}, {"target_line_num": 48, "target_line_code": "SuspiciousRequestFilter.allowSemicolonsInPath = true;"}, {"target_line_num": 49, "target_line_code": "try {"}, {"target_line_num": 50, "target_line_code": "WebResponse response = get(\"foo/bar/..;/..;/cli?baz=bruh\");"}, {"target_line_num": 51, "target_line_code": "assertThat(Foo.getInstance().baz, is(\"bruh\"));"}, {"target_line_num": 52, "target_line_code": "assertThat(response.getStatusCode(), is(HttpServletResponse.SC_OK));"}, {"target_line_num": 53, "target_line_code": "} finally {"}, {"target_line_num": 54, "target_line_code": "SuspiciousRequestFilter.allowSemicolonsInPath = false;"}, {"target_line_num": 58, "target_line_code": "@Test"}, {"target_line_num": 59, "target_line_code": "public void allowSemicolonsInQueryParameters() throws Exception {"}, {"target_line_num": 60, "target_line_code": "WebResponse response = get(\"foo/bar?baz=foo;bar=baz\");"}, {"target_line_num": 61, "target_line_code": "assertThat(Foo.getInstance().baz, is(\"foo;bar=baz\"));"}, {"target_line_num": 62, "target_line_code": "assertThat(response.getStatusCode(), is(HttpServletResponse.SC_OK));"}, {"target_line_num": 65, "target_line_code": "@TestExtension"}, {"target_line_num": 66, "target_line_code": "public static class Foo implements UnprotectedRootAction {"}, {"target_line_num": 68, "target_line_code": "private static Foo getInstance() {"}, {"target_line_num": 69, "target_line_code": "return ExtensionList.lookupSingleton(Foo.class);"}, {"target_line_num": 72, "target_line_code": "private String baz;"}, {"target_line_num": 74, "target_line_code": "@CheckForNull"}, {"target_line_num": 75, "target_line_code": "@Override"}, {"target_line_num": 76, "target_line_code": "public String getIconFileName() {"}, {"target_line_num": 77, "target_line_code": "return null;"}, {"target_line_num": 80, "target_line_code": "@CheckForNull"}, {"target_line_num": 81, "target_line_code": "@Override"}, {"target_line_num": 82, "target_line_code": "public String getDisplayName() {"}, {"target_line_num": 83, "target_line_code": "return \"Pitied Foos\";"}, {"target_line_num": 86, "target_line_code": "@CheckForNull"}, {"target_line_num": 87, "target_line_code": "@Override"}, {"target_line_num": 88, "target_line_code": "public String getUrlName() {"}, {"target_line_num": 89, "target_line_code": "return \"foo\";"}, {"target_line_num": 92, "target_line_code": "@GET"}, {"target_line_num": 93, "target_line_code": "public void doBar(@QueryParameter String baz) {"}, {"target_line_num": 94, "target_line_code": "this.baz = baz;"}, {"target_line_num": 97, "target_line_code": "@GET"}, {"target_line_num": 98, "target_line_code": "public void doIndex(@QueryParameter String baz) {"}, {"target_line_num": 99, "target_line_code": "this.baz = \"index: \" + baz;"}], "removed_line": [], "filename": "test/src/test/java/jenkins/security/SuspiciousRequestFilterTest.java", "patch_func": "no", "diff_file": "jenkins_CVE-2020-2160_f7cf28355973df1ca6eb19066370bf70b10742f7.diff", "patch_tag": "jenkins-2.204.6", "source_tag": "jenkins-2.204.5"}]