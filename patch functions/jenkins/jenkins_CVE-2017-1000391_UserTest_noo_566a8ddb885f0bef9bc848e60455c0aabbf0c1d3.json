[{"cve_id": "jenkins", "added_line": [{"target_line_num": 724, "target_line_code": "@Test"}, {"target_line_num": 725, "target_line_code": "@Issue(\"SECURITY-499\")"}, {"target_line_num": 726, "target_line_code": "public void createdUsersHaveCorrectConfigLocation() {"}, {"target_line_num": 727, "target_line_code": "assertCorrectConfig(User.getById(\"admin\", true), \"users/admin/config.xml\");"}, {"target_line_num": 728, "target_line_code": "assertCorrectConfig(User.getById(\"foo\", true), \"users/foo/config.xml\");"}, {"target_line_num": 729, "target_line_code": "assertCorrectConfig(User.getById(\"foo/bar\", true), \"users/foo$002fbar/config.xml\");"}, {"target_line_num": 730, "target_line_code": "assertCorrectConfig(User.getById(\"foo/bar/baz\", true), \"users/foo$002fbar$002fbaz/config.xml\");"}, {"target_line_num": 731, "target_line_code": "assertCorrectConfig(User.getById(\"/\", true), \"users/$002f/config.xml\");"}, {"target_line_num": 732, "target_line_code": "assertCorrectConfig(User.getById(\".\", true), \"users/$002f/config.xml\");"}, {"target_line_num": 733, "target_line_code": "assertCorrectConfig(User.getById(\"..\", true), \"users/$002e$002e/config.xml\");"}, {"target_line_num": 734, "target_line_code": "assertCorrectConfig(User.getById(\"../config.xml\", true), \"users/..$002fconfig.xml/config.xml\");"}, {"target_line_num": 737, "target_line_code": "@Test"}, {"target_line_num": 738, "target_line_code": "@Issue(\"SECURITY-499\")"}, {"target_line_num": 739, "target_line_code": "@LocalData"}, {"target_line_num": 740, "target_line_code": "public void legacyUserConfigDirsMigrated() {"}, {"target_line_num": 741, "target_line_code": "File rootDir = new File(Jenkins.getInstance().getRootDir(), \"users\");"}, {"target_line_num": 743, "target_line_code": "User admin = User.getById(\"admin\", false);"}, {"target_line_num": 744, "target_line_code": "assertCorrectConfig(admin, \"users/admin/config.xml\");"}, {"target_line_num": 745, "target_line_code": "assertTrue(admin.getConfigFile().getFile().exists());"}, {"target_line_num": 746, "target_line_code": "assertThat(admin.getFullName(), equalTo(\"Admin\"));"}, {"target_line_num": 748, "target_line_code": "User foo = User.getById(\"foo\", false);"}, {"target_line_num": 749, "target_line_code": "File fooDir = new File(rootDir, \"foo\");"}, {"target_line_num": 750, "target_line_code": "assertCorrectConfig(foo, \"users/foo/config.xml\");"}, {"target_line_num": 751, "target_line_code": "assertTrue(foo.getConfigFile().getFile().exists());"}, {"target_line_num": 752, "target_line_code": "assertTrue(fooDir.exists());"}, {"target_line_num": 753, "target_line_code": "assertThat(foo.getFullName(), equalTo(\"Foo\"));"}, {"target_line_num": 755, "target_line_code": "User fooBar = User.getById(\"foo/bar\", false);"}, {"target_line_num": 756, "target_line_code": "File fooBarDir = new File(fooDir, \"bar\");"}, {"target_line_num": 757, "target_line_code": "assertCorrectConfig(fooBar, \"users/foo$002fbar/config.xml\");"}, {"target_line_num": 758, "target_line_code": "assertTrue(fooBar.getConfigFile().getFile().exists());"}, {"target_line_num": 759, "target_line_code": "assertTrue(fooDir.exists());"}, {"target_line_num": 760, "target_line_code": "assertTrue(fooBarDir.exists());"}, {"target_line_num": 761, "target_line_code": "assertThat(fooBar.getFullName(), equalTo(\"Foo Bar\"));"}, {"target_line_num": 763, "target_line_code": "User fooBaz = User.getById(\"foo/baz\", false);"}, {"target_line_num": 764, "target_line_code": "File fooBazDir = new File(fooDir, \"baz\");"}, {"target_line_num": 765, "target_line_code": "assertCorrectConfig(fooBaz, \"users/foo$002fbaz/config.xml\");"}, {"target_line_num": 766, "target_line_code": "assertTrue(fooBaz.getConfigFile().getFile().exists());"}, {"target_line_num": 767, "target_line_code": "assertTrue(fooDir.exists());"}, {"target_line_num": 768, "target_line_code": "assertFalse(fooBazDir.exists());"}, {"target_line_num": 769, "target_line_code": "assertThat(fooBaz.getFullName(), equalTo(\"Foo Baz\"));"}, {"target_line_num": 771, "target_line_code": "User fooBarBaz = User.getById(\"foo/bar/baz\", false);"}, {"target_line_num": 772, "target_line_code": "File fooBarBazDir = new File(fooBarDir, \"baz\");"}, {"target_line_num": 773, "target_line_code": "assertCorrectConfig(fooBarBaz, \"users/foo$002fbar$002fbaz/config.xml\");"}, {"target_line_num": 774, "target_line_code": "assertTrue(fooBarBaz.getConfigFile().getFile().exists());"}, {"target_line_num": 775, "target_line_code": "assertTrue(fooDir.exists());"}, {"target_line_num": 776, "target_line_code": "assertFalse(fooBarBazDir.exists());"}, {"target_line_num": 777, "target_line_code": "assertFalse(fooBarDir.exists());"}, {"target_line_num": 778, "target_line_code": "assertThat(fooBarBaz.getFullName(), equalTo(\"Foo Bar Baz\"));"}, {"target_line_num": 780, "target_line_code": "User slash = User.getById(\"/\", false);"}, {"target_line_num": 781, "target_line_code": "File slashDir = new File(rootDir, \"$002f\");"}, {"target_line_num": 782, "target_line_code": "assertCorrectConfig(slash, \"users/$002f/config.xml\");"}, {"target_line_num": 783, "target_line_code": "assertTrue(slash.getConfigFile().getFile().exists());"}, {"target_line_num": 784, "target_line_code": "assertTrue(slashDir.exists());"}, {"target_line_num": 785, "target_line_code": "assertFalse(new File(rootDir, \"config.xml\").exists());"}, {"target_line_num": 786, "target_line_code": "assertThat(slash.getFullName(), equalTo(\"Slash\"));"}, {"target_line_num": 789, "target_line_code": "@Test"}, {"target_line_num": 790, "target_line_code": "@Issue(\"SECURITY-499\")"}, {"target_line_num": 791, "target_line_code": "@LocalData"}, {"target_line_num": 792, "target_line_code": "public void emptyUsernameConfigMigrated() {"}, {"target_line_num": 793, "target_line_code": "File rootDir = new File(Jenkins.getInstance().getRootDir(), \"users\");"}, {"target_line_num": 795, "target_line_code": "User admin = User.getById(\"admin\", false);"}, {"target_line_num": 796, "target_line_code": "assertCorrectConfig(admin, \"users/admin/config.xml\");"}, {"target_line_num": 797, "target_line_code": "assertTrue(admin.getConfigFile().getFile().exists());"}, {"target_line_num": 798, "target_line_code": "assertThat(admin.getFullName(), equalTo(\"Admin\"));"}, {"target_line_num": 800, "target_line_code": "User empty = User.getById(\"\", false);"}, {"target_line_num": 801, "target_line_code": "File emptyDir = new File(rootDir, \"$002f\");"}, {"target_line_num": 802, "target_line_code": "assertCorrectConfig(empty, \"users/$002f/config.xml\");"}, {"target_line_num": 803, "target_line_code": "assertTrue(empty.getConfigFile().getFile().exists());"}, {"target_line_num": 804, "target_line_code": "assertTrue(emptyDir.exists());"}, {"target_line_num": 805, "target_line_code": "assertFalse(new File(rootDir, \"config.xml\").exists());"}, {"target_line_num": 806, "target_line_code": "assertThat(empty.getFullName(), equalTo(\"Empty\"));"}, {"target_line_num": 809, "target_line_code": "private static void assertCorrectConfig(User user, String unixPath) {"}, {"target_line_num": 810, "target_line_code": "assertThat(user.getConfigFile().getFile().getPath(), endsWith(unixPath.replace('/', File.separatorChar)));"}], "removed_line": [], "filename": "test/src/test/java/hudson/model/UserTest.java", "patch_func": "no", "diff_file": "jenkins_CVE-2017-1000391_566a8ddb885f0bef9bc848e60455c0aabbf0c1d3.diff", "patch_tag": "jenkins-2.100", "source_tag": "jenkins-2.99"}]