[{"cve_id": "CVE-2012-3544", "added_line": [{"target_line_num": 415, "target_line_code": "if (pos >= lastValid) {"}, {"target_line_num": 416, "target_line_code": "if (readBytes() <0)"}, {"target_line_num": 417, "target_line_code": "throw new EOFException(\"Unexpected end of stream whilst reading trailer headers for chunked request\");"}, {"target_line_num": 420, "target_line_code": "chr = buf[pos];"}, {"target_line_num": 423, "target_line_code": "if (chr == Constants.CR || chr == Constants.LF) {"}, {"target_line_num": 426, "target_line_code": "parseCRLF(true);"}, {"target_line_num": 425, "target_line_code": "return false;"}, {"target_line_num": 505, "target_line_code": "if (chr == Constants.CR || chr == Constants.LF) {"}, {"target_line_num": 508, "target_line_code": "parseCRLF(true);"}, {"target_line_num": 415, "target_line_code": "if (pos >= lastValid) {"}, {"target_line_num": 416, "target_line_code": "if (readBytes() <0)"}, {"target_line_num": 417, "target_line_code": "throw new EOFException(\"Unexpected end of stream whilst reading trailer headers for chunked request\");"}, {"target_line_num": 420, "target_line_code": "chr = buf[pos];"}, {"target_line_num": 425, "target_line_code": "if (chr == Constants.CR || chr == Constants.LF) {"}, {"target_line_num": 425, "target_line_code": "return false;"}, {"target_line_num": 507, "target_line_code": "if (chr == Constants.CR || chr == Constants.LF) {"}], "removed_line": [{"source_line_num": 396, "source_line_code": "while (true) {"}, {"source_line_num": 398, "source_line_code": "if (pos >= lastValid) {"}, {"source_line_num": 399, "source_line_code": "if (readBytes() <0)"}, {"source_line_num": 400, "source_line_code": "throw new EOFException(\"Unexpected end of stream whilst reading trailer headers for chunked request\");"}, {"source_line_num": 403, "source_line_code": "chr = buf[pos];"}, {"source_line_num": 405, "source_line_code": "if ((chr == Constants.CR) || (chr == Constants.LF)) {"}, {"source_line_num": 406, "source_line_code": "if (chr == Constants.LF) {"}, {"source_line_num": 407, "source_line_code": "pos++;"}, {"source_line_num": 408, "source_line_code": "return false;"}, {"source_line_num": 410, "source_line_code": "} else {"}, {"source_line_num": 411, "source_line_code": "break;"}, {"source_line_num": 407, "source_line_code": "pos++;"}, {"source_line_num": 495, "source_line_code": "if (chr == Constants.CR) {"}, {"source_line_num": 497, "source_line_code": "} else if (chr == Constants.LF) {"}, {"source_line_num": 396, "source_line_code": "while (true) {"}, {"source_line_num": 398, "source_line_code": "if (pos >= lastValid) {"}, {"source_line_num": 399, "source_line_code": "if (readBytes() <0)"}, {"source_line_num": 400, "source_line_code": "throw new EOFException(\"Unexpected end of stream whilst reading trailer headers for chunked request\");"}, {"source_line_num": 403, "source_line_code": "chr = buf[pos];"}, {"source_line_num": 405, "source_line_code": "if ((chr == Constants.CR) || (chr == Constants.LF)) {"}, {"source_line_num": 406, "source_line_code": "if (chr == Constants.LF) {"}, {"source_line_num": 407, "source_line_code": "pos++;"}, {"source_line_num": 408, "source_line_code": "return false;"}, {"source_line_num": 410, "source_line_code": "} else {"}, {"source_line_num": 411, "source_line_code": "break;"}, {"source_line_num": 407, "source_line_code": "pos++;"}, {"source_line_num": 495, "source_line_code": "if (chr == Constants.CR) {"}, {"source_line_num": 497, "source_line_code": "} else if (chr == Constants.LF) {"}], "filename": "archive/tc7.0.x/trunk/java/org/apache/coyote/http11/filters/ChunkedInputFilter.java", "patch_func": "parseHeader", "diff_file": "CVE-2012-3544_1378702.diff", "patch_tag": "7.0.30", "source_tag": "7.0.29"}]