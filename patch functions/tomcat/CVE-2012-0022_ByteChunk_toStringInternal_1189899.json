[{"cve_id": "CVE-2012-0022", "added_line": [{"target_line_num": 516, "target_line_code": "if (charset == null) {"}, {"target_line_num": 517, "target_line_code": "charset = DEFAULT_CHARSET;"}, {"target_line_num": 522, "target_line_code": "CharBuffer cb;"}, {"target_line_num": 523, "target_line_code": "cb = charset.decode(ByteBuffer.wrap(buff, start, end-start));"}, {"target_line_num": 524, "target_line_code": "return new String(cb.array());"}], "removed_line": [{"source_line_num": 500, "source_line_code": "String strValue=null;"}, {"source_line_num": 501, "source_line_code": "try {"}, {"source_line_num": 502, "source_line_code": "if (enc == null) {"}, {"source_line_num": 503, "source_line_code": "enc = DEFAULT_CHARACTER_ENCODING;"}, {"source_line_num": 505, "source_line_code": "strValue = new String(buff, start, end-start,"}, {"source_line_num": 506, "source_line_code": "B2CConverter.getCharset(enc));"}, {"source_line_num": 507, "source_line_code": "/*"}, {"source_line_num": 508, "source_line_code": "Does not improve the speed too much on most systems,"}, {"source_line_num": 509, "source_line_code": "it's safer to use the \"classical\" new String()."}, {"source_line_num": 511, "source_line_code": "Most overhead is in creating char[] and copying,"}, {"source_line_num": 512, "source_line_code": "the internal implementation of new String() is very close to"}, {"source_line_num": 513, "source_line_code": "what we do. The decoder is nice for large buffers and if"}, {"source_line_num": 514, "source_line_code": "we don't go to String ( so we can take advantage of reduced GC)"}, {"source_line_num": 517, "source_line_code": "return B2CConverter.decodeString( enc );"}, {"source_line_num": 519, "source_line_code": "} catch (java.io.UnsupportedEncodingException e) {"}, {"source_line_num": 522, "source_line_code": "strValue = new String(buff, start, end-start);"}, {"source_line_num": 524, "source_line_code": "return strValue;"}, {"source_line_num": 500, "source_line_code": "String strValue=null;"}, {"source_line_num": 501, "source_line_code": "try {"}, {"source_line_num": 502, "source_line_code": "if (enc == null) {"}, {"source_line_num": 503, "source_line_code": "enc = DEFAULT_CHARACTER_ENCODING;"}, {"source_line_num": 505, "source_line_code": "strValue = new String(buff, start, end-start,"}, {"source_line_num": 506, "source_line_code": "B2CConverter.getCharset(enc));"}, {"source_line_num": 507, "source_line_code": "/*"}, {"source_line_num": 508, "source_line_code": "Does not improve the speed too much on most systems,"}, {"source_line_num": 509, "source_line_code": "it's safer to use the \"classical\" new String()."}, {"source_line_num": 511, "source_line_code": "Most overhead is in creating char[] and copying,"}, {"source_line_num": 512, "source_line_code": "the internal implementation of new String() is very close to"}, {"source_line_num": 513, "source_line_code": "what we do. The decoder is nice for large buffers and if"}, {"source_line_num": 514, "source_line_code": "we don't go to String ( so we can take advantage of reduced GC)"}, {"source_line_num": 517, "source_line_code": "return B2CConverter.decodeString( enc );"}, {"source_line_num": 519, "source_line_code": "} catch (java.io.UnsupportedEncodingException e) {"}, {"source_line_num": 522, "source_line_code": "strValue = new String(buff, start, end-start);"}, {"source_line_num": 524, "source_line_code": "return strValue;"}], "filename": "archive/tc7.0.x/trunk/java/org/apache/tomcat/util/buf/ByteChunk.java", "patch_func": "toStringInternal", "diff_file": "CVE-2012-0022_1189899.diff", "patch_tag": "7.0.23", "source_tag": "7.0.22"}]