[{"cve_id": "spring-security", "added_line": [{"target_line_num": 1, "target_line_code": "/*"}, {"target_line_num": 2, "target_line_code": "* Copyright 2012-2016 the original author or authors."}, {"target_line_num": 3, "target_line_code": "*"}, {"target_line_num": 4, "target_line_code": "* Licensed under the Apache License, Version 2.0 (the \"License\");"}, {"target_line_num": 5, "target_line_code": "* you may not use this file except in compliance with the License."}, {"target_line_num": 6, "target_line_code": "* You may obtain a copy of the License at"}, {"target_line_num": 3, "target_line_code": "*"}, {"target_line_num": 3, "target_line_code": "*"}, {"target_line_num": 10, "target_line_code": "* Unless required by applicable law or agreed to in writing, software"}, {"target_line_num": 11, "target_line_code": "* distributed under the License is distributed on an \"AS IS\" BASIS,"}, {"target_line_num": 12, "target_line_code": "* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."}, {"target_line_num": 13, "target_line_code": "* See the License for the specific language governing permissions and"}, {"target_line_num": 14, "target_line_code": "* limitations under the License."}, {"target_line_num": 15, "target_line_code": "*/"}, {"target_line_num": 17, "target_line_code": "package org.springframework.security.web.servlet.util.matcher;"}, {"target_line_num": 19, "target_line_code": "import java.util.Collections;"}, {"target_line_num": 20, "target_line_code": "import java.util.Map;"}, {"target_line_num": 22, "target_line_code": "import javax.servlet.http.HttpServletRequest;"}, {"target_line_num": 24, "target_line_code": "import org.springframework.http.HttpMethod;"}, {"target_line_num": 25, "target_line_code": "import org.springframework.security.web.util.matcher.RequestMatcher;"}, {"target_line_num": 26, "target_line_code": "import org.springframework.security.web.util.matcher.RequestVariablesExtractor;"}, {"target_line_num": 27, "target_line_code": "import org.springframework.util.AntPathMatcher;"}, {"target_line_num": 28, "target_line_code": "import org.springframework.util.PathMatcher;"}, {"target_line_num": 29, "target_line_code": "import org.springframework.web.servlet.handler.HandlerMappingIntrospector;"}, {"target_line_num": 30, "target_line_code": "import org.springframework.web.servlet.handler.MatchableHandlerMapping;"}, {"target_line_num": 31, "target_line_code": "import org.springframework.web.servlet.handler.RequestMatchResult;"}, {"target_line_num": 32, "target_line_code": "import org.springframework.web.util.UrlPathHelper;"}, {"target_line_num": 35, "target_line_code": "* A {@link RequestMatcher} that uses Spring MVC's {@link HandlerMappingIntrospector} to"}, {"target_line_num": 36, "target_line_code": "* match the path and extract variables."}, {"target_line_num": 37, "target_line_code": "*"}, {"target_line_num": 38, "target_line_code": "* @author Rob Winch"}, {"target_line_num": 39, "target_line_code": "* @since 4.1.1"}, {"target_line_num": 40, "target_line_code": "*/"}, {"target_line_num": 41, "target_line_code": "public final class MvcRequestMatcher"}, {"target_line_num": 42, "target_line_code": "implements RequestMatcher, RequestVariablesExtractor {"}, {"target_line_num": 43, "target_line_code": "private final DefaultMatcher defaultMatcher = new DefaultMatcher();"}, {"target_line_num": 45, "target_line_code": "private final HandlerMappingIntrospector introspector;"}, {"target_line_num": 46, "target_line_code": "private final String pattern;"}, {"target_line_num": 47, "target_line_code": "private HttpMethod method;"}, {"target_line_num": 49, "target_line_code": "public MvcRequestMatcher(HandlerMappingIntrospector introspector, String pattern) {"}, {"target_line_num": 50, "target_line_code": "this.introspector = introspector;"}, {"target_line_num": 51, "target_line_code": "this.pattern = pattern;"}, {"target_line_num": 55, "target_line_code": "public boolean matches(HttpServletRequest request) {"}, {"target_line_num": 56, "target_line_code": "if (this.method != null && !this.method.name().equals(request.getMethod())) {"}, {"target_line_num": 57, "target_line_code": "return false;"}, {"target_line_num": 59, "target_line_code": "MatchableHandlerMapping mapping = getMapping(request);"}, {"target_line_num": 60, "target_line_code": "if (mapping == null) {"}, {"target_line_num": 61, "target_line_code": "return this.defaultMatcher.matches(request);"}, {"target_line_num": 63, "target_line_code": "RequestMatchResult matchResult = mapping.match(request, this.pattern);"}, {"target_line_num": 64, "target_line_code": "return matchResult != null;"}, {"target_line_num": 67, "target_line_code": "private MatchableHandlerMapping getMapping(HttpServletRequest request) {"}, {"target_line_num": 68, "target_line_code": "try {"}, {"target_line_num": 69, "target_line_code": "return this.introspector.getMatchableHandlerMapping(request);"}, {"target_line_num": 71, "target_line_code": "catch (Throwable t) {"}, {"target_line_num": 72, "target_line_code": "return null;"}, {"target_line_num": 76, "target_line_code": "/*"}, {"target_line_num": 77, "target_line_code": "* (non-Javadoc)"}, {"target_line_num": 78, "target_line_code": "*"}, {"target_line_num": 79, "target_line_code": "* @see org.springframework.security.web.util.matcher.RequestVariablesExtractor#"}, {"target_line_num": 80, "target_line_code": "* extractUriTemplateVariables(javax.servlet.http.HttpServletRequest)"}, {"target_line_num": 81, "target_line_code": "*/"}, {"target_line_num": 83, "target_line_code": "public Map<String, String> extractUriTemplateVariables(HttpServletRequest request) {"}, {"target_line_num": 84, "target_line_code": "MatchableHandlerMapping mapping = getMapping(request);"}, {"target_line_num": 85, "target_line_code": "if (mapping == null) {"}, {"target_line_num": 86, "target_line_code": "return this.defaultMatcher.extractUriTemplateVariables(request);"}, {"target_line_num": 88, "target_line_code": "RequestMatchResult result = mapping.match(request, this.pattern);"}, {"target_line_num": 89, "target_line_code": "return result == null ? Collections.<String, String>emptyMap()"}, {"target_line_num": 90, "target_line_code": ": result.extractUriTemplateVariables();"}, {"target_line_num": 94, "target_line_code": "* @param method the method to set"}, {"target_line_num": 95, "target_line_code": "*/"}, {"target_line_num": 96, "target_line_code": "public void setMethod(HttpMethod method) {"}, {"target_line_num": 97, "target_line_code": "this.method = method;"}, {"target_line_num": 100, "target_line_code": "private class DefaultMatcher implements RequestMatcher, RequestVariablesExtractor {"}, {"target_line_num": 102, "target_line_code": "private final UrlPathHelper pathHelper = new UrlPathHelper();"}, {"target_line_num": 104, "target_line_code": "private final PathMatcher pathMatcher = new AntPathMatcher();"}, {"target_line_num": 107, "target_line_code": "public boolean matches(HttpServletRequest request) {"}, {"target_line_num": 108, "target_line_code": "String lookupPath = this.pathHelper.getLookupPathForRequest(request);"}, {"target_line_num": 109, "target_line_code": "return matches(lookupPath);"}, {"target_line_num": 112, "target_line_code": "private boolean matches(String lookupPath) {"}, {"target_line_num": 113, "target_line_code": "return this.pathMatcher.match(MvcRequestMatcher.this.pattern, lookupPath);"}, {"target_line_num": 117, "target_line_code": "public Map<String, String> extractUriTemplateVariables("}, {"target_line_num": 118, "target_line_code": "HttpServletRequest request) {"}, {"target_line_num": 119, "target_line_code": "String lookupPath = this.pathHelper.getLookupPathForRequest(request);"}, {"target_line_num": 120, "target_line_code": "if (matches(lookupPath)) {"}, {"target_line_num": 121, "target_line_code": "return this.pathMatcher.extractUriTemplateVariables("}, {"target_line_num": 122, "target_line_code": "MvcRequestMatcher.this.pattern, lookupPath);"}, {"target_line_num": 124, "target_line_code": "return Collections.emptyMap();"}, {"target_line_num": 2, "target_line_code": "/*"}, {"target_line_num": 3, "target_line_code": "* Copyright 2012-2016 the original author or authors."}, {"target_line_num": 4, "target_line_code": "*"}, {"target_line_num": 5, "target_line_code": "* Licensed under the Apache License, Version 2.0 (the \"License\");"}, {"target_line_num": 6, "target_line_code": "* you may not use this file except in compliance with the License."}, {"target_line_num": 7, "target_line_code": "* You may obtain a copy of the License at"}, {"target_line_num": 8, "target_line_code": "*"}, {"target_line_num": 10, "target_line_code": "*"}, {"target_line_num": 11, "target_line_code": "* Unless required by applicable law or agreed to in writing, software"}, {"target_line_num": 12, "target_line_code": "* distributed under the License is distributed on an \"AS IS\" BASIS,"}, {"target_line_num": 13, "target_line_code": "* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."}, {"target_line_num": 14, "target_line_code": "* See the License for the specific language governing permissions and"}, {"target_line_num": 15, "target_line_code": "* limitations under the License."}, {"target_line_num": 16, "target_line_code": "*/"}, {"target_line_num": 18, "target_line_code": "package org.springframework.security.web.servlet.util.matcher;"}, {"target_line_num": 20, "target_line_code": "import java.util.Collections;"}, {"target_line_num": 21, "target_line_code": "import java.util.Map;"}, {"target_line_num": 23, "target_line_code": "import javax.servlet.http.HttpServletRequest;"}, {"target_line_num": 25, "target_line_code": "import org.springframework.http.HttpMethod;"}, {"target_line_num": 26, "target_line_code": "import org.springframework.security.web.util.matcher.RequestMatcher;"}, {"target_line_num": 27, "target_line_code": "import org.springframework.security.web.util.matcher.RequestVariablesExtractor;"}, {"target_line_num": 28, "target_line_code": "import org.springframework.util.AntPathMatcher;"}, {"target_line_num": 29, "target_line_code": "import org.springframework.util.PathMatcher;"}, {"target_line_num": 30, "target_line_code": "import org.springframework.web.servlet.handler.HandlerMappingIntrospector;"}, {"target_line_num": 31, "target_line_code": "import org.springframework.web.servlet.handler.MatchableHandlerMapping;"}, {"target_line_num": 32, "target_line_code": "import org.springframework.web.servlet.handler.RequestMatchResult;"}, {"target_line_num": 33, "target_line_code": "import org.springframework.web.util.UrlPathHelper;"}, {"target_line_num": 35, "target_line_code": "/**"}, {"target_line_num": 36, "target_line_code": "* A {@link RequestMatcher} that uses Spring MVC's {@link HandlerMappingIntrospector} to"}, {"target_line_num": 37, "target_line_code": "* match the path and extract variables."}, {"target_line_num": 38, "target_line_code": "*"}, {"target_line_num": 39, "target_line_code": "* @author Rob Winch"}, {"target_line_num": 40, "target_line_code": "* @since 4.1.1"}, {"target_line_num": 41, "target_line_code": "*/"}, {"target_line_num": 42, "target_line_code": "public final class MvcRequestMatcher"}, {"target_line_num": 43, "target_line_code": "implements RequestMatcher, RequestVariablesExtractor {"}, {"target_line_num": 44, "target_line_code": "private final DefaultMatcher defaultMatcher = new DefaultMatcher();"}, {"target_line_num": 46, "target_line_code": "private final HandlerMappingIntrospector introspector;"}, {"target_line_num": 47, "target_line_code": "private final String pattern;"}, {"target_line_num": 48, "target_line_code": "private HttpMethod method;"}, {"target_line_num": 50, "target_line_code": "public MvcRequestMatcher(HandlerMappingIntrospector introspector, String pattern) {"}, {"target_line_num": 51, "target_line_code": "this.introspector = introspector;"}, {"target_line_num": 52, "target_line_code": "this.pattern = pattern;"}, {"target_line_num": 55, "target_line_code": "@Override"}, {"target_line_num": 56, "target_line_code": "public boolean matches(HttpServletRequest request) {"}, {"target_line_num": 57, "target_line_code": "if (this.method != null && !this.method.name().equals(request.getMethod())) {"}, {"target_line_num": 58, "target_line_code": "return false;"}, {"target_line_num": 60, "target_line_code": "MatchableHandlerMapping mapping = getMapping(request);"}, {"target_line_num": 61, "target_line_code": "if (mapping == null) {"}, {"target_line_num": 62, "target_line_code": "return this.defaultMatcher.matches(request);"}, {"target_line_num": 64, "target_line_code": "RequestMatchResult matchResult = mapping.match(request, this.pattern);"}, {"target_line_num": 65, "target_line_code": "return matchResult != null;"}, {"target_line_num": 68, "target_line_code": "private MatchableHandlerMapping getMapping(HttpServletRequest request) {"}, {"target_line_num": 69, "target_line_code": "try {"}, {"target_line_num": 70, "target_line_code": "return this.introspector.getMatchableHandlerMapping(request);"}, {"target_line_num": 72, "target_line_code": "catch (Throwable t) {"}, {"target_line_num": 73, "target_line_code": "return null;"}, {"target_line_num": 77, "target_line_code": "/*"}, {"target_line_num": 78, "target_line_code": "* (non-Javadoc)"}, {"target_line_num": 79, "target_line_code": "*"}, {"target_line_num": 80, "target_line_code": "* @see org.springframework.security.web.util.matcher.RequestVariablesExtractor#"}, {"target_line_num": 81, "target_line_code": "* extractUriTemplateVariables(javax.servlet.http.HttpServletRequest)"}, {"target_line_num": 82, "target_line_code": "*/"}, {"target_line_num": 83, "target_line_code": "@Override"}, {"target_line_num": 84, "target_line_code": "public Map<String, String> extractUriTemplateVariables(HttpServletRequest request) {"}, {"target_line_num": 85, "target_line_code": "MatchableHandlerMapping mapping = getMapping(request);"}, {"target_line_num": 86, "target_line_code": "if (mapping == null) {"}, {"target_line_num": 87, "target_line_code": "return this.defaultMatcher.extractUriTemplateVariables(request);"}, {"target_line_num": 89, "target_line_code": "RequestMatchResult result = mapping.match(request, this.pattern);"}, {"target_line_num": 90, "target_line_code": "return result == null ? Collections.<String, String>emptyMap()"}, {"target_line_num": 91, "target_line_code": ": result.extractUriTemplateVariables();"}, {"target_line_num": 94, "target_line_code": "/**"}, {"target_line_num": 95, "target_line_code": "* @param method the method to set"}, {"target_line_num": 96, "target_line_code": "*/"}, {"target_line_num": 97, "target_line_code": "public void setMethod(HttpMethod method) {"}, {"target_line_num": 98, "target_line_code": "this.method = method;"}, {"target_line_num": 101, "target_line_code": "private class DefaultMatcher implements RequestMatcher, RequestVariablesExtractor {"}, {"target_line_num": 103, "target_line_code": "private final UrlPathHelper pathHelper = new UrlPathHelper();"}, {"target_line_num": 105, "target_line_code": "private final PathMatcher pathMatcher = new AntPathMatcher();"}, {"target_line_num": 107, "target_line_code": "@Override"}, {"target_line_num": 108, "target_line_code": "public boolean matches(HttpServletRequest request) {"}, {"target_line_num": 109, "target_line_code": "String lookupPath = this.pathHelper.getLookupPathForRequest(request);"}, {"target_line_num": 110, "target_line_code": "return matches(lookupPath);"}, {"target_line_num": 113, "target_line_code": "private boolean matches(String lookupPath) {"}, {"target_line_num": 114, "target_line_code": "return this.pathMatcher.match(MvcRequestMatcher.this.pattern, lookupPath);"}, {"target_line_num": 117, "target_line_code": "@Override"}, {"target_line_num": 118, "target_line_code": "public Map<String, String> extractUriTemplateVariables("}, {"target_line_num": 119, "target_line_code": "HttpServletRequest request) {"}, {"target_line_num": 120, "target_line_code": "String lookupPath = this.pathHelper.getLookupPathForRequest(request);"}, {"target_line_num": 121, "target_line_code": "if (matches(lookupPath)) {"}, {"target_line_num": 122, "target_line_code": "return this.pathMatcher.extractUriTemplateVariables("}, {"target_line_num": 123, "target_line_code": "MvcRequestMatcher.this.pattern, lookupPath);"}, {"target_line_num": 125, "target_line_code": "return Collections.emptyMap();"}], "removed_line": [], "filename": "web/src/main/java/org/springframework/security/web/servlet/util/matcher/MvcRequestMatcher.java", "patch_func": "no", "diff_file": "spring-security_CVE-2016-5007_e4c13e.diff", "patch_tag": "4.1.1.RELEASE", "source_tag": "4.1.0.RELEASE"}]